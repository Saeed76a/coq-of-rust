(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.
Require CoqOfRust.ink.ink_metadata.
Require CoqOfRust.ink.ink_primitives.
Require CoqOfRust.ink.parity_scale_codec.

Module storage.
  Module Storable.
    Class Trait (Self : Set) `{core.marker.Sized.Trait Self} : Type := {
      encode
        `{State.Trait}
        {T : Set}
        `{H'0 : parity_scale_codec.codec.Output.Trait T}
        `{H'1 : core.marker.Sized.Trait T}
        :
        (ref Self) -> (mut_ref T) -> M unit;
      decode
        `{State.Trait}
        {I : Set}
        `{H'0 : parity_scale_codec.codec.Input.Trait I}
        :
        (mut_ref I) ->
          M (core.result.Result Self parity_scale_codec.error.Error);
    }.
    
    Global Instance Method_encode `{State.Trait} `(Trait)
      : Notation.Dot "encode" := {
      Notation.dot
        {T : Set}
        `{H'0 : parity_scale_codec.codec.Output.Trait T}
        `{H'1 : core.marker.Sized.Trait T}
        :=
        encode (T := T) (H'0 := H'0) (H'1 := H'1);
    }.
    Global Instance Method_decode `{State.Trait} `(Trait)
      : Notation.Dot "decode" := {
      Notation.dot {I : Set} `{H'0 : parity_scale_codec.codec.Input.Trait I}
        :=
        decode (I := I) (H'0 := H'0);
    }.
  End Storable.
  
  (* Module Impl_ink_storage_traits_storage_Storable_for_P.
    (* Section Impl_ink_storage_traits_storage_Storable_for_P.
      Context {P : Set}.
      Context `{parity_scale_codec.codec.Codec.Trait P}.
      Definition Self `{State.Trait} := P.
      
      Parameter encode :
          forall
            `{State.Trait}
            {T : Set}
            `{parity_scale_codec.codec.Output.Trait T}
            `{core.marker.Sized.Trait T},
          (ref Self) -> (mut_ref T) -> M unit.
      
      Global Instance Method_encode
          `{State.Trait}
          {T : Set}
          `{parity_scale_codec.codec.Output.Trait T}
          `{core.marker.Sized.Trait T} :
        Notation.Dot "encode" := {
        Notation.dot := encode (T := T);
      }.
      
      Parameter decode :
          forall
            `{State.Trait}
            {I : Set}
            `{parity_scale_codec.codec.Input.Trait I},
          (mut_ref I) ->
            M (core.result.Result Self parity_scale_codec.error.Error).
      
      Global Instance AssociatedFunction_decode
          `{State.Trait}
          {I : Set}
          `{parity_scale_codec.codec.Input.Trait I} :
        Notation.DoubleColon Self "decode" := {
        Notation.double_colon := decode (I := I);
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.storage.Storable.Trait Self := {
        ink_storage_traits.storage.Storable.encode
          {T : Set}
          `{parity_scale_codec.codec.Output.Trait T}
          `{core.marker.Sized.Trait T}
          :=
          encode (T := T);
        ink_storage_traits.storage.Storable.decode
          {I : Set}
          `{parity_scale_codec.codec.Input.Trait I}
          :=
          decode (I := I);
      }.
    End Impl_ink_storage_traits_storage_Storable_for_P. *)
    Global Hint Resolve I' : core.
  End Impl_ink_storage_traits_storage_Storable_for_P. *)
  
  Module private.
    Module Sealed.
      Unset Primitive Projections.
      Class Trait (Self : Set) : Type := {
      }.
      Global Set Primitive Projections.
    End Sealed.
  End private.
  
  Module Packed.
    Unset Primitive Projections.
    Class Trait
        (Self : Set)
        `{ink_storage_traits.storage.Storable.Trait Self}
        `{parity_scale_codec.codec.Codec.Trait Self}
        `{ink_storage_traits.storage.private.Sealed.Trait Self} :
        Type := {
    }.
    Global Set Primitive Projections.
  End Packed.
  
  Module StorageKey.
    Class Trait (Self : Set) : Type := {
      KEY `{State.Trait} : ink_primitives.key.Key;
    }.
    
    Global Instance Method_KEY `{State.Trait} `(Trait) : Notation.Dot "KEY" := {
      Notation.dot := KEY;
    }.
    (* Global Instance Method_key `{State.Trait} `(Trait) : Notation.Dot "key" := {
      Notation.dot (self : ref Self) := (axiom : M ink_primitives.key.Key);
    }.
  *) End StorageKey.
  
  Module StorableHint.
    Class Trait
        (Self : Set)
        {Key : Set}
        `{ink_storage_traits.storage.StorageKey.Trait Key} :
        Type := {
      Type_ : Set;
      _ : Sigma `(ink_storage_traits.storage.Storable.Trait Type_), unit;
      PreferredKey : Set;
      _
        :
        Sigma `(ink_storage_traits.storage.StorageKey.Trait PreferredKey),
        unit;
    }.
    
    Global Instance Method_Type_ `(Trait)
      : Notation.DoubleColonType Self "Type_" := {
      Notation.double_colon_type := Type_;
    }.
    Global Instance Method_PreferredKey `(Trait)
      : Notation.DoubleColonType Self "PreferredKey" := {
      Notation.double_colon_type := PreferredKey;
    }.
  End StorableHint.
  
  Module AutoStorableHint.
    Class Trait
        (Self : Set)
        {Key : Set}
        `{ink_storage_traits.storage.StorageKey.Trait Key} :
        Type := {
      Type_ : Set;
      _ : Sigma `(ink_storage_traits.storage.Storable.Trait Type_), unit;
    }.
    
    Global Instance Method_Type_ `(Trait)
      : Notation.DoubleColonType Self "Type_" := {
      Notation.double_colon_type := Type_;
    }.
  End AutoStorableHint.
End storage.

Module impls.
  Module AutoKey.
    Inductive t : Set := Build.
  End AutoKey.
  Definition AutoKey := @AutoKey.t.
  
  Module Impl_core_default_Default_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Parameter default :
        forall `{State.Trait},
        M ink_storage_traits.impls.AutoKey.
    
    Global Instance AssociatedFunction_default `{State.Trait} :
      Notation.DoubleColon Self "default" := {
      Notation.double_colon := default;
    }.
    
    Global Instance I' `{State.Trait} : core.default.Default.Trait Self := {
      core.default.Default.default := default;
    }.
    Global Hint Resolve I' : core.
  End Impl_core_default_Default_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_clone_Clone_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Parameter clone :
        forall `{State.Trait},
        (ref Self) -> M ink_storage_traits.impls.AutoKey.
    
    Global Instance Method_clone `{State.Trait} : Notation.Dot "clone" := {
      Notation.dot := clone;
    }.
    
    Global Instance I' `{State.Trait} : core.clone.Clone.Trait Self := {
      core.clone.Clone.clone := clone;
    }.
    Global Hint Resolve I' : core.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_marker_Copy_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Global Instance I' `{State.Trait} : core.marker.Copy.Trait Self := {
    }.
    Global Hint Resolve I' : core.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_AutoKey.
  
  Module
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Global Instance I' `{State.Trait}
      : core.marker.StructuralPartialEq.Trait Self := {
    }.
    Global Hint Resolve I' : core.
  End Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Parameter eq :
        forall `{State.Trait},
        (ref Self) -> (ref ink_storage_traits.impls.AutoKey) -> M bool.
    
    Global Instance Method_eq `{State.Trait} : Notation.Dot "eq" := {
      Notation.dot := eq;
    }.
    
    Global Instance I' `{State.Trait}
      : core.cmp.PartialEq.Trait Self
          (Rhs := core.cmp.PartialEq.Default.Rhs Self)
        := {
      core.cmp.PartialEq.eq := eq;
    }.
    Global Hint Resolve I' : core.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Global Instance I' `{State.Trait} : core.marker.StructuralEq.Trait Self := {
    }.
    Global Hint Resolve I' : core.
  End Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Parameter assert_receiver_is_total_eq :
        forall `{State.Trait},
        (ref Self) -> M unit.
    
    Global Instance Method_assert_receiver_is_total_eq `{State.Trait} :
      Notation.Dot "assert_receiver_is_total_eq" := {
      Notation.dot := assert_receiver_is_total_eq;
    }.
    
    Global Instance I' `{State.Trait} : core.cmp.Eq.Trait Self := {
    }.
    Global Hint Resolve I' : core.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_AutoKey.
  
  Module Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Parameter partial_cmp :
        forall `{State.Trait},
        (ref Self) ->
          (ref ink_storage_traits.impls.AutoKey) ->
          M (core.option.Option core.cmp.Ordering).
    
    Global Instance Method_partial_cmp `{State.Trait} :
      Notation.Dot "partial_cmp" := {
      Notation.dot := partial_cmp;
    }.
    
    Global Instance I' `{State.Trait}
      : core.cmp.PartialOrd.Trait Self
          (Rhs := core.cmp.PartialOrd.Default.Rhs Self)
        := {
      core.cmp.PartialOrd.partial_cmp := partial_cmp;
    }.
    Global Hint Resolve I' : core.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_AutoKey.
  
  (* Module Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Definition KEY `{State.Trait} := M.alloc 0.
    
    Global Instance AssociatedFunction_KEY `{State.Trait} :
      Notation.DoubleColon Self "KEY" := {
      Notation.double_colon := KEY;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.storage.StorageKey.Trait Self := {
      ink_storage_traits.storage.StorageKey.KEY := KEY;
    }.
    Global Hint Resolve I' : core.
  End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_AutoKey. *)
  
  Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_AutoKey.
    Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
    
    Parameter fmt :
        forall `{State.Trait},
        (ref Self) -> (mut_ref core.fmt.Formatter) -> M core.fmt.Result.
    
    Global Instance Method_fmt `{State.Trait} : Notation.Dot "fmt" := {
      Notation.dot := fmt;
    }.
    
    Global Instance I' `{State.Trait} : core.fmt.Debug.Trait Self := {
      core.fmt.Debug.fmt := fmt;
    }.
    Global Hint Resolve I' : core.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_AutoKey.
  
  Module ManualKey.
    Section ManualKey.
      Context {ParentKey : Set}.
      Unset Primitive Projections.
      Record t `{State.Trait} : Set := {
        _ : core.marker.PhantomData (ParentKey);
      }.
      Global Set Primitive Projections.
      
      Global Instance Get_0 : Notation.Dot 0 := {
        Notation.dot '(Build_t x0) := x0;
      }.
    End ManualKey.
  End ManualKey.
  Definition ManualKey := @ManualKey.t.
  
  Module
    Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Section
      Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context
        `{core.default.Default.Trait ParentKey}
        `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Parameter default :
          forall `{State.Trait},
          M (ink_storage_traits.impls.ManualKey ParentKey).
      
      Global Instance AssociatedFunction_default `{State.Trait} :
        Notation.DoubleColon Self "default" := {
        Notation.double_colon := default;
      }.
      
      Global Instance I' `{State.Trait} : core.default.Default.Trait Self := {
        core.default.Default.default := default;
      }.
    End
      Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Global Hint Resolve I' : core.
  End
    Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Section
      Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context
        `{core.clone.Clone.Trait ParentKey}
        `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Parameter clone :
          forall `{State.Trait},
          (ref Self) -> M (ink_storage_traits.impls.ManualKey ParentKey).
      
      Global Instance Method_clone `{State.Trait} : Notation.Dot "clone" := {
        Notation.dot := clone;
      }.
      
      Global Instance I' `{State.Trait} : core.clone.Clone.Trait Self := {
        core.clone.Clone.clone := clone;
      }.
    End Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Global Hint Resolve I' : core.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Section
      Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context
        `{core.marker.Copy.Trait ParentKey}
        `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Global Instance I' `{State.Trait} : core.marker.Copy.Trait Self := {
      }.
    End Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Global Hint Resolve I' : core.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Section
      Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Global Instance I' `{State.Trait}
        : core.marker.StructuralEq.Trait Self := {
      }.
    End
      Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Global Hint Resolve I' : core.
  End
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Section
      Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context
        `{core.cmp.PartialEq.Trait ParentKey
            (Rhs := core.cmp.PartialEq.Default.Rhs ParentKey)}
        `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Parameter eq :
          forall `{State.Trait},
          (ref Self) ->
            (ref (ink_storage_traits.impls.ManualKey ParentKey)) ->
            M bool.
      
      Global Instance Method_eq `{State.Trait} : Notation.Dot "eq" := {
        Notation.dot := eq;
      }.
      
      Global Instance I' `{State.Trait}
        : core.cmp.PartialEq.Trait Self
            (Rhs := core.cmp.PartialEq.Default.Rhs Self)
          := {
        core.cmp.PartialEq.eq := eq;
      }.
    End
      Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Global Hint Resolve I' : core.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Section Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context
        `{core.cmp.Eq.Trait ParentKey}
        `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Parameter assert_receiver_is_total_eq :
          forall `{State.Trait},
          (ref Self) -> M unit.
      
      Global Instance Method_assert_receiver_is_total_eq `{State.Trait} :
        Notation.Dot "assert_receiver_is_total_eq" := {
        Notation.dot := assert_receiver_is_total_eq;
      }.
      
      Global Instance I' `{State.Trait} : core.cmp.Eq.Trait Self := {
      }.
    End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Global Hint Resolve I' : core.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Section
      Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Global Instance I' `{State.Trait}
        : core.marker.StructuralPartialEq.Trait Self := {
      }.
    End
      Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Global Hint Resolve I' : core.
  End
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module
    Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Section
      Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context
        `{core.cmp.PartialOrd.Trait ParentKey
            (Rhs := core.cmp.PartialOrd.Default.Rhs ParentKey)}
        `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Parameter partial_cmp :
          forall `{State.Trait},
          (ref Self) ->
            (ref (ink_storage_traits.impls.ManualKey ParentKey)) ->
            M (core.option.Option core.cmp.Ordering).
      
      Global Instance Method_partial_cmp `{State.Trait} :
        Notation.Dot "partial_cmp" := {
        Notation.dot := partial_cmp;
      }.
      
      Global Instance I' `{State.Trait}
        : core.cmp.PartialOrd.Trait Self
            (Rhs := core.cmp.PartialOrd.Default.Rhs Self)
          := {
        core.cmp.PartialOrd.partial_cmp := partial_cmp;
      }.
    End
      Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Global Hint Resolve I' : core.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  (* Module Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
    (* Section Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Definition
        KEY
        `{State.Trait} := ink_primitives.key.KeyComposer::["concat"]
          ink_storage_traits.impls.KEY
          ParentKey::["KEY"].
      
      Global Instance AssociatedFunction_KEY `{State.Trait} :
        Notation.DoubleColon Self "KEY" := {
        Notation.double_colon := KEY;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.storage.StorageKey.Trait Self := {
        ink_storage_traits.storage.StorageKey.KEY := KEY;
      }.
    End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey. *)
    Global Hint Resolve I' : core.
  End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey. *)
  
  Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Section
      Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
      Context {ParentKey : Set}.
      Context `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ManualKey ParentKey.
      
      Parameter fmt :
          forall `{State.Trait},
          (ref Self) -> (mut_ref core.fmt.Formatter) -> M core.fmt.Result.
      
      Global Instance Method_fmt `{State.Trait} : Notation.Dot "fmt" := {
        Notation.dot := fmt;
      }.
      
      Global Instance I' `{State.Trait} : core.fmt.Debug.Trait Self := {
        core.fmt.Debug.fmt := fmt;
      }.
    End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Global Hint Resolve I' : core.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
  
  Module ResolverKey.
    Section ResolverKey.
      Context {L R : Set}.
      Unset Primitive Projections.
      Record t `{State.Trait} : Set := {
        _ : core.marker.PhantomData (L * R);
      }.
      Global Set Primitive Projections.
      
      Global Instance Get_0 : Notation.Dot 0 := {
        Notation.dot '(Build_t x0) := x0;
      }.
    End ResolverKey.
  End ResolverKey.
  Definition ResolverKey := @ResolverKey.t.
  
  Module Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
    Section
      Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Context `{core.default.Default.Trait L} `{core.default.Default.Trait R}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Parameter default :
          forall `{State.Trait},
          M (ink_storage_traits.impls.ResolverKey L R).
      
      Global Instance AssociatedFunction_default `{State.Trait} :
        Notation.DoubleColon Self "default" := {
        Notation.double_colon := default;
      }.
      
      Global Instance I' `{State.Trait} : core.default.Default.Trait Self := {
        core.default.Default.default := default;
      }.
    End Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
    Global Hint Resolve I' : core.
  End Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
    Section Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Context `{core.clone.Clone.Trait L} `{core.clone.Clone.Trait R}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Parameter clone :
          forall `{State.Trait},
          (ref Self) -> M (ink_storage_traits.impls.ResolverKey L R).
      
      Global Instance Method_clone `{State.Trait} : Notation.Dot "clone" := {
        Notation.dot := clone;
      }.
      
      Global Instance I' `{State.Trait} : core.clone.Clone.Trait Self := {
        core.clone.Clone.clone := clone;
      }.
    End Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
    Global Hint Resolve I' : core.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
    Section Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Context `{core.marker.Copy.Trait L} `{core.marker.Copy.Trait R}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Global Instance I' `{State.Trait} : core.marker.Copy.Trait Self := {
      }.
    End Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
    Global Hint Resolve I' : core.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Section
      Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Global Instance I' `{State.Trait}
        : core.marker.StructuralPartialEq.Trait Self := {
      }.
    End
      Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Global Hint Resolve I' : core.
  End
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Section
      Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Context
        `{core.cmp.PartialEq.Trait L (Rhs := core.cmp.PartialEq.Default.Rhs L)}
        `{core.cmp.PartialEq.Trait R (Rhs := core.cmp.PartialEq.Default.Rhs R)}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Parameter eq :
          forall `{State.Trait},
          (ref Self) ->
            (ref (ink_storage_traits.impls.ResolverKey L R)) ->
            M bool.
      
      Global Instance Method_eq `{State.Trait} : Notation.Dot "eq" := {
        Notation.dot := eq;
      }.
      
      Global Instance I' `{State.Trait}
        : core.cmp.PartialEq.Trait Self
            (Rhs := core.cmp.PartialEq.Default.Rhs Self)
          := {
        core.cmp.PartialEq.eq := eq;
      }.
    End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Global Hint Resolve I' : core.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Section
      Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Global Instance I' `{State.Trait}
        : core.marker.StructuralEq.Trait Self := {
      }.
    End
      Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Global Hint Resolve I' : core.
  End
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Section Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Context `{core.cmp.Eq.Trait L} `{core.cmp.Eq.Trait R}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Parameter assert_receiver_is_total_eq :
          forall `{State.Trait},
          (ref Self) -> M unit.
      
      Global Instance Method_assert_receiver_is_total_eq `{State.Trait} :
        Notation.Dot "assert_receiver_is_total_eq" := {
        Notation.dot := assert_receiver_is_total_eq;
      }.
      
      Global Instance I' `{State.Trait} : core.cmp.Eq.Trait Self := {
      }.
    End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Global Hint Resolve I' : core.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
    Section
      Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Context
        `{core.cmp.PartialOrd.Trait L
            (Rhs := core.cmp.PartialOrd.Default.Rhs L)}
        `{core.cmp.PartialOrd.Trait R
            (Rhs := core.cmp.PartialOrd.Default.Rhs R)}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Parameter partial_cmp :
          forall `{State.Trait},
          (ref Self) ->
            (ref (ink_storage_traits.impls.ResolverKey L R)) ->
            M (core.option.Option core.cmp.Ordering).
      
      Global Instance Method_partial_cmp `{State.Trait} :
        Notation.Dot "partial_cmp" := {
        Notation.dot := partial_cmp;
      }.
      
      Global Instance I' `{State.Trait}
        : core.cmp.PartialOrd.Trait Self
            (Rhs := core.cmp.PartialOrd.Default.Rhs Self)
          := {
        core.cmp.PartialOrd.partial_cmp := partial_cmp;
      }.
    End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
    Global Hint Resolve I' : core.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
    Section Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Context `{core.fmt.Debug.Trait L} `{core.fmt.Debug.Trait R}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Parameter fmt :
          forall `{State.Trait},
          (ref Self) -> (mut_ref core.fmt.Formatter) -> M core.fmt.Result.
      
      Global Instance Method_fmt `{State.Trait} : Notation.Dot "fmt" := {
        Notation.dot := fmt;
      }.
      
      Global Instance I' `{State.Trait} : core.fmt.Debug.Trait Self := {
        core.fmt.Debug.fmt := fmt;
      }.
    End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
    Global Hint Resolve I' : core.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
  
  (* Module Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
    (* Section Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
      Context {L R : Set}.
      Context
        `{ink_storage_traits.storage.StorageKey.Trait L}
        `{ink_storage_traits.impls.KeyType.Trait L}
        `{ink_storage_traits.storage.StorageKey.Trait R}
        `{ink_storage_traits.impls.KeyType.Trait R}.
      Definition Self `{State.Trait} :=
        ink_storage_traits.impls.ResolverKey L R.
      
      Definition
        KEY
        `{State.Trait} := if (L::["IS_AUTO_KEY"] : bool) then
          Pure R::["KEY"]
        else
          Pure L::["KEY"].
      
      Global Instance AssociatedFunction_KEY `{State.Trait} :
        Notation.DoubleColon Self "KEY" := {
        Notation.double_colon := KEY;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.storage.StorageKey.Trait Self := {
        ink_storage_traits.storage.StorageKey.KEY := KEY;
      }.
    End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R. *)
    Global Hint Resolve I' : core.
  End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R. *)
  
  (* Module Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
    (* Section Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
      Context {T ParentKey : Set}.
      Context
        `{ink_storage_traits.storage.StorableHint.Trait T (Key := ParentKey)}
        `{ink_storage_traits.impls.KeyType.Trait
              (ink_storage_traits.storage.StorableHint.PreferredKey
                (Self := T))}
        `{ink_storage_traits.storage.StorableHint.Trait T
            (Key := ink_storage_traits.impls.FinalKey T ParentKey)}
        `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
      Definition Self `{State.Trait} := T.
      
      Definition Type : Set :=
        ink_storage_traits.storage.StorableHint.Type_ (Self := T).
      
      #[refine]
      Global Instance I' `{State.Trait}
        : ink_storage_traits.storage.AutoStorableHint.Trait Self
            (Key := ink_storage_traits.impls.ManualKey ParentKey)
          := {
        ink_storage_traits.storage.AutoStorableHint.Type := Type;
      }.
      eauto.
      Defined.
    End Impl_ink_storage_traits_storage_AutoStorableHint_for_T. *)
    Global Hint Resolve I' : core.
  End Impl_ink_storage_traits_storage_AutoStorableHint_for_T. *)
  
  Module Impl_ink_storage_traits_storage_private_Sealed_for_P.
    Section Impl_ink_storage_traits_storage_private_Sealed_for_P.
      Context {P : Set}.
      Context
        `{parity_scale_codec.codec.Decode.Trait P}
        `{parity_scale_codec.codec.Encode.Trait P}.
      Definition Self `{State.Trait} := P.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.storage.private.Sealed.Trait Self := {
      }.
    End Impl_ink_storage_traits_storage_private_Sealed_for_P.
    Global Hint Resolve I' : core.
  End Impl_ink_storage_traits_storage_private_Sealed_for_P.
  
  (* Module Impl_ink_storage_traits_storage_Packed_for_P.
    (* Section Impl_ink_storage_traits_storage_Packed_for_P.
      Context {P : Set}.
      Context
        `{parity_scale_codec.codec.Decode.Trait P}
        `{parity_scale_codec.codec.Encode.Trait P}.
      Definition Self `{State.Trait} := P.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.storage.Packed.Trait Self := {
      }.
    End Impl_ink_storage_traits_storage_Packed_for_P. *)
    Global Hint Resolve I' : core.
  End Impl_ink_storage_traits_storage_Packed_for_P. *)
  
  (* Module Impl_ink_storage_traits_storage_StorageKey_for_P.
    (* Section Impl_ink_storage_traits_storage_StorageKey_for_P.
      Context {P : Set}.
      Context `{ink_storage_traits.storage.Packed.Trait P}.
      Definition Self `{State.Trait} := P.
      
      Definition KEY `{State.Trait} := M.alloc 0.
      
      Global Instance AssociatedFunction_KEY `{State.Trait} :
        Notation.DoubleColon Self "KEY" := {
        Notation.double_colon := KEY;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.storage.StorageKey.Trait Self := {
        ink_storage_traits.storage.StorageKey.KEY := KEY;
      }.
    End Impl_ink_storage_traits_storage_StorageKey_for_P. *)
    Global Hint Resolve I' : core.
  End Impl_ink_storage_traits_storage_StorageKey_for_P. *)
  
  (* Module Impl_ink_storage_traits_storage_StorableHint_for_P.
    (* Section Impl_ink_storage_traits_storage_StorableHint_for_P.
      Context {P Key : Set}.
      Context
        `{ink_storage_traits.storage.Packed.Trait P}
        `{ink_storage_traits.storage.StorageKey.Trait Key}.
      Definition Self `{State.Trait} := P.
      
      Definition Type : Set := P.
      
      Definition PreferredKey : Set := ink_storage_traits.impls.AutoKey.
      
      #[refine]
      Global Instance I' `{State.Trait}
        : ink_storage_traits.storage.StorableHint.Trait Self (Key := Key) := {
        ink_storage_traits.storage.StorableHint.Type := Type;
        ink_storage_traits.storage.StorableHint.PreferredKey := PreferredKey;
      }.
      eauto.
      Defined.
    End Impl_ink_storage_traits_storage_StorableHint_for_P. *)
    Global Hint Resolve I' : core.
  End Impl_ink_storage_traits_storage_StorableHint_for_P. *)
End impls.

Module AutoKey.
  Inductive t : Set := Build.
End AutoKey.
Definition AutoKey := @AutoKey.t.

Module Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Definition Identity : Set := Self.
  
  Parameter type_info :
      forall `{State.Trait},
      M (scale_info.ty.Type_ scale_info.ty.Type_.Default.T).
  
  Global Instance AssociatedFunction_type_info `{State.Trait} :
    Notation.DoubleColon Self "type_info" := {
    Notation.double_colon := type_info;
  }.
  
  Global Instance I' `{State.Trait} : scale_info.TypeInfo.Trait Self := {
    scale_info.TypeInfo.Identity := Identity;
    scale_info.TypeInfo.type_info := type_info;
  }.
  Global Hint Resolve I' : core.
End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_default_Default_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Parameter default : forall `{State.Trait}, M ink_storage_traits.impls.AutoKey.
  
  Global Instance AssociatedFunction_default `{State.Trait} :
    Notation.DoubleColon Self "default" := {
    Notation.double_colon := default;
  }.
  
  Global Instance I' `{State.Trait} : core.default.Default.Trait Self := {
    core.default.Default.default := default;
  }.
  Global Hint Resolve I' : core.
End Impl_core_default_Default_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_marker_Copy_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Global Instance I' `{State.Trait} : core.marker.Copy.Trait Self := {
  }.
  Global Hint Resolve I' : core.
End Impl_core_marker_Copy_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_clone_Clone_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Parameter clone :
      forall `{State.Trait},
      (ref Self) -> M ink_storage_traits.impls.AutoKey.
  
  Global Instance Method_clone `{State.Trait} : Notation.Dot "clone" := {
    Notation.dot := clone;
  }.
  
  Global Instance I' `{State.Trait} : core.clone.Clone.Trait Self := {
    core.clone.Clone.clone := clone;
  }.
  Global Hint Resolve I' : core.
End Impl_core_clone_Clone_for_ink_storage_traits_impls_AutoKey.

Module
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Global Instance I' `{State.Trait}
    : core.marker.StructuralPartialEq.Trait Self := {
  }.
  Global Hint Resolve I' : core.
End Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Parameter eq :
      forall `{State.Trait},
      (ref Self) -> (ref ink_storage_traits.impls.AutoKey) -> M bool.
  
  Global Instance Method_eq `{State.Trait} : Notation.Dot "eq" := {
    Notation.dot := eq;
  }.
  
  Global Instance I' `{State.Trait}
    : core.cmp.PartialEq.Trait Self (Rhs := core.cmp.PartialEq.Default.Rhs Self)
      := {
    core.cmp.PartialEq.eq := eq;
  }.
  Global Hint Resolve I' : core.
End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Global Instance I' `{State.Trait} : core.marker.StructuralEq.Trait Self := {
  }.
  Global Hint Resolve I' : core.
End Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Parameter assert_receiver_is_total_eq :
      forall `{State.Trait},
      (ref Self) -> M unit.
  
  Global Instance Method_assert_receiver_is_total_eq `{State.Trait} :
    Notation.Dot "assert_receiver_is_total_eq" := {
    Notation.dot := assert_receiver_is_total_eq;
  }.
  
  Global Instance I' `{State.Trait} : core.cmp.Eq.Trait Self := {
  }.
  Global Hint Resolve I' : core.
End Impl_core_cmp_Eq_for_ink_storage_traits_impls_AutoKey.

Module Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Parameter partial_cmp :
      forall `{State.Trait},
      (ref Self) ->
        (ref ink_storage_traits.impls.AutoKey) ->
        M (core.option.Option core.cmp.Ordering).
  
  Global Instance Method_partial_cmp `{State.Trait} :
    Notation.Dot "partial_cmp" := {
    Notation.dot := partial_cmp;
  }.
  
  Global Instance I' `{State.Trait}
    : core.cmp.PartialOrd.Trait Self
        (Rhs := core.cmp.PartialOrd.Default.Rhs Self)
      := {
    core.cmp.PartialOrd.partial_cmp := partial_cmp;
  }.
  Global Hint Resolve I' : core.
End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_AutoKey.

(* Module Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Definition KEY `{State.Trait} := M.alloc 0.
  
  Global Instance AssociatedFunction_KEY `{State.Trait} :
    Notation.DoubleColon Self "KEY" := {
    Notation.double_colon := KEY;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.storage.StorageKey.Trait Self := {
    ink_storage_traits.storage.StorageKey.KEY := KEY;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_AutoKey. *)

Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_AutoKey.
  Definition Self `{State.Trait} := ink_storage_traits.impls.AutoKey.
  
  Parameter fmt :
      forall `{State.Trait},
      (ref Self) -> (mut_ref core.fmt.Formatter) -> M core.fmt.Result.
  
  Global Instance Method_fmt `{State.Trait} : Notation.Dot "fmt" := {
    Notation.dot := fmt;
  }.
  
  Global Instance I' `{State.Trait} : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt := fmt;
  }.
  Global Hint Resolve I' : core.
End Impl_core_fmt_Debug_for_ink_storage_traits_impls_AutoKey.

Module ManualKey.
  Section ManualKey.
    Context {ParentKey : Set}.
    Unset Primitive Projections.
    Record t `{State.Trait} : Set := {
      _ : core.marker.PhantomData (ParentKey);
    }.
    Global Set Primitive Projections.
    
    Global Instance Get_0 : Notation.Dot 0 := {
      Notation.dot '(Build_t x0) := x0;
    }.
  End ManualKey.
End ManualKey.
Definition ManualKey := @ManualKey.t.

Module
  Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context
      `{ink_storage_traits.storage.StorageKey.Trait ParentKey}
      `{scale_info.TypeInfo.Trait (core.marker.PhantomData (ParentKey))}
      `{ink_storage_traits.storage.StorageKey.Trait ParentKey}
      `{scale_info.TypeInfo.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Definition Identity : Set := Self.
    
    Parameter type_info :
        forall `{State.Trait},
        M (scale_info.ty.Type_ scale_info.ty.Type_.Default.T).
    
    Global Instance AssociatedFunction_type_info `{State.Trait} :
      Notation.DoubleColon Self "type_info" := {
      Notation.double_colon := type_info;
    }.
    
    Global Instance I' `{State.Trait} : scale_info.TypeInfo.Trait Self := {
      scale_info.TypeInfo.Identity := Identity;
      scale_info.TypeInfo.type_info := type_info;
    }.
  End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context
      `{core.default.Default.Trait ParentKey}
      `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter default :
        forall `{State.Trait},
        M (ink_storage_traits.impls.ManualKey ParentKey).
    
    Global Instance AssociatedFunction_default `{State.Trait} :
      Notation.DoubleColon Self "default" := {
      Notation.double_colon := default;
    }.
    
    Global Instance I' `{State.Trait} : core.default.Default.Trait Self := {
      core.default.Default.default := default;
    }.
  End
    Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End Impl_core_default_Default_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context
      `{core.marker.Copy.Trait ParentKey}
      `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Global Instance I' `{State.Trait} : core.marker.Copy.Trait Self := {
    }.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End Impl_core_marker_Copy_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context
      `{core.clone.Clone.Trait ParentKey}
      `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter clone :
        forall `{State.Trait},
        (ref Self) -> M (ink_storage_traits.impls.ManualKey ParentKey).
    
    Global Instance Method_clone `{State.Trait} : Notation.Dot "clone" := {
      Notation.dot := clone;
    }.
    
    Global Instance I' `{State.Trait} : core.clone.Clone.Trait Self := {
      core.clone.Clone.clone := clone;
    }.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End Impl_core_clone_Clone_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Global Instance I' `{State.Trait} : core.marker.StructuralEq.Trait Self := {
    }.
  End
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End
  Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context
      `{core.cmp.Eq.Trait ParentKey}
      `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter assert_receiver_is_total_eq :
        forall `{State.Trait},
        (ref Self) -> M unit.
    
    Global Instance Method_assert_receiver_is_total_eq `{State.Trait} :
      Notation.Dot "assert_receiver_is_total_eq" := {
      Notation.dot := assert_receiver_is_total_eq;
    }.
    
    Global Instance I' `{State.Trait} : core.cmp.Eq.Trait Self := {
    }.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Global Instance I' `{State.Trait}
      : core.marker.StructuralPartialEq.Trait Self := {
    }.
  End
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context
      `{core.cmp.PartialEq.Trait ParentKey
          (Rhs := core.cmp.PartialEq.Default.Rhs ParentKey)}
      `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter eq :
        forall `{State.Trait},
        (ref Self) ->
          (ref (ink_storage_traits.impls.ManualKey ParentKey)) ->
          M bool.
    
    Global Instance Method_eq `{State.Trait} : Notation.Dot "eq" := {
      Notation.dot := eq;
    }.
    
    Global Instance I' `{State.Trait}
      : core.cmp.PartialEq.Trait Self
          (Rhs := core.cmp.PartialEq.Default.Rhs Self)
        := {
      core.cmp.PartialEq.eq := eq;
    }.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module
  Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section
    Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context
      `{core.cmp.PartialOrd.Trait ParentKey
          (Rhs := core.cmp.PartialOrd.Default.Rhs ParentKey)}
      `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter partial_cmp :
        forall `{State.Trait},
        (ref Self) ->
          (ref (ink_storage_traits.impls.ManualKey ParentKey)) ->
          M (core.option.Option core.cmp.Ordering).
    
    Global Instance Method_partial_cmp `{State.Trait} :
      Notation.Dot "partial_cmp" := {
      Notation.dot := partial_cmp;
    }.
    
    Global Instance I' `{State.Trait}
      : core.cmp.PartialOrd.Trait Self
          (Rhs := core.cmp.PartialOrd.Default.Rhs Self)
        := {
      core.cmp.PartialOrd.partial_cmp := partial_cmp;
    }.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ManualKey_ParentKey.

(* Module Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
  (* Section Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Definition
      KEY
      `{State.Trait} := ink_primitives.key.KeyComposer::["concat"]
        ink_storage_traits.impls.KEY
        ParentKey::["KEY"].
    
    Global Instance AssociatedFunction_KEY `{State.Trait} :
      Notation.DoubleColon Self "KEY" := {
      Notation.double_colon := KEY;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.storage.StorageKey.Trait Self := {
      ink_storage_traits.storage.StorageKey.KEY := KEY;
    }.
  End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ManualKey_ParentKey. *)

Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Section Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
    Context {ParentKey : Set}.
    Context `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} :=
      ink_storage_traits.impls.ManualKey ParentKey.
    
    Parameter fmt :
        forall `{State.Trait},
        (ref Self) -> (mut_ref core.fmt.Formatter) -> M core.fmt.Result.
    
    Global Instance Method_fmt `{State.Trait} : Notation.Dot "fmt" := {
      Notation.dot := fmt;
    }.
    
    Global Instance I' `{State.Trait} : core.fmt.Debug.Trait Self := {
      core.fmt.Debug.fmt := fmt;
    }.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.
  Global Hint Resolve I' : core.
End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ManualKey_ParentKey.

Module ResolverKey.
  Section ResolverKey.
    Context {L R : Set}.
    Unset Primitive Projections.
    Record t `{State.Trait} : Set := {
      _ : core.marker.PhantomData (L * R);
    }.
    Global Set Primitive Projections.
    
    Global Instance Get_0 : Notation.Dot 0 := {
      Notation.dot '(Build_t x0) := x0;
    }.
  End ResolverKey.
End ResolverKey.
Definition ResolverKey := @ResolverKey.t.

Module Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Context
      `{scale_info.TypeInfo.Trait (core.marker.PhantomData (L * R))}
      `{scale_info.TypeInfo.Trait L}
      `{scale_info.TypeInfo.Trait R}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Definition Identity : Set := Self.
    
    Parameter type_info :
        forall `{State.Trait},
        M (scale_info.ty.Type_ scale_info.ty.Type_.Default.T).
    
    Global Instance AssociatedFunction_type_info `{State.Trait} :
      Notation.DoubleColon Self "type_info" := {
      Notation.double_colon := type_info;
    }.
    
    Global Instance I' `{State.Trait} : scale_info.TypeInfo.Trait Self := {
      scale_info.TypeInfo.Identity := Identity;
      scale_info.TypeInfo.type_info := type_info;
    }.
  End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End Impl_scale_info_TypeInfo_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section
    Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Context `{core.default.Default.Trait L} `{core.default.Default.Trait R}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter default :
        forall `{State.Trait},
        M (ink_storage_traits.impls.ResolverKey L R).
    
    Global Instance AssociatedFunction_default `{State.Trait} :
      Notation.DoubleColon Self "default" := {
      Notation.double_colon := default;
    }.
    
    Global Instance I' `{State.Trait} : core.default.Default.Trait Self := {
      core.default.Default.default := default;
    }.
  End Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End Impl_core_default_Default_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Context `{core.marker.Copy.Trait L} `{core.marker.Copy.Trait R}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Global Instance I' `{State.Trait} : core.marker.Copy.Trait Self := {
    }.
  End Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End Impl_core_marker_Copy_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Context `{core.clone.Clone.Trait L} `{core.clone.Clone.Trait R}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter clone :
        forall `{State.Trait},
        (ref Self) -> M (ink_storage_traits.impls.ResolverKey L R).
    
    Global Instance Method_clone `{State.Trait} : Notation.Dot "clone" := {
      Notation.dot := clone;
    }.
    
    Global Instance I' `{State.Trait} : core.clone.Clone.Trait Self := {
      core.clone.Clone.clone := clone;
    }.
  End Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End Impl_core_clone_Clone_for_ink_storage_traits_impls_ResolverKey_L_R.

Module
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Global Instance I' `{State.Trait}
      : core.marker.StructuralPartialEq.Trait Self := {
    }.
  End
    Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End
  Impl_core_marker_StructuralPartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Context
      `{core.cmp.PartialEq.Trait L (Rhs := core.cmp.PartialEq.Default.Rhs L)}
      `{core.cmp.PartialEq.Trait R (Rhs := core.cmp.PartialEq.Default.Rhs R)}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter eq :
        forall `{State.Trait},
        (ref Self) ->
          (ref (ink_storage_traits.impls.ResolverKey L R)) ->
          M bool.
    
    Global Instance Method_eq `{State.Trait} : Notation.Dot "eq" := {
      Notation.dot := eq;
    }.
    
    Global Instance I' `{State.Trait}
      : core.cmp.PartialEq.Trait Self
          (Rhs := core.cmp.PartialEq.Default.Rhs Self)
        := {
      core.cmp.PartialEq.eq := eq;
    }.
  End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End Impl_core_cmp_PartialEq_for_ink_storage_traits_impls_ResolverKey_L_R.

Module
  Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Global Instance I' `{State.Trait} : core.marker.StructuralEq.Trait Self := {
    }.
  End
    Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End Impl_core_marker_StructuralEq_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Context `{core.cmp.Eq.Trait L} `{core.cmp.Eq.Trait R}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter assert_receiver_is_total_eq :
        forall `{State.Trait},
        (ref Self) -> M unit.
    
    Global Instance Method_assert_receiver_is_total_eq `{State.Trait} :
      Notation.Dot "assert_receiver_is_total_eq" := {
      Notation.dot := assert_receiver_is_total_eq;
    }.
    
    Global Instance I' `{State.Trait} : core.cmp.Eq.Trait Self := {
    }.
  End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End Impl_core_cmp_Eq_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Context
      `{core.cmp.PartialOrd.Trait L (Rhs := core.cmp.PartialOrd.Default.Rhs L)}
      `{core.cmp.PartialOrd.Trait R (Rhs := core.cmp.PartialOrd.Default.Rhs R)}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter partial_cmp :
        forall `{State.Trait},
        (ref Self) ->
          (ref (ink_storage_traits.impls.ResolverKey L R)) ->
          M (core.option.Option core.cmp.Ordering).
    
    Global Instance Method_partial_cmp `{State.Trait} :
      Notation.Dot "partial_cmp" := {
      Notation.dot := partial_cmp;
    }.
    
    Global Instance I' `{State.Trait}
      : core.cmp.PartialOrd.Trait Self
          (Rhs := core.cmp.PartialOrd.Default.Rhs Self)
        := {
      core.cmp.PartialOrd.partial_cmp := partial_cmp;
    }.
  End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End Impl_core_cmp_PartialOrd_for_ink_storage_traits_impls_ResolverKey_L_R.

Module Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
  Section Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Context `{core.fmt.Debug.Trait L} `{core.fmt.Debug.Trait R}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Parameter fmt :
        forall `{State.Trait},
        (ref Self) -> (mut_ref core.fmt.Formatter) -> M core.fmt.Result.
    
    Global Instance Method_fmt `{State.Trait} : Notation.Dot "fmt" := {
      Notation.dot := fmt;
    }.
    
    Global Instance I' `{State.Trait} : core.fmt.Debug.Trait Self := {
      core.fmt.Debug.fmt := fmt;
    }.
  End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.
  Global Hint Resolve I' : core.
End Impl_core_fmt_Debug_for_ink_storage_traits_impls_ResolverKey_L_R.

(* Module Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
  (* Section Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R.
    Context {L R : Set}.
    Context
      `{ink_storage_traits.storage.StorageKey.Trait L}
      `{ink_storage_traits.impls.KeyType.Trait L}
      `{ink_storage_traits.storage.StorageKey.Trait R}
      `{ink_storage_traits.impls.KeyType.Trait R}.
    Definition Self `{State.Trait} := ink_storage_traits.impls.ResolverKey L R.
    
    Definition
      KEY
      `{State.Trait} := if (L::["IS_AUTO_KEY"] : bool) then
        Pure R::["KEY"]
      else
        Pure L::["KEY"].
    
    Global Instance AssociatedFunction_KEY `{State.Trait} :
      Notation.DoubleColon Self "KEY" := {
      Notation.double_colon := KEY;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.storage.StorageKey.Trait Self := {
      ink_storage_traits.storage.StorageKey.KEY := KEY;
    }.
  End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_storage_StorageKey_for_ink_storage_traits_impls_ResolverKey_L_R. *)

(* Module Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
  (* Section Impl_ink_storage_traits_storage_AutoStorableHint_for_T.
    Context {T ParentKey : Set}.
    Context
      `{ink_storage_traits.storage.StorableHint.Trait T (Key := ParentKey)}
      `{ink_storage_traits.impls.KeyType.Trait
            (ink_storage_traits.storage.StorableHint.PreferredKey (Self := T))}
      `{ink_storage_traits.storage.StorableHint.Trait T
          (Key := ink_storage_traits.impls.FinalKey T ParentKey)}
      `{ink_storage_traits.storage.StorageKey.Trait ParentKey}.
    Definition Self `{State.Trait} := T.
    
    Definition Type : Set :=
      ink_storage_traits.storage.StorableHint.Type_ (Self := T).
    
    #[refine]
    Global Instance I' `{State.Trait}
      : ink_storage_traits.storage.AutoStorableHint.Trait Self
          (Key := ink_storage_traits.impls.ManualKey ParentKey)
        := {
      ink_storage_traits.storage.AutoStorableHint.Type := Type;
    }.
    eauto.
    Defined.
  End Impl_ink_storage_traits_storage_AutoStorableHint_for_T. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_storage_AutoStorableHint_for_T. *)

Module Impl_ink_storage_traits_storage_private_Sealed_for_P.
  Section Impl_ink_storage_traits_storage_private_Sealed_for_P.
    Context {P : Set}.
    Context
      `{parity_scale_codec.codec.Decode.Trait P}
      `{parity_scale_codec.codec.Encode.Trait P}.
    Definition Self `{State.Trait} := P.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.storage.private.Sealed.Trait Self := {
    }.
  End Impl_ink_storage_traits_storage_private_Sealed_for_P.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_storage_private_Sealed_for_P.

(* Module Impl_ink_storage_traits_storage_Packed_for_P.
  (* Section Impl_ink_storage_traits_storage_Packed_for_P.
    Context {P : Set}.
    Context
      `{parity_scale_codec.codec.Decode.Trait P}
      `{parity_scale_codec.codec.Encode.Trait P}.
    Definition Self `{State.Trait} := P.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.storage.Packed.Trait Self := {
    }.
  End Impl_ink_storage_traits_storage_Packed_for_P. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_storage_Packed_for_P. *)

(* Module Impl_ink_storage_traits_storage_StorageKey_for_P.
  (* Section Impl_ink_storage_traits_storage_StorageKey_for_P.
    Context {P : Set}.
    Context `{ink_storage_traits.storage.Packed.Trait P}.
    Definition Self `{State.Trait} := P.
    
    Definition KEY `{State.Trait} := M.alloc 0.
    
    Global Instance AssociatedFunction_KEY `{State.Trait} :
      Notation.DoubleColon Self "KEY" := {
      Notation.double_colon := KEY;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.storage.StorageKey.Trait Self := {
      ink_storage_traits.storage.StorageKey.KEY := KEY;
    }.
  End Impl_ink_storage_traits_storage_StorageKey_for_P. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_storage_StorageKey_for_P. *)

(* Module Impl_ink_storage_traits_storage_StorableHint_for_P.
  (* Section Impl_ink_storage_traits_storage_StorableHint_for_P.
    Context {P Key : Set}.
    Context
      `{ink_storage_traits.storage.Packed.Trait P}
      `{ink_storage_traits.storage.StorageKey.Trait Key}.
    Definition Self `{State.Trait} := P.
    
    Definition Type : Set := P.
    
    Definition PreferredKey : Set := ink_storage_traits.impls.AutoKey.
    
    #[refine]
    Global Instance I' `{State.Trait}
      : ink_storage_traits.storage.StorableHint.Trait Self (Key := Key) := {
      ink_storage_traits.storage.StorableHint.Type := Type;
      ink_storage_traits.storage.StorableHint.PreferredKey := PreferredKey;
    }.
    eauto.
    Defined.
  End Impl_ink_storage_traits_storage_StorableHint_for_P. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_storage_StorableHint_for_P. *)

Module Storable.
  Class Trait (Self : Set) `{core.marker.Sized.Trait Self} : Type := {
    encode
      `{State.Trait}
      {T : Set}
      `{H'0 : parity_scale_codec.codec.Output.Trait T}
      `{H'1 : core.marker.Sized.Trait T}
      :
      (ref Self) -> (mut_ref T) -> M unit;
    decode
      `{State.Trait}
      {I : Set}
      `{H'0 : parity_scale_codec.codec.Input.Trait I}
      :
      (mut_ref I) -> M (core.result.Result Self parity_scale_codec.error.Error);
  }.
  
  Global Instance Method_encode `{State.Trait} `(Trait)
    : Notation.Dot "encode" := {
    Notation.dot
      {T : Set}
      `{H'0 : parity_scale_codec.codec.Output.Trait T}
      `{H'1 : core.marker.Sized.Trait T}
      :=
      encode (T := T) (H'0 := H'0) (H'1 := H'1);
  }.
  Global Instance Method_decode `{State.Trait} `(Trait)
    : Notation.Dot "decode" := {
    Notation.dot {I : Set} `{H'0 : parity_scale_codec.codec.Input.Trait I}
      :=
      decode (I := I) (H'0 := H'0);
  }.
End Storable.

(* Module Impl_ink_storage_traits_storage_Storable_for_P.
  (* Section Impl_ink_storage_traits_storage_Storable_for_P.
    Context {P : Set}.
    Context `{parity_scale_codec.codec.Codec.Trait P}.
    Definition Self `{State.Trait} := P.
    
    Parameter encode :
        forall
          `{State.Trait}
          {T : Set}
          `{parity_scale_codec.codec.Output.Trait T}
          `{core.marker.Sized.Trait T},
        (ref Self) -> (mut_ref T) -> M unit.
    
    Global Instance Method_encode
        `{State.Trait}
        {T : Set}
        `{parity_scale_codec.codec.Output.Trait T}
        `{core.marker.Sized.Trait T} :
      Notation.Dot "encode" := {
      Notation.dot := encode (T := T);
    }.
    
    Parameter decode :
        forall
          `{State.Trait}
          {I : Set}
          `{parity_scale_codec.codec.Input.Trait I},
        (mut_ref I) ->
          M (core.result.Result Self parity_scale_codec.error.Error).
    
    Global Instance AssociatedFunction_decode
        `{State.Trait}
        {I : Set}
        `{parity_scale_codec.codec.Input.Trait I} :
      Notation.DoubleColon Self "decode" := {
      Notation.double_colon := decode (I := I);
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.storage.Storable.Trait Self := {
      ink_storage_traits.storage.Storable.encode
        {T : Set}
        `{parity_scale_codec.codec.Output.Trait T}
        `{core.marker.Sized.Trait T}
        :=
        encode (T := T);
      ink_storage_traits.storage.Storable.decode
        {I : Set}
        `{parity_scale_codec.codec.Input.Trait I}
        :=
        decode (I := I);
    }.
  End Impl_ink_storage_traits_storage_Storable_for_P. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_storage_Storable_for_P. *)

Module private.
  Module Sealed.
    Unset Primitive Projections.
    Class Trait (Self : Set) : Type := {
    }.
    Global Set Primitive Projections.
  End Sealed.
End private.

Module Sealed.
  Unset Primitive Projections.
  Class Trait (Self : Set) : Type := {
  }.
  Global Set Primitive Projections.
End Sealed.

Module Packed.
  Unset Primitive Projections.
  Class Trait
      (Self : Set)
      `{ink_storage_traits.storage.Storable.Trait Self}
      `{parity_scale_codec.codec.Codec.Trait Self}
      `{ink_storage_traits.storage.private.Sealed.Trait Self} :
      Type := {
  }.
  Global Set Primitive Projections.
End Packed.

Module StorageKey.
  Class Trait (Self : Set) : Type := {
    KEY `{State.Trait} : ink_primitives.key.Key;
  }.
  
  Global Instance Method_KEY `{State.Trait} `(Trait) : Notation.Dot "KEY" := {
    Notation.dot := KEY;
  }.
  (* Global Instance Method_key `{State.Trait} `(Trait) : Notation.Dot "key" := {
    Notation.dot (self : ref Self) := (axiom : M ink_primitives.key.Key);
  }.
*) End StorageKey.

Module StorableHint.
  Class Trait
      (Self : Set)
      {Key : Set}
      `{ink_storage_traits.storage.StorageKey.Trait Key} :
      Type := {
    Type_ : Set;
    _ : Sigma `(ink_storage_traits.storage.Storable.Trait Type_), unit;
    PreferredKey : Set;
    _ : Sigma `(ink_storage_traits.storage.StorageKey.Trait PreferredKey), unit;
  }.
  
  Global Instance Method_Type_ `(Trait)
    : Notation.DoubleColonType Self "Type_" := {
    Notation.double_colon_type := Type_;
  }.
  Global Instance Method_PreferredKey `(Trait)
    : Notation.DoubleColonType Self "PreferredKey" := {
    Notation.double_colon_type := PreferredKey;
  }.
End StorableHint.

Module AutoStorableHint.
  Class Trait
      (Self : Set)
      {Key : Set}
      `{ink_storage_traits.storage.StorageKey.Trait Key} :
      Type := {
    Type_ : Set;
    _ : Sigma `(ink_storage_traits.storage.Storable.Trait Type_), unit;
  }.
  
  Global Instance Method_Type_ `(Trait)
    : Notation.DoubleColonType Self "Type_" := {
    Notation.double_colon_type := Type_;
  }.
End AutoStorableHint.

Module layout.
  Module StorageLayout.
    Class Trait (Self : Set) : Type := {
      layout `{State.Trait}
        :
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F);
    }.
    
    Global Instance Method_layout `{State.Trait} `(Trait)
      : Notation.Dot "layout" := {
      Notation.dot := layout;
    }.
  End StorageLayout.
  
  Module impls.
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
      Definition Self `{State.Trait} := ink_primitives.types.AccountId.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
      Definition Self `{State.Trait} := ink_primitives.types.Hash.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
      Definition Self `{State.Trait} := alloc.string.String.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_bool.
      Definition Self `{State.Trait} := bool.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_bool.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_char.
      Definition Self `{State.Trait} := char.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_char.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
      Definition Self `{State.Trait} := unit.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u8.
      Definition Self `{State.Trait} := u8.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u8.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u16.
      Definition Self `{State.Trait} := u16.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u16.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u32.
      Definition Self `{State.Trait} := u32.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u32.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u64.
      Definition Self `{State.Trait} := u64.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u64.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u128.
      Definition Self `{State.Trait} := u128.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u128.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i8.
      Definition Self `{State.Trait} := i8.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i8.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i16.
      Definition Self `{State.Trait} := i16.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i16.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i32.
      Definition Self `{State.Trait} := i32.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i32.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i64.
      Definition Self `{State.Trait} := i64.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i64.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i128.
      Definition Self `{State.Trait} := i128.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i128.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
      Section Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
        Context {T : Set}.
        Context
          `{ink_storage_traits.layout.StorageLayout.Trait T}
          `{ink_storage_traits.storage.Packed.Trait T}.
        Definition Self `{State.Trait} := array T.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
      Section
        Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
        Context {T : Set}.
        Context `{ink_storage_traits.layout.StorageLayout.Trait T}.
        Definition Self `{State.Trait} :=
          alloc.boxed.Box T alloc.boxed.Box.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End
        Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
      Global Hint Resolve I' : core.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
      Section
        Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
        Context {T : Set}.
        Context `{ink_storage_traits.layout.StorageLayout.Trait T}.
        Definition Self `{State.Trait} := core.option.Option T.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
      Section
        Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
        Context {T E : Set}.
        Context
          `{ink_storage_traits.layout.StorageLayout.Trait T}
          `{ink_storage_traits.layout.StorageLayout.Trait E}.
        Definition Self `{State.Trait} := core.result.Result T E.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End
        Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
      Section
        Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
        Context {T : Set}.
        Context
          `{scale_info.TypeInfo.Trait T}
          `{ink_storage_traits.storage.Packed.Trait T}.
        Definition Self `{State.Trait} :=
          alloc.vec.Vec T alloc.vec.Vec.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End
        Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
      Global Hint Resolve I' : core.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
    
    (* Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A.
      (* Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A.
        Context {K V : Set}.
        Context
          `{scale_info.TypeInfo.Trait K}
          `{ink_storage_traits.storage.Packed.Trait K}
          `{scale_info.TypeInfo.Trait V}
          `{ink_storage_traits.storage.Packed.Trait V}.
        Definition Self `{State.Trait} :=
          alloc.collections.btree.map.BTreeMap
            K
            V
            alloc.collections.btree.map.BTreeMap.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A. *)
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A. *)
    
    (* Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A.
      (* Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A.
        Context {T : Set}.
        Context
          `{scale_info.TypeInfo.Trait T}
          `{ink_storage_traits.storage.Packed.Trait T}.
        Definition Self `{State.Trait} :=
          alloc.collections.btree.set.BTreeSet
            T
            alloc.collections.btree.set.BTreeSet.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A. *)
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A. *)
    
    (* Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A.
      (* Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A.
        Context {T : Set}.
        Context
          `{scale_info.TypeInfo.Trait T}
          `{ink_storage_traits.storage.Packed.Trait T}.
        Definition Self `{State.Trait} :=
          alloc.collections.vec_deque.VecDeque
            T
            alloc.collections.vec_deque.VecDeque.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A. *)
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A. *)
  End impls.
End layout.

Module Wrap_impls_1.
  Module impls.
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
      Definition Self `{State.Trait} := ink_primitives.types.AccountId.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
      Definition Self `{State.Trait} := ink_primitives.types.Hash.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
      Definition Self `{State.Trait} := alloc.string.String.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_bool.
      Definition Self `{State.Trait} := bool.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_bool.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_char.
      Definition Self `{State.Trait} := char.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_char.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
      Definition Self `{State.Trait} := unit.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u8.
      Definition Self `{State.Trait} := u8.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u8.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u16.
      Definition Self `{State.Trait} := u16.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u16.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u32.
      Definition Self `{State.Trait} := u32.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u32.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u64.
      Definition Self `{State.Trait} := u64.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u64.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_u128.
      Definition Self `{State.Trait} := u128.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_u128.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i8.
      Definition Self `{State.Trait} := i8.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i8.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i16.
      Definition Self `{State.Trait} := i16.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i16.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i32.
      Definition Self `{State.Trait} := i32.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i32.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i64.
      Definition Self `{State.Trait} := i64.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i64.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_i128.
      Definition Self `{State.Trait} := i128.
      
      Parameter layout :
          forall `{State.Trait},
          (ref ink_primitives.key.Key) ->
            M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
      
      Global Instance AssociatedFunction_layout `{State.Trait} :
        Notation.DoubleColon Self "layout" := {
        Notation.double_colon := layout;
      }.
      
      Global Instance I' `{State.Trait}
        : ink_storage_traits.layout.StorageLayout.Trait Self := {
        ink_storage_traits.layout.StorageLayout.layout := layout;
      }.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_i128.
    
    Module Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
      Section Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
        Context {T : Set}.
        Context
          `{ink_storage_traits.layout.StorageLayout.Trait T}
          `{ink_storage_traits.storage.Packed.Trait T}.
        Definition Self `{State.Trait} := array T.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
      Section
        Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
        Context {T : Set}.
        Context `{ink_storage_traits.layout.StorageLayout.Trait T}.
        Definition Self `{State.Trait} :=
          alloc.boxed.Box T alloc.boxed.Box.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End
        Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
      Global Hint Resolve I' : core.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
      Section
        Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
        Context {T : Set}.
        Context `{ink_storage_traits.layout.StorageLayout.Trait T}.
        Definition Self `{State.Trait} := core.option.Option T.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
      Section
        Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
        Context {T E : Set}.
        Context
          `{ink_storage_traits.layout.StorageLayout.Trait T}
          `{ink_storage_traits.layout.StorageLayout.Trait E}.
        Definition Self `{State.Trait} := core.result.Result T E.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End
        Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
    
    Module
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
      Section
        Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
        Context {T : Set}.
        Context
          `{scale_info.TypeInfo.Trait T}
          `{ink_storage_traits.storage.Packed.Trait T}.
        Definition Self `{State.Trait} :=
          alloc.vec.Vec T alloc.vec.Vec.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End
        Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
      Global Hint Resolve I' : core.
    End
      Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
    
    (* Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A.
      (* Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A.
        Context {K V : Set}.
        Context
          `{scale_info.TypeInfo.Trait K}
          `{ink_storage_traits.storage.Packed.Trait K}
          `{scale_info.TypeInfo.Trait V}
          `{ink_storage_traits.storage.Packed.Trait V}.
        Definition Self `{State.Trait} :=
          alloc.collections.btree.map.BTreeMap
            K
            V
            alloc.collections.btree.map.BTreeMap.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A. *)
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A. *)
    
    (* Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A.
      (* Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A.
        Context {T : Set}.
        Context
          `{scale_info.TypeInfo.Trait T}
          `{ink_storage_traits.storage.Packed.Trait T}.
        Definition Self `{State.Trait} :=
          alloc.collections.btree.set.BTreeSet
            T
            alloc.collections.btree.set.BTreeSet.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A. *)
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A. *)
    
    (* Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A.
      (* Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A.
        Context {T : Set}.
        Context
          `{scale_info.TypeInfo.Trait T}
          `{ink_storage_traits.storage.Packed.Trait T}.
        Definition Self `{State.Trait} :=
          alloc.collections.vec_deque.VecDeque
            T
            alloc.collections.vec_deque.VecDeque.Default.A.
        
        Parameter layout :
            forall `{State.Trait},
            (ref ink_primitives.key.Key) ->
              M
                (ink_metadata.layout.Layout
                  ink_metadata.layout.Layout.Default.F).
        
        Global Instance AssociatedFunction_layout `{State.Trait} :
          Notation.DoubleColon Self "layout" := {
          Notation.double_colon := layout;
        }.
        
        Global Instance I' `{State.Trait}
          : ink_storage_traits.layout.StorageLayout.Trait Self := {
          ink_storage_traits.layout.StorageLayout.layout := layout;
        }.
      End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A. *)
      Global Hint Resolve I' : core.
    End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A. *)
  End impls.
End Wrap_impls_1.
Import Wrap_impls_1.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.
  Definition Self `{State.Trait} := ink_primitives.types.AccountId.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_AccountId.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.
  Definition Self `{State.Trait} := ink_primitives.types.Hash.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_ink_primitives_types_Hash.

Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.
  Definition Self `{State.Trait} := alloc.string.String.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_string_String.

Module Impl_ink_storage_traits_layout_StorageLayout_for_bool.
  Definition Self `{State.Trait} := bool.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_bool.

Module Impl_ink_storage_traits_layout_StorageLayout_for_char.
  Definition Self `{State.Trait} := char.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_char.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.
  Definition Self `{State.Trait} := unit.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u8.
  Definition Self `{State.Trait} := u8.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_u8.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u16.
  Definition Self `{State.Trait} := u16.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_u16.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u32.
  Definition Self `{State.Trait} := u32.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_u32.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u64.
  Definition Self `{State.Trait} := u64.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_u64.

Module Impl_ink_storage_traits_layout_StorageLayout_for_u128.
  Definition Self `{State.Trait} := u128.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_u128.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i8.
  Definition Self `{State.Trait} := i8.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_i8.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i16.
  Definition Self `{State.Trait} := i16.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_i16.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i32.
  Definition Self `{State.Trait} := i32.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_i32.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i64.
  Definition Self `{State.Trait} := i64.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_i64.

Module Impl_ink_storage_traits_layout_StorageLayout_for_i128.
  Definition Self `{State.Trait} := i128.
  
  Parameter layout :
      forall `{State.Trait},
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
  
  Global Instance AssociatedFunction_layout `{State.Trait} :
    Notation.DoubleColon Self "layout" := {
    Notation.double_colon := layout;
  }.
  
  Global Instance I' `{State.Trait}
    : ink_storage_traits.layout.StorageLayout.Trait Self := {
    ink_storage_traits.layout.StorageLayout.layout := layout;
  }.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_i128.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_.
    Context {A : Set}.
    Context `{ink_storage_traits.layout.StorageLayout.Trait A}.
    Definition Self `{State.Trait} := A.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_.
    Context {A B : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait A}
      `{ink_storage_traits.layout.StorageLayout.Trait B}.
    Definition Self `{State.Trait} := A * B.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_.
    Context {A B C : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait A}
      `{ink_storage_traits.layout.StorageLayout.Trait B}
      `{ink_storage_traits.layout.StorageLayout.Trait C}.
    Definition Self `{State.Trait} := (A * B) * C.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_.
    Context {A B C D : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait A}
      `{ink_storage_traits.layout.StorageLayout.Trait B}
      `{ink_storage_traits.layout.StorageLayout.Trait C}
      `{ink_storage_traits.layout.StorageLayout.Trait D}.
    Definition Self `{State.Trait} := ((A * B) * C) * D.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_.
    Context {A B C D E : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait A}
      `{ink_storage_traits.layout.StorageLayout.Trait B}
      `{ink_storage_traits.layout.StorageLayout.Trait C}
      `{ink_storage_traits.layout.StorageLayout.Trait D}
      `{ink_storage_traits.layout.StorageLayout.Trait E}.
    Definition Self `{State.Trait} := (((A * B) * C) * D) * E.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_.
    Context {A B C D E F : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait A}
      `{ink_storage_traits.layout.StorageLayout.Trait B}
      `{ink_storage_traits.layout.StorageLayout.Trait C}
      `{ink_storage_traits.layout.StorageLayout.Trait D}
      `{ink_storage_traits.layout.StorageLayout.Trait E}
      `{ink_storage_traits.layout.StorageLayout.Trait F}.
    Definition Self `{State.Trait} := ((((A * B) * C) * D) * E) * F.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_.
    Context {A B C D E F G : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait A}
      `{ink_storage_traits.layout.StorageLayout.Trait B}
      `{ink_storage_traits.layout.StorageLayout.Trait C}
      `{ink_storage_traits.layout.StorageLayout.Trait D}
      `{ink_storage_traits.layout.StorageLayout.Trait E}
      `{ink_storage_traits.layout.StorageLayout.Trait F}
      `{ink_storage_traits.layout.StorageLayout.Trait G}.
    Definition Self `{State.Trait} := (((((A * B) * C) * D) * E) * F) * G.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_.
    Context {A B C D E F G H : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait A}
      `{ink_storage_traits.layout.StorageLayout.Trait B}
      `{ink_storage_traits.layout.StorageLayout.Trait C}
      `{ink_storage_traits.layout.StorageLayout.Trait D}
      `{ink_storage_traits.layout.StorageLayout.Trait E}
      `{ink_storage_traits.layout.StorageLayout.Trait F}
      `{ink_storage_traits.layout.StorageLayout.Trait G}
      `{ink_storage_traits.layout.StorageLayout.Trait H}.
    Definition Self `{State.Trait} := ((((((A * B) * C) * D) * E) * F) * G) * H.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_.
    Context {A B C D E F G H I : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait A}
      `{ink_storage_traits.layout.StorageLayout.Trait B}
      `{ink_storage_traits.layout.StorageLayout.Trait C}
      `{ink_storage_traits.layout.StorageLayout.Trait D}
      `{ink_storage_traits.layout.StorageLayout.Trait E}
      `{ink_storage_traits.layout.StorageLayout.Trait F}
      `{ink_storage_traits.layout.StorageLayout.Trait G}
      `{ink_storage_traits.layout.StorageLayout.Trait H}
      `{ink_storage_traits.layout.StorageLayout.Trait I}.
    Definition Self `{State.Trait} :=
      (((((((A * B) * C) * D) * E) * F) * G) * H) * I.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_J_.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_J_.
    Context {A B C D E F G H I J : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait A}
      `{ink_storage_traits.layout.StorageLayout.Trait B}
      `{ink_storage_traits.layout.StorageLayout.Trait C}
      `{ink_storage_traits.layout.StorageLayout.Trait D}
      `{ink_storage_traits.layout.StorageLayout.Trait E}
      `{ink_storage_traits.layout.StorageLayout.Trait F}
      `{ink_storage_traits.layout.StorageLayout.Trait G}
      `{ink_storage_traits.layout.StorageLayout.Trait H}
      `{ink_storage_traits.layout.StorageLayout.Trait I}
      `{ink_storage_traits.layout.StorageLayout.Trait J}.
    Definition Self `{State.Trait} :=
      ((((((((A * B) * C) * D) * E) * F) * G) * H) * I) * J.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_J_.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Tuple_A_B_C_D_E_F_G_H_I_J_.

Module Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
    Context {T : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait T}
      `{ink_storage_traits.storage.Packed.Trait T}.
    Definition Self `{State.Trait} := array T.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_Array_T.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
    Context {T : Set}.
    Context `{ink_storage_traits.layout.StorageLayout.Trait T}.
    Definition Self `{State.Trait} :=
      alloc.boxed.Box T alloc.boxed.Box.Default.A.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.
  Global Hint Resolve I' : core.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_boxed_Box_T_alloc_boxed_Box_Default_A.

Module Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
  Section Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
    Context {T : Set}.
    Context `{ink_storage_traits.layout.StorageLayout.Trait T}.
    Definition Self `{State.Trait} := core.option.Option T.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_core_option_Option_T.

Module Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
    Context {T E : Set}.
    Context
      `{ink_storage_traits.layout.StorageLayout.Trait T}
      `{ink_storage_traits.layout.StorageLayout.Trait E}.
    Definition Self `{State.Trait} := core.result.Result T E.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_core_result_Result_T_E.

Module
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
  Section
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
    Context {T : Set}.
    Context
      `{scale_info.TypeInfo.Trait T}
      `{ink_storage_traits.storage.Packed.Trait T}.
    Definition Self `{State.Trait} := alloc.vec.Vec T alloc.vec.Vec.Default.A.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End
    Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.
  Global Hint Resolve I' : core.
End
  Impl_ink_storage_traits_layout_StorageLayout_for_alloc_vec_Vec_T_alloc_vec_Vec_Default_A.

(* Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A.
  (* Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A.
    Context {K V : Set}.
    Context
      `{scale_info.TypeInfo.Trait K}
      `{ink_storage_traits.storage.Packed.Trait K}
      `{scale_info.TypeInfo.Trait V}
      `{ink_storage_traits.storage.Packed.Trait V}.
    Definition Self `{State.Trait} :=
      alloc.collections.btree.map.BTreeMap
        K
        V
        alloc.collections.btree.map.BTreeMap.Default.A.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_map_BTreeMap_K_V_alloc_collections_btree_map_BTreeMap_Default_A. *)

(* Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A.
  (* Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A.
    Context {T : Set}.
    Context
      `{scale_info.TypeInfo.Trait T}
      `{ink_storage_traits.storage.Packed.Trait T}.
    Definition Self `{State.Trait} :=
      alloc.collections.btree.set.BTreeSet
        T
        alloc.collections.btree.set.BTreeSet.Default.A.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_btree_set_BTreeSet_T_alloc_collections_btree_set_BTreeSet_Default_A. *)

(* Module Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A.
  (* Section Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A.
    Context {T : Set}.
    Context
      `{scale_info.TypeInfo.Trait T}
      `{ink_storage_traits.storage.Packed.Trait T}.
    Definition Self `{State.Trait} :=
      alloc.collections.vec_deque.VecDeque
        T
        alloc.collections.vec_deque.VecDeque.Default.A.
    
    Parameter layout :
        forall `{State.Trait},
        (ref ink_primitives.key.Key) ->
          M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F).
    
    Global Instance AssociatedFunction_layout `{State.Trait} :
      Notation.DoubleColon Self "layout" := {
      Notation.double_colon := layout;
    }.
    
    Global Instance I' `{State.Trait}
      : ink_storage_traits.layout.StorageLayout.Trait Self := {
      ink_storage_traits.layout.StorageLayout.layout := layout;
    }.
  End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A. *)
  Global Hint Resolve I' : core.
End Impl_ink_storage_traits_layout_StorageLayout_for_alloc_collections_vec_deque_VecDeque_T_alloc_collections_vec_deque_VecDeque_Default_A. *)

Module StorageLayout.
  Class Trait (Self : Set) : Type := {
    layout `{State.Trait}
      :
      (ref ink_primitives.key.Key) ->
        M (ink_metadata.layout.Layout ink_metadata.layout.Layout.Default.F);
  }.
  
  Global Instance Method_layout `{State.Trait} `(Trait)
    : Notation.Dot "layout" := {
    Notation.dot := layout;
  }.
End StorageLayout.
