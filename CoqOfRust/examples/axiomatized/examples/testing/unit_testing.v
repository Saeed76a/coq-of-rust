(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
pub fn add(a: i32, b: i32) -> i32 {
    a + b
}
*)
Parameter add : (M.Val i32.t) -> (M.Val i32.t) -> M i32.t.

(*
fn bad_add(a: i32, b: i32) -> i32 {
    a - b
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter bad_add : (M.Val i32.t) -> (M.Val i32.t) -> M i32.t.

Module tests.
  (*
      fn test_add() {
          assert_eq!(add(1, 2), 3);
      }
  *)
  Parameter test_add : M unit.
  
  (*
      fn test_bad_add() {
          // This assert would fire and test will fail.
          // Please note, that private functions can be tested too!
          assert_eq!(bad_add(1, 2), 3);
      }
  *)
  Parameter test_bad_add : M unit.
End tests.

(*
    fn test_add() {
        assert_eq!(add(1, 2), 3);
    }
*)
Parameter test_add : M unit.

(*
    fn test_bad_add() {
        // This assert would fire and test will fail.
        // Please note, that private functions can be tested too!
        assert_eq!(bad_add(1, 2), 3);
    }
*)
Parameter test_bad_add : M unit.
