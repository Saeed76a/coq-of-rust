(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  ProvidedAndRequired.
Section ProvidedAndRequired.
  Class Trait (Self : Set) : Type := {
    required : (ref Self) -> M i32.t;
  }.
  
End ProvidedAndRequired.
End ProvidedAndRequired.

Module  Impl_provided_method_ProvidedAndRequired_for_i32_t.
Section Impl_provided_method_ProvidedAndRequired_for_i32_t.
  Definition Self : Set := i32.t.
  
  Parameter required : (ref Self) -> M i32.t.
  
  Global Instance AssociatedFunction_required :
    Notations.DoubleColon Self "required" := {
    Notations.double_colon := required;
  }.
  
  Global Instance ℐ :
    provided_method.ProvidedAndRequired.Required.Trait Self := {
    provided_method.ProvidedAndRequired.required := required;
    provided_method.ProvidedAndRequired.provided := Datatypes.None;
  }.
End Impl_provided_method_ProvidedAndRequired_for_i32_t.
End Impl_provided_method_ProvidedAndRequired_for_i32_t.

Module  Impl_provided_method_ProvidedAndRequired_for_u32_t.
Section Impl_provided_method_ProvidedAndRequired_for_u32_t.
  Definition Self : Set := u32.t.
  
  Parameter required : (ref Self) -> M i32.t.
  
  Global Instance AssociatedFunction_required :
    Notations.DoubleColon Self "required" := {
    Notations.double_colon := required;
  }.
  
  Parameter provided : (ref Self) -> M i32.t.
  
  Global Instance AssociatedFunction_provided :
    Notations.DoubleColon Self "provided" := {
    Notations.double_colon := provided;
  }.
  
  Global Instance ℐ :
    provided_method.ProvidedAndRequired.Required.Trait Self := {
    provided_method.ProvidedAndRequired.required := required;
    provided_method.ProvidedAndRequired.provided := Datatypes.Some provided;
  }.
End Impl_provided_method_ProvidedAndRequired_for_u32_t.
End Impl_provided_method_ProvidedAndRequired_for_u32_t.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M unit.
