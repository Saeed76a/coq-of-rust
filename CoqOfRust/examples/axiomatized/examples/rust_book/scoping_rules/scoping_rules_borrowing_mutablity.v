(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* #[allow(dead_code)] - struct was ignored by the compiler *)
Module  Book.
Section Book.
  Record t : Set := {
    author : ref str.t;
    title : ref str.t;
    year : u32.t;
  }.
  
  Definition Get_author :=
    Ref.map (fun α => Some α.(author)) (fun β α => Some (α <| author := β |>)).
  Definition Get_title :=
    Ref.map (fun α => Some α.(title)) (fun β α => Some (α <| title := β |>)).
  Definition Get_year :=
    Ref.map (fun α => Some α.(year)) (fun β α => Some (α <| year := β |>)).
End Book.
End Book.

Module  Impl_core_clone_Clone_for_scoping_rules_borrowing_mutablity_Book_t.
Section Impl_core_clone_Clone_for_scoping_rules_borrowing_mutablity_Book_t.
  Definition Self : Set := scoping_rules_borrowing_mutablity.Book.t.
  
  (* #[allow(dead_code)] - function was ignored by the compiler *)
  Parameter clone : (ref Self) -> M scoping_rules_borrowing_mutablity.Book.t.
  
  Global Instance AssociatedFunction_clone :
    Notations.DoubleColon Self "clone" := {
    Notations.double_colon := clone;
  }.
  
  Global Instance ℐ : core.clone.Clone.Required.Trait Self := {
    core.clone.Clone.clone := clone;
    core.clone.Clone.clone_from := Datatypes.None;
  }.
End Impl_core_clone_Clone_for_scoping_rules_borrowing_mutablity_Book_t.
End Impl_core_clone_Clone_for_scoping_rules_borrowing_mutablity_Book_t.

Module  Impl_core_marker_Copy_for_scoping_rules_borrowing_mutablity_Book_t.
Section Impl_core_marker_Copy_for_scoping_rules_borrowing_mutablity_Book_t.
  Definition Self : Set := scoping_rules_borrowing_mutablity.Book.t.
  
  Global Instance ℐ : core.marker.Copy.Trait Self := {
  }.
End Impl_core_marker_Copy_for_scoping_rules_borrowing_mutablity_Book_t.
End Impl_core_marker_Copy_for_scoping_rules_borrowing_mutablity_Book_t.

Parameter borrow_book :
    (ref scoping_rules_borrowing_mutablity.Book.t) -> M unit.

Parameter new_edition :
    (mut_ref scoping_rules_borrowing_mutablity.Book.t) -> M unit.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M unit.
