(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.



Module  Contains.
Section Contains.
  Class Trait (Self : Set) {A B : Set} : Type := {
    contains :
      Ty.function
        [Ty.apply (Ty.path "ref") [Self];
          Ty.apply (Ty.path "ref") [A];
          Ty.apply (Ty.path "ref") [B]]
        (Ty.path "bool");
    first : Ty.function [Ty.apply (Ty.path "ref") [Self]] (Ty.path "i32");
    last : Ty.function [Ty.apply (Ty.path "ref") [Self]] (Ty.path "i32");
  }.
  
End Contains.
End Contains.

Module  Impl_generics_associated_types_problem_Contains_i32_i32_for_generics_associated_types_problem_Container.
Section Impl_generics_associated_types_problem_Contains_i32_i32_for_generics_associated_types_problem_Container.
  Definition Self : Ty.t :=
    Ty.apply (Ty.path "generics_associated_types_problem::Container") [].
  
  Parameter contains :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply
              (Ty.path "generics_associated_types_problem::Container")
              []])
        ->
        (Ty.apply (Ty.path "ref") [Ty.path "i32"]) ->
        (Ty.apply (Ty.path "ref") [Ty.path "i32"]) ->
        Ty.path "bool".
  
  Definition AssociatedFunction_contains : Instance.t := {
    Notations.double_colon := contains;
  }.
  
  Parameter first :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply
              (Ty.path "generics_associated_types_problem::Container")
              []])
        ->
        Ty.path "i32".
  
  Definition AssociatedFunction_first : Instance.t := {
    Notations.double_colon := first;
  }.
  
  Parameter last :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply
              (Ty.path "generics_associated_types_problem::Container")
              []])
        ->
        Ty.path "i32".
  
  Definition AssociatedFunction_last : Instance.t := {
    Notations.double_colon := last;
  }.
  
  Definition ℐ : Instance.t := [("contains", contains);
    ("first", first);
    ("last", last)].
End Impl_generics_associated_types_problem_Contains_i32_i32_for_generics_associated_types_problem_Container.
End Impl_generics_associated_types_problem_Contains_i32_i32_for_generics_associated_types_problem_Container.

Parameter difference :
    forall {A B C : Set},
    (Ty.apply (Ty.path "ref") [C]) -> Ty.path "i32".

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : Ty.path "unit".
