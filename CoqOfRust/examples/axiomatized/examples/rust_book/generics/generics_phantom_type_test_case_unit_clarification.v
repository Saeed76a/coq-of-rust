(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum Inch *)
(* {
  ty_params := [];
  variants := [];
} *)

Module Impl_core_fmt_Debug_for_generics_phantom_type_test_case_unit_clarification_Inch.
  Definition Self : Ty.t :=
    Ty.path "generics_phantom_type_test_case_unit_clarification::Inch".
  
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Self *)
        (Ty.path "generics_phantom_type_test_case_unit_clarification::Inch")
      (* Trait polymorphic types *) []
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_generics_phantom_type_test_case_unit_clarification_Inch.

Module Impl_core_clone_Clone_for_generics_phantom_type_test_case_unit_clarification_Inch.
  Definition Self : Ty.t :=
    Ty.path "generics_phantom_type_test_case_unit_clarification::Inch".
  
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::clone::Clone"
      (* Self *)
        (Ty.path "generics_phantom_type_test_case_unit_clarification::Inch")
      (* Trait polymorphic types *) []
      (* Instance *) [ ("clone", InstanceField.Method clone) ].
End Impl_core_clone_Clone_for_generics_phantom_type_test_case_unit_clarification_Inch.

Module Impl_core_marker_Copy_for_generics_phantom_type_test_case_unit_clarification_Inch.
  Definition Self : Ty.t :=
    Ty.path "generics_phantom_type_test_case_unit_clarification::Inch".
  
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::Copy"
      (* Self *)
        (Ty.path "generics_phantom_type_test_case_unit_clarification::Inch")
      (* Trait polymorphic types *) []
      (* Instance *) [].
End Impl_core_marker_Copy_for_generics_phantom_type_test_case_unit_clarification_Inch.

(* Enum Mm *)
(* {
  ty_params := [];
  variants := [];
} *)

Module Impl_core_fmt_Debug_for_generics_phantom_type_test_case_unit_clarification_Mm.
  Definition Self : Ty.t :=
    Ty.path "generics_phantom_type_test_case_unit_clarification::Mm".
  
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Self *)
        (Ty.path "generics_phantom_type_test_case_unit_clarification::Mm")
      (* Trait polymorphic types *) []
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_generics_phantom_type_test_case_unit_clarification_Mm.

Module Impl_core_clone_Clone_for_generics_phantom_type_test_case_unit_clarification_Mm.
  Definition Self : Ty.t :=
    Ty.path "generics_phantom_type_test_case_unit_clarification::Mm".
  
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::clone::Clone"
      (* Self *)
        (Ty.path "generics_phantom_type_test_case_unit_clarification::Mm")
      (* Trait polymorphic types *) []
      (* Instance *) [ ("clone", InstanceField.Method clone) ].
End Impl_core_clone_Clone_for_generics_phantom_type_test_case_unit_clarification_Mm.

Module Impl_core_marker_Copy_for_generics_phantom_type_test_case_unit_clarification_Mm.
  Definition Self : Ty.t :=
    Ty.path "generics_phantom_type_test_case_unit_clarification::Mm".
  
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::Copy"
      (* Self *)
        (Ty.path "generics_phantom_type_test_case_unit_clarification::Mm")
      (* Trait polymorphic types *) []
      (* Instance *) [].
End Impl_core_marker_Copy_for_generics_phantom_type_test_case_unit_clarification_Mm.

(* Struct
  {
    name := "Length";
    ty_params := [ ("Unit", None) ];
    fields :=
      [ Ty.path "f64"; Ty.apply (Ty.path "core::marker::PhantomData") [ Unit ]
      ];
  } *)

Module Impl_core_fmt_Debug_for_generics_phantom_type_test_case_unit_clarification_Length_Unit.
  Definition Self (Unit : Ty.t) : Ty.t :=
    Ty.apply
      (Ty.path "generics_phantom_type_test_case_unit_clarification::Length")
      [ Unit ].
  
  Parameter fmt : forall (Unit : Ty.t), (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    forall (Unit : Ty.t),
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Self *)
        (Ty.apply
          (Ty.path "generics_phantom_type_test_case_unit_clarification::Length")
          [ Unit ])
      (* Trait polymorphic types *) []
      (* Instance *) [ ("fmt", InstanceField.Method (fmt Unit)) ].
End Impl_core_fmt_Debug_for_generics_phantom_type_test_case_unit_clarification_Length_Unit.

Module Impl_core_clone_Clone_for_generics_phantom_type_test_case_unit_clarification_Length_Unit.
  Definition Self (Unit : Ty.t) : Ty.t :=
    Ty.apply
      (Ty.path "generics_phantom_type_test_case_unit_clarification::Length")
      [ Unit ].
  
  Parameter clone : forall (Unit : Ty.t), (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    forall (Unit : Ty.t),
    M.IsTraitInstance
      "core::clone::Clone"
      (* Self *)
        (Ty.apply
          (Ty.path "generics_phantom_type_test_case_unit_clarification::Length")
          [ Unit ])
      (* Trait polymorphic types *) []
      (* Instance *) [ ("clone", InstanceField.Method (clone Unit)) ].
End Impl_core_clone_Clone_for_generics_phantom_type_test_case_unit_clarification_Length_Unit.

Module Impl_core_marker_Copy_for_generics_phantom_type_test_case_unit_clarification_Length_Unit.
  Definition Self (Unit : Ty.t) : Ty.t :=
    Ty.apply
      (Ty.path "generics_phantom_type_test_case_unit_clarification::Length")
      [ Unit ].
  
  Axiom Implements :
    forall (Unit : Ty.t),
    M.IsTraitInstance
      "core::marker::Copy"
      (* Self *)
        (Ty.apply
          (Ty.path "generics_phantom_type_test_case_unit_clarification::Length")
          [ Unit ])
      (* Trait polymorphic types *) []
      (* Instance *) [].
End Impl_core_marker_Copy_for_generics_phantom_type_test_case_unit_clarification_Length_Unit.

Module Impl_core_ops_arith_Add_for_generics_phantom_type_test_case_unit_clarification_Length_Unit.
  Definition Self (Unit : Ty.t) : Ty.t :=
    Ty.apply
      (Ty.path "generics_phantom_type_test_case_unit_clarification::Length")
      [ Unit ].
  
  Definition Output : Ty.t :=
    Ty.apply
        (Ty.path "generics_phantom_type_test_case_unit_clarification::Length")
        [ Unit ].
  
  Parameter add : forall (Unit : Ty.t), (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    forall (Unit : Ty.t),
    M.IsTraitInstance
      "core::ops::arith::Add"
      (* Self *)
        (Ty.apply
          (Ty.path "generics_phantom_type_test_case_unit_clarification::Length")
          [ Unit ])
      (* Trait polymorphic types *) []
      (* Instance *)
        [
          ("Output", InstanceField.Ty Output);
          ("add", InstanceField.Method (add Unit))
        ].
End Impl_core_ops_arith_Add_for_generics_phantom_type_test_case_unit_clarification_Length_Unit.

Parameter main : (list Ty.t) -> (list Value.t) -> M.
