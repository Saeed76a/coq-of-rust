(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module HasArea.
  Class Trait (Self : Set) : Type := {
    area : Ty.function [Ty.apply (Ty.path "ref") [Self]] (Ty.path "f64");
  }.
  
End HasArea.

(* Enum Rectangle *)

Module Impl_core_fmt_Debug_for_generics_bounds_Rectangle.
  Definition Self : Ty.t := Ty.path "generics_bounds::Rectangle".
  
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("fmt", InstanceField.Method fmt)].
End Impl_core_fmt_Debug_for_generics_bounds_Rectangle.

(* Enum Triangle *)

Module Impl_generics_bounds_HasArea_for_generics_bounds_Rectangle.
  Definition Self : Ty.t := Ty.path "generics_bounds::Rectangle".
  
  Parameter area : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("area", InstanceField.Method area)].
End Impl_generics_bounds_HasArea_for_generics_bounds_Rectangle.

Parameter print_debug : (list Ty.t) -> (list Value.t) -> M.

Parameter area : (list Ty.t) -> (list Value.t) -> M.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : (list Ty.t) -> (list Value.t) -> M.
