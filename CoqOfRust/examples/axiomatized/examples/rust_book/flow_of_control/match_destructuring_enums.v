(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Color.
  Inductive t : Set :=
  | Red
  | Blue
  | Green
  | RGB (_ : u32.t) (_ : u32.t) (_ : u32.t)
  | HSV (_ : u32.t) (_ : u32.t) (_ : u32.t)
  | HSL (_ : u32.t) (_ : u32.t) (_ : u32.t)
  | CMY (_ : u32.t) (_ : u32.t) (_ : u32.t)
  | CMYK (_ : u32.t) (_ : u32.t) (_ : u32.t) (_ : u32.t).
  
  Definition Get_RGB_0 :=
    Ref.map
      (fun α => match α with | RGB α0 _ _ => Some α0 | _ => None end)
      (fun β α =>
        match α with | RGB _ α1 α2 => Some (RGB β α1 α2) | _ => None end).
  
  Definition Get_RGB_1 :=
    Ref.map
      (fun α => match α with | RGB _ α1 _ => Some α1 | _ => None end)
      (fun β α =>
        match α with | RGB α0 _ α2 => Some (RGB α0 β α2) | _ => None end).
  
  Definition Get_RGB_2 :=
    Ref.map
      (fun α => match α with | RGB _ _ α2 => Some α2 | _ => None end)
      (fun β α =>
        match α with | RGB α0 α1 _ => Some (RGB α0 α1 β) | _ => None end).
  
  Definition Get_HSV_0 :=
    Ref.map
      (fun α => match α with | HSV α0 _ _ => Some α0 | _ => None end)
      (fun β α =>
        match α with | HSV _ α1 α2 => Some (HSV β α1 α2) | _ => None end).
  
  Definition Get_HSV_1 :=
    Ref.map
      (fun α => match α with | HSV _ α1 _ => Some α1 | _ => None end)
      (fun β α =>
        match α with | HSV α0 _ α2 => Some (HSV α0 β α2) | _ => None end).
  
  Definition Get_HSV_2 :=
    Ref.map
      (fun α => match α with | HSV _ _ α2 => Some α2 | _ => None end)
      (fun β α =>
        match α with | HSV α0 α1 _ => Some (HSV α0 α1 β) | _ => None end).
  
  Definition Get_HSL_0 :=
    Ref.map
      (fun α => match α with | HSL α0 _ _ => Some α0 | _ => None end)
      (fun β α =>
        match α with | HSL _ α1 α2 => Some (HSL β α1 α2) | _ => None end).
  
  Definition Get_HSL_1 :=
    Ref.map
      (fun α => match α with | HSL _ α1 _ => Some α1 | _ => None end)
      (fun β α =>
        match α with | HSL α0 _ α2 => Some (HSL α0 β α2) | _ => None end).
  
  Definition Get_HSL_2 :=
    Ref.map
      (fun α => match α with | HSL _ _ α2 => Some α2 | _ => None end)
      (fun β α =>
        match α with | HSL α0 α1 _ => Some (HSL α0 α1 β) | _ => None end).
  
  Definition Get_CMY_0 :=
    Ref.map
      (fun α => match α with | CMY α0 _ _ => Some α0 | _ => None end)
      (fun β α =>
        match α with | CMY _ α1 α2 => Some (CMY β α1 α2) | _ => None end).
  
  Definition Get_CMY_1 :=
    Ref.map
      (fun α => match α with | CMY _ α1 _ => Some α1 | _ => None end)
      (fun β α =>
        match α with | CMY α0 _ α2 => Some (CMY α0 β α2) | _ => None end).
  
  Definition Get_CMY_2 :=
    Ref.map
      (fun α => match α with | CMY _ _ α2 => Some α2 | _ => None end)
      (fun β α =>
        match α with | CMY α0 α1 _ => Some (CMY α0 α1 β) | _ => None end).
  
  Definition Get_CMYK_0 :=
    Ref.map
      (fun α => match α with | CMYK α0 _ _ _ => Some α0 | _ => None end)
      (fun β α =>
        match α with
        | CMYK _ α1 α2 α3 => Some (CMYK β α1 α2 α3)
        | _ => None
        end).
  
  Definition Get_CMYK_1 :=
    Ref.map
      (fun α => match α with | CMYK _ α1 _ _ => Some α1 | _ => None end)
      (fun β α =>
        match α with
        | CMYK α0 _ α2 α3 => Some (CMYK α0 β α2 α3)
        | _ => None
        end).
  
  Definition Get_CMYK_2 :=
    Ref.map
      (fun α => match α with | CMYK _ _ α2 _ => Some α2 | _ => None end)
      (fun β α =>
        match α with
        | CMYK α0 α1 _ α3 => Some (CMYK α0 α1 β α3)
        | _ => None
        end).
  
  Definition Get_CMYK_3 :=
    Ref.map
      (fun α => match α with | CMYK _ _ _ α3 => Some α3 | _ => None end)
      (fun β α =>
        match α with
        | CMYK α0 α1 α2 _ => Some (CMYK α0 α1 α2 β)
        | _ => None
        end).
End Color.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M unit.
