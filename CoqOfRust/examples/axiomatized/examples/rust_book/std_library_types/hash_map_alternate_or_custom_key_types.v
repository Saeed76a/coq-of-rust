(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum Account *)

Module Impl_core_marker_StructuralPartialEq_for_hash_map_alternate_or_custom_key_types_Account.
  Axiom Implements :
    let Self := Ty.path "hash_map_alternate_or_custom_key_types::Account" in
    M.IsTraitInstance "core::marker::StructuralPartialEq" Self [] [].
End Impl_core_marker_StructuralPartialEq_for_hash_map_alternate_or_custom_key_types_Account.

Module Impl_core_cmp_PartialEq_for_hash_map_alternate_or_custom_key_types_Account.
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "hash_map_alternate_or_custom_key_types::Account" in
    M.IsTraitInstance
      "core::cmp::PartialEq"
      Self
      []
      [ ("eq", InstanceField.Method eq [ Self ]) ].
End Impl_core_cmp_PartialEq_for_hash_map_alternate_or_custom_key_types_Account.

Module Impl_core_marker_StructuralEq_for_hash_map_alternate_or_custom_key_types_Account.
  Axiom Implements :
    let Self := Ty.path "hash_map_alternate_or_custom_key_types::Account" in
    M.IsTraitInstance "core::marker::StructuralEq" Self [] [].
End Impl_core_marker_StructuralEq_for_hash_map_alternate_or_custom_key_types_Account.

Module Impl_core_cmp_Eq_for_hash_map_alternate_or_custom_key_types_Account.
  Parameter assert_receiver_is_total_eq : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "hash_map_alternate_or_custom_key_types::Account" in
    M.IsTraitInstance
      "core::cmp::Eq"
      Self
      []
      [
        ("assert_receiver_is_total_eq",
          InstanceField.Method assert_receiver_is_total_eq [ Self ])
      ].
End Impl_core_cmp_Eq_for_hash_map_alternate_or_custom_key_types_Account.

Module Impl_core_hash_Hash_for_hash_map_alternate_or_custom_key_types_Account.
  Parameter hash : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "hash_map_alternate_or_custom_key_types::Account" in
    M.IsTraitInstance
      "core::hash::Hash"
      Self
      []
      [ ("hash", InstanceField.Method hash [ Self ]) ].
End Impl_core_hash_Hash_for_hash_map_alternate_or_custom_key_types_Account.

(* Enum AccountInfo *)

Axiom Accounts :
  (Ty.path "hash_map_alternate_or_custom_key_types::Accounts") =
    (Ty.apply
      (Ty.path "std::collections::hash::map::HashMap")
      [
        Ty.path "hash_map_alternate_or_custom_key_types::Account";
        Ty.path "hash_map_alternate_or_custom_key_types::AccountInfo";
        Ty.path "std::hash::random::RandomState"
      ]).

Parameter try_logon : (list Ty.t) -> (list Value.t) -> M.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : (list Ty.t) -> (list Value.t) -> M.
