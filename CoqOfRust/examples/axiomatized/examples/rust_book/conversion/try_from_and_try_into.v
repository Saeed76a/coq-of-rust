(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.



Module  Impl_core_fmt_Debug_for_try_from_and_try_into_EvenNumber.
Section Impl_core_fmt_Debug_for_try_from_and_try_into_EvenNumber.
  Definition Self : Ty.t :=
    Ty.apply (Ty.path "try_from_and_try_into::EvenNumber") [].
  
  Parameter fmt :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "try_from_and_try_into::EvenNumber") []])
        ->
        (Ty.apply
          (Ty.path "mut_ref")
          [Ty.apply (Ty.path "core::fmt::Formatter") []])
        ->
        Ty.apply
          (Ty.path "core::result::Result")
          [Ty.tuple; Ty.apply (Ty.path "core::fmt::Error") []].
  
  Definition AssociatedFunction_fmt : Instance.t := {
    Notations.double_colon := fmt;
  }.
  
  Definition ℐ : Instance.t := [("fmt", fmt)].
End Impl_core_fmt_Debug_for_try_from_and_try_into_EvenNumber.
End Impl_core_fmt_Debug_for_try_from_and_try_into_EvenNumber.

Module  Impl_core_marker_StructuralPartialEq_for_try_from_and_try_into_EvenNumber.
Section Impl_core_marker_StructuralPartialEq_for_try_from_and_try_into_EvenNumber.
  Definition Self : Ty.t :=
    Ty.apply (Ty.path "try_from_and_try_into::EvenNumber") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_try_from_and_try_into_EvenNumber.
End Impl_core_marker_StructuralPartialEq_for_try_from_and_try_into_EvenNumber.

Module  Impl_core_cmp_PartialEq_for_try_from_and_try_into_EvenNumber.
Section Impl_core_cmp_PartialEq_for_try_from_and_try_into_EvenNumber.
  Definition Self : Ty.t :=
    Ty.apply (Ty.path "try_from_and_try_into::EvenNumber") [].
  
  Parameter eq :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "try_from_and_try_into::EvenNumber") []])
        ->
        (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "try_from_and_try_into::EvenNumber") []])
        ->
        Ty.path "bool".
  
  Definition AssociatedFunction_eq : Instance.t := {
    Notations.double_colon := eq;
  }.
  
  Definition ℐ : Instance.t := [("eq", eq); ("ne", ne)].
End Impl_core_cmp_PartialEq_for_try_from_and_try_into_EvenNumber.
End Impl_core_cmp_PartialEq_for_try_from_and_try_into_EvenNumber.

Module  Impl_core_convert_TryFrom_i32_for_try_from_and_try_into_EvenNumber.
Section Impl_core_convert_TryFrom_i32_for_try_from_and_try_into_EvenNumber.
  Definition Self : Ty.t :=
    Ty.apply (Ty.path "try_from_and_try_into::EvenNumber") [].
  
  Definition Error : Set := Ty.tuple.
  
  Parameter try_from :
      (Ty.path "i32") ->
        Ty.apply
          (Ty.path "core::result::Result")
          [Ty.apply (Ty.path "try_from_and_try_into::EvenNumber") []; _].
  
  Definition AssociatedFunction_try_from : Instance.t := {
    Notations.double_colon := try_from;
  }.
  
  Definition ℐ : Instance.t := [("Error", Error); ("try_from", try_from)].
End Impl_core_convert_TryFrom_i32_for_try_from_and_try_into_EvenNumber.
End Impl_core_convert_TryFrom_i32_for_try_from_and_try_into_EvenNumber.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : Ty.path "unit".
