(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module my.
  Module  OpenBox.
  Section OpenBox.
    Context (T : Set).
    
    Record t : Set := {
      contents : T;
    }.
    
    Definition Get_contents :=
      Ref.map
        (fun α => Some α.(contents))
        (fun β α => Some (α <| contents := β |>)).
  End OpenBox.
  End OpenBox.
  
  Module  ClosedBox.
  Section ClosedBox.
    Context (T : Set).
    
    Record t : Set := {
      contents : T;
    }.
    
    Definition Get_contents :=
      Ref.map
        (fun α => Some α.(contents))
        (fun β α => Some (α <| contents := β |>)).
  End ClosedBox.
  End ClosedBox.
  
  Module  Impl_struct_visibility_my_ClosedBox_t_T.
  Section Impl_struct_visibility_my_ClosedBox_t_T.
    Context {T : Set}.
    
    Definition Self : Set := struct_visibility.my.ClosedBox.t T.
    
    Parameter new : T -> M (struct_visibility.my.ClosedBox.t T).
    
    Global Instance AssociatedFunction_new :
      Notations.DoubleColon Self "new" := {
      Notations.double_colon := new;
    }.
  End Impl_struct_visibility_my_ClosedBox_t_T.
  End Impl_struct_visibility_my_ClosedBox_t_T.
End my.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M unit.
