(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Person.
Section Person.
  Class Trait (Self : Set) : Type := {
    name :
      Ty.function
        [Ty.apply (Ty.path "ref") [Self]]
        (Ty.apply (Ty.path "alloc::string::String") []);
  }.
  
End Person.
End Person.

Module  Student.
Section Student.
  Class Trait (Self : Set) : Type := {
    university :
      Ty.function
        [Ty.apply (Ty.path "ref") [Self]]
        (Ty.apply (Ty.path "alloc::string::String") []);
  }.
  
End Student.
End Student.

Module  Programmer.
Section Programmer.
  Class Trait (Self : Set) : Type := {
    fav_language :
      Ty.function
        [Ty.apply (Ty.path "ref") [Self]]
        (Ty.apply (Ty.path "alloc::string::String") []);
  }.
  
End Programmer.
End Programmer.

Module  CompSciStudent.
Section CompSciStudent.
  Class Trait (Self : Set) : Type := {
    git_username :
      Ty.function
        [Ty.apply (Ty.path "ref") [Self]]
        (Ty.apply (Ty.path "alloc::string::String") []);
  }.
  
End CompSciStudent.
End CompSciStudent.

Parameter comp_sci_student_greeting :
    forall {DynT : Set},
    (Ty.apply (Ty.path "ref") [DynT]) ->
      Ty.apply (Ty.path "alloc::string::String") [].

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : Ty.path "unit".
