(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Struct
  {
    name := "Foo";
    ty_params := [];
  } *)

(* Struct
  {
    name := "Bar";
    ty_params := [];
  } *)

(* Struct
  {
    name := "FooBar";
    ty_params := [];
  } *)

Module Impl_core_fmt_Debug_for_operator_overloading_FooBar.
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Self *) (Ty.path "operator_overloading::FooBar")
      (* Trait polymorphic types *) []
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ]
      (* Instance polymorphic types *) [].
End Impl_core_fmt_Debug_for_operator_overloading_FooBar.

(* Struct
  {
    name := "BarFoo";
    ty_params := [];
  } *)

Module Impl_core_fmt_Debug_for_operator_overloading_BarFoo.
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Self *) (Ty.path "operator_overloading::BarFoo")
      (* Trait polymorphic types *) []
      (* Instance *) [ ("fmt", InstanceField.Method fmt) ]
      (* Instance polymorphic types *) [].
End Impl_core_fmt_Debug_for_operator_overloading_BarFoo.

Module Impl_core_ops_arith_Add_operator_overloading_Bar_for_operator_overloading_Foo.
  Definition Output : Ty.t := Ty.path "operator_overloading::FooBar".
  
  Parameter add : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::ops::arith::Add"
      (* Self *) (Ty.path "operator_overloading::Foo")
      (* Trait polymorphic types *)
        [ (* Rhs *) Ty.path "operator_overloading::Bar" ]
      (* Instance *)
        [ ("Output", InstanceField.Ty Output); ("add", InstanceField.Method add)
        ]
      (* Instance polymorphic types *) [].
End Impl_core_ops_arith_Add_operator_overloading_Bar_for_operator_overloading_Foo.

Module Impl_core_ops_arith_Add_operator_overloading_Foo_for_operator_overloading_Bar.
  Definition Output : Ty.t := Ty.path "operator_overloading::BarFoo".
  
  Parameter add : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::ops::arith::Add"
      (* Self *) (Ty.path "operator_overloading::Bar")
      (* Trait polymorphic types *)
        [ (* Rhs *) Ty.path "operator_overloading::Foo" ]
      (* Instance *)
        [ ("Output", InstanceField.Ty Output); ("add", InstanceField.Method add)
        ]
      (* Instance polymorphic types *) [].
End Impl_core_ops_arith_Add_operator_overloading_Foo_for_operator_overloading_Bar.

Parameter main : (list Ty.t) -> (list Value.t) -> M.
