(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Struct Foo *)

(* Struct Bar *)

(* Struct FooBar *)

Module Impl_core_fmt_Debug_for_operator_overloading_FooBar.
  Definition Self : Ty.t := Ty.path "operator_overloading::FooBar".
  
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_operator_overloading_FooBar.

(* Struct BarFoo *)

Module Impl_core_fmt_Debug_for_operator_overloading_BarFoo.
  Definition Self : Ty.t := Ty.path "operator_overloading::BarFoo".
  
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("fmt", InstanceField.Method fmt) ].
End Impl_core_fmt_Debug_for_operator_overloading_BarFoo.

Module Impl_core_ops_arith_Add_operator_overloading_Bar_for_operator_overloading_Foo.
  Definition Self : Ty.t := Ty.path "operator_overloading::Foo".
  
  Definition Output : Set := Ty.path "operator_overloading::FooBar".
  
  Parameter add : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t :=
    [ ("Output", TODO); ("add", InstanceField.Method add) ].
End Impl_core_ops_arith_Add_operator_overloading_Bar_for_operator_overloading_Foo.

Module Impl_core_ops_arith_Add_operator_overloading_Foo_for_operator_overloading_Bar.
  Definition Self : Ty.t := Ty.path "operator_overloading::Bar".
  
  Definition Output : Set := Ty.path "operator_overloading::BarFoo".
  
  Parameter add : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t :=
    [ ("Output", TODO); ("add", InstanceField.Method add) ].
End Impl_core_ops_arith_Add_operator_overloading_Foo_for_operator_overloading_Bar.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : (list Ty.t) -> (list Value.t) -> M.
