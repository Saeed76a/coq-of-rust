(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Struct Sheep *)

(* Struct Cow *)

(* Trait *)
Module Animal.
  
End Animal.

Module Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.
  Parameter noise : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "returning_traits_with_dyn::Sheep" in
    M.IsTraitInstance
      "returning_traits_with_dyn::Animal"
      Self
      []
      [ ("noise", InstanceField.Method noise [ Self ]) ].
End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.

Module Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.
  Parameter noise : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "returning_traits_with_dyn::Cow" in
    M.IsTraitInstance
      "returning_traits_with_dyn::Animal"
      Self
      []
      [ ("noise", InstanceField.Method noise [ Self ]) ].
End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.

Parameter random_animal : (list Ty.t) -> (list Value.t) -> M.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : (list Ty.t) -> (list Value.t) -> M.
