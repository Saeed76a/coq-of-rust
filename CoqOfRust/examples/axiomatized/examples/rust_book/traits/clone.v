(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Unit.
Section Unit.
  Inductive t : Set := Build.
End Unit.
End Unit.

Module  Impl_core_fmt_Debug_for_clone_Unit_t.
Section Impl_core_fmt_Debug_for_clone_Unit_t.
  Definition Self : Set := clone.Unit.t.
  
  Parameter fmt :
      (ref Self) -> (mut_ref core.fmt.Formatter.t) -> M ltac:(core.fmt.Result).
  
  Global Instance AssociatedFunction_fmt : Notations.DoubleColon Self "fmt" := {
    Notations.double_colon := fmt;
  }.
  
  Global Instance ℐ : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt := fmt;
  }.
End Impl_core_fmt_Debug_for_clone_Unit_t.
End Impl_core_fmt_Debug_for_clone_Unit_t.

Module  Impl_core_clone_Clone_for_clone_Unit_t.
Section Impl_core_clone_Clone_for_clone_Unit_t.
  Definition Self : Set := clone.Unit.t.
  
  Parameter clone : (ref Self) -> M clone.Unit.t.
  
  Global Instance AssociatedFunction_clone :
    Notations.DoubleColon Self "clone" := {
    Notations.double_colon := clone;
  }.
  
  Global Instance ℐ : core.clone.Clone.Required.Trait Self := {
    core.clone.Clone.clone := clone;
    core.clone.Clone.clone_from := Datatypes.None;
  }.
End Impl_core_clone_Clone_for_clone_Unit_t.
End Impl_core_clone_Clone_for_clone_Unit_t.

Module  Impl_core_marker_Copy_for_clone_Unit_t.
Section Impl_core_marker_Copy_for_clone_Unit_t.
  Definition Self : Set := clone.Unit.t.
  
  Global Instance ℐ : core.marker.Copy.Trait Self := {
  }.
End Impl_core_marker_Copy_for_clone_Unit_t.
End Impl_core_marker_Copy_for_clone_Unit_t.

Module  Pair.
Section Pair.
  Record t : Set := {
    x0 : alloc.boxed.Box.t i32.t alloc.boxed.Box.Default.A;
    x1 : alloc.boxed.Box.t i32.t alloc.boxed.Box.Default.A;
  }.
  
  Definition Get_0 :=
    Ref.map (fun α => Some α.(x0)) (fun β α => Some (α <| x0 := β |>)).
  Definition Get_1 :=
    Ref.map (fun α => Some α.(x1)) (fun β α => Some (α <| x1 := β |>)).
End Pair.
End Pair.

Module  Impl_core_clone_Clone_for_clone_Pair_t.
Section Impl_core_clone_Clone_for_clone_Pair_t.
  Definition Self : Set := clone.Pair.t.
  
  Parameter clone : (ref Self) -> M clone.Pair.t.
  
  Global Instance AssociatedFunction_clone :
    Notations.DoubleColon Self "clone" := {
    Notations.double_colon := clone;
  }.
  
  Global Instance ℐ : core.clone.Clone.Required.Trait Self := {
    core.clone.Clone.clone := clone;
    core.clone.Clone.clone_from := Datatypes.None;
  }.
End Impl_core_clone_Clone_for_clone_Pair_t.
End Impl_core_clone_Clone_for_clone_Pair_t.

Module  Impl_core_fmt_Debug_for_clone_Pair_t.
Section Impl_core_fmt_Debug_for_clone_Pair_t.
  Definition Self : Set := clone.Pair.t.
  
  Parameter fmt :
      (ref Self) -> (mut_ref core.fmt.Formatter.t) -> M ltac:(core.fmt.Result).
  
  Global Instance AssociatedFunction_fmt : Notations.DoubleColon Self "fmt" := {
    Notations.double_colon := fmt;
  }.
  
  Global Instance ℐ : core.fmt.Debug.Trait Self := {
    core.fmt.Debug.fmt := fmt;
  }.
End Impl_core_fmt_Debug_for_clone_Pair_t.
End Impl_core_fmt_Debug_for_clone_Pair_t.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M unit.
