(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.



Module  Impl_core_hash_Hash_for_hash_Person.
Section Impl_core_hash_Hash_for_hash_Person.
  Definition Self : Ty.t := Ty.apply (Ty.path "hash::Person") [].
  
  Parameter hash :
      forall {__H : Set},
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "hash::Person") []]) ->
        (Ty.apply (Ty.path "mut_ref") [__H]) ->
        Ty.tuple.
  
  Definition AssociatedFunction_hash {__H : Set} : Instance.t := {
    Notations.double_colon := hash (__H := __H);
  }.
  
  Definition ℐ : Instance.t := [("hash", hash); ("hash_slice", hash_slice)].
End Impl_core_hash_Hash_for_hash_Person.
End Impl_core_hash_Hash_for_hash_Person.

Parameter calculate_hash :
    forall {T : Set},
    (Ty.apply (Ty.path "ref") [T]) -> Ty.path "u64".

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : Ty.path "unit".
