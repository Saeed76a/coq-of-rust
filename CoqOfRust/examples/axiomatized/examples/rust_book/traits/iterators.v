(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum Fibonacci *)

Module Impl_core_iter_traits_iterator_Iterator_for_iterators_Fibonacci.
  Definition Item : Set := Ty.path "u32".
  
  Parameter next : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "iterators::Fibonacci" in
    M.IsTraitInstance
      "core::iter::traits::iterator::Iterator"
      Self
      []
      [ ("Item", TODO); ("next", InstanceField.Method next [ Self ]) ].
End Impl_core_iter_traits_iterator_Iterator_for_iterators_Fibonacci.

Parameter fibonacci : (list Ty.t) -> (list Value.t) -> M.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : (list Ty.t) -> (list Value.t) -> M.
