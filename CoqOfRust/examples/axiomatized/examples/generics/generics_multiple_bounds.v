(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn compare_prints<T: Debug + Display>(t: &T) {
    println!("Debug: `{:?}`", t);
    println!("Display: `{}`", t);
}
*)
Parameter compare_prints :
    forall
      {T : Set}
      {ℋ_0 : core.fmt.Debug.Trait T}
      {ℋ_1 : core.fmt.Display.Trait T},
    (M.Val (ref T)) -> M unit.

(*
fn compare_types<T: Debug, U: Debug>(t: &T, u: &U) {
    println!("t: `{:?}`", t);
    println!("u: `{:?}`", u);
}
*)
Parameter compare_types :
    forall
      {T U : Set}
      {ℋ_0 : core.fmt.Debug.Trait T}
      {ℋ_1 : core.fmt.Debug.Trait U},
    (M.Val (ref T)) -> (M.Val (ref U)) -> M unit.

(*
fn main() {
    let string = "words";
    let array = [1, 2, 3];
    let vec = vec![1, 2, 3];

    compare_prints(&string);
    //compare_prints(&array);
    // TODO ^ Try uncommenting this.

    compare_types(&array, &vec);
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M unit.
