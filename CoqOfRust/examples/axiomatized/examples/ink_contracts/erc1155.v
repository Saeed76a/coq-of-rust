(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum Mapping *)

Module Impl_core_default_Default_for_erc1155_Mapping_K_V.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    forall (K V : Ty.t),
    let Self := Ty.apply (Ty.path "erc1155::Mapping") [ K; V ] in
    M.IsTraitInstance
      "core::default::Default"
      Self
      []
      [ ("default", InstanceField.Method default [ Self; K; V ]) ].
End Impl_core_default_Default_for_erc1155_Mapping_K_V.

Module Impl_erc1155_Mapping_K_V.
  Definition Self (K V : Ty.t) : Ty.t :=
    Ty.apply (Ty.path "erc1155::Mapping") [ K; V ].
  
  Parameter contains : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter insert : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter remove : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter size : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter take : (list Ty.t) -> (list Value.t) -> M.
End Impl_erc1155_Mapping_K_V.

(* Struct AccountId *)

Module Impl_core_default_Default_for_erc1155_AccountId.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "erc1155::AccountId" in
    M.IsTraitInstance
      "core::default::Default"
      Self
      []
      [ ("default", InstanceField.Method default [ Self ]) ].
End Impl_core_default_Default_for_erc1155_AccountId.

Module Impl_core_clone_Clone_for_erc1155_AccountId.
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "erc1155::AccountId" in
    M.IsTraitInstance
      "core::clone::Clone"
      Self
      []
      [ ("clone", InstanceField.Method clone [ Self ]) ].
End Impl_core_clone_Clone_for_erc1155_AccountId.

Module Impl_core_marker_Copy_for_erc1155_AccountId.
  Axiom Implements :
    let Self := Ty.path "erc1155::AccountId" in
    M.IsTraitInstance "core::marker::Copy" Self [] [].
End Impl_core_marker_Copy_for_erc1155_AccountId.

Module Impl_core_marker_StructuralPartialEq_for_erc1155_AccountId.
  Axiom Implements :
    let Self := Ty.path "erc1155::AccountId" in
    M.IsTraitInstance "core::marker::StructuralPartialEq" Self [] [].
End Impl_core_marker_StructuralPartialEq_for_erc1155_AccountId.

Module Impl_core_cmp_PartialEq_for_erc1155_AccountId.
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "erc1155::AccountId" in
    M.IsTraitInstance
      "core::cmp::PartialEq"
      Self
      []
      [ ("eq", InstanceField.Method eq [ Self ]) ].
End Impl_core_cmp_PartialEq_for_erc1155_AccountId.

Module Impl_core_convert_From_array_u8_for_erc1155_AccountId.
  Parameter from : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "erc1155::AccountId" in
    M.IsTraitInstance
      "core::convert::From"
      Self
      [ (* T *) Ty.apply (Ty.path "array") [ Ty.path "u8" ] ]
      [ ("from", InstanceField.Method from [ Self ]) ].
End Impl_core_convert_From_array_u8_for_erc1155_AccountId.

Axiom Balance : (Ty.path "erc1155::Balance") = (Ty.path "u128").

(* Enum Env *)

Parameter zero_address : (list Ty.t) -> (list Value.t) -> M.

Parameter ON_ERC_1155_RECEIVED_SELECTOR : Value.t.

Parameter _ON_ERC_1155_BATCH_RECEIVED_SELECTOR : Value.t.

Axiom TokenId : (Ty.path "erc1155::TokenId") = (Ty.path "u128").

(* Enum Error *)

Module Impl_core_marker_StructuralPartialEq_for_erc1155_Error.
  Axiom Implements :
    let Self := Ty.path "erc1155::Error" in
    M.IsTraitInstance "core::marker::StructuralPartialEq" Self [] [].
End Impl_core_marker_StructuralPartialEq_for_erc1155_Error.

Module Impl_core_cmp_PartialEq_for_erc1155_Error.
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "erc1155::Error" in
    M.IsTraitInstance
      "core::cmp::PartialEq"
      Self
      []
      [ ("eq", InstanceField.Method eq [ Self ]) ].
End Impl_core_cmp_PartialEq_for_erc1155_Error.

Module Impl_core_marker_StructuralEq_for_erc1155_Error.
  Axiom Implements :
    let Self := Ty.path "erc1155::Error" in
    M.IsTraitInstance "core::marker::StructuralEq" Self [] [].
End Impl_core_marker_StructuralEq_for_erc1155_Error.

Module Impl_core_cmp_Eq_for_erc1155_Error.
  Parameter assert_receiver_is_total_eq : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "erc1155::Error" in
    M.IsTraitInstance
      "core::cmp::Eq"
      Self
      []
      [
        ("assert_receiver_is_total_eq",
          InstanceField.Method assert_receiver_is_total_eq [ Self ])
      ].
End Impl_core_cmp_Eq_for_erc1155_Error.

Axiom Result :
  forall (T : Ty.t),
  (Ty.path "erc1155::Result") =
    (Ty.apply (Ty.path "core::result::Result") [ T; Ty.path "erc1155::Error" ]).

(* Trait *)
Module Erc1155.
  
End Erc1155.

(* Trait *)
Module Erc1155TokenReceiver.
  
End Erc1155TokenReceiver.

Axiom Owner : (Ty.path "erc1155::Owner") = (Ty.path "erc1155::AccountId").

Axiom Operator : (Ty.path "erc1155::Operator") = (Ty.path "erc1155::AccountId").

(* Enum TransferSingle *)

(* Enum ApprovalForAll *)

(* Enum Uri *)

(* Enum Event *)

Module Impl_erc1155_Env.
  Definition Self : Ty.t := Ty.path "erc1155::Env".
  
  Parameter caller : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter emit_event : (list Ty.t) -> (list Value.t) -> M.
End Impl_erc1155_Env.

(* Enum Contract *)

Module Impl_core_default_Default_for_erc1155_Contract.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "erc1155::Contract" in
    M.IsTraitInstance
      "core::default::Default"
      Self
      []
      [ ("default", InstanceField.Method default [ Self ]) ].
End Impl_core_default_Default_for_erc1155_Contract.

Module Impl_erc1155_Contract.
  Definition Self : Ty.t := Ty.path "erc1155::Contract".
  
  Parameter init_env : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter env : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter new : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter create : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter mint : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter perform_transfer : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter transfer_acceptance_check : (list Ty.t) -> (list Value.t) -> M.
End Impl_erc1155_Contract.

Module Impl_erc1155_Erc1155_for_erc1155_Contract.
  Parameter is_approved_for_all : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter balance_of : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter safe_transfer_from : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter safe_batch_transfer_from : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter balance_of_batch : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter set_approval_for_all : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "erc1155::Contract" in
    M.IsTraitInstance
      "erc1155::Erc1155"
      Self
      []
      [
        ("is_approved_for_all",
          InstanceField.Method is_approved_for_all [ Self ]);
        ("balance_of", InstanceField.Method balance_of [ Self ]);
        ("safe_transfer_from",
          InstanceField.Method safe_transfer_from [ Self ]);
        ("safe_batch_transfer_from",
          InstanceField.Method safe_batch_transfer_from [ Self ]);
        ("balance_of_batch", InstanceField.Method balance_of_batch [ Self ]);
        ("set_approval_for_all",
          InstanceField.Method set_approval_for_all [ Self ])
      ].
End Impl_erc1155_Erc1155_for_erc1155_Contract.

Module Impl_erc1155_Erc1155TokenReceiver_for_erc1155_Contract.
  Parameter on_received : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter on_batch_received : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    let Self := Ty.path "erc1155::Contract" in
    M.IsTraitInstance
      "erc1155::Erc1155TokenReceiver"
      Self
      []
      [
        ("on_received", InstanceField.Method on_received [ Self ]);
        ("on_batch_received", InstanceField.Method on_batch_received [ Self ])
      ].
End Impl_erc1155_Erc1155TokenReceiver_for_erc1155_Contract.
