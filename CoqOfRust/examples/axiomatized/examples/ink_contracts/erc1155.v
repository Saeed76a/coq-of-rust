(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum Mapping *)

Module Impl_core_default_Default_for_erc1155_Mapping_K_V.
  Definition Self (K V : Ty.t) : Ty.t :=
    Ty.apply (Ty.path "erc1155::Mapping") [K; V].
  
  Parameter default : forall (K V : Ty.t), (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ (K V : Ty.t) : Instance.t :=
    [("default", InstanceField.Method (default K V))].
End Impl_core_default_Default_for_erc1155_Mapping_K_V.

Module Impl_erc1155_Mapping_K_V.
  Definition Self (K V : Ty.t) : Ty.t :=
    Ty.apply (Ty.path "erc1155::Mapping") [K; V].
  
  Parameter contains : forall (K V : Ty.t), (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get : forall (K V : Ty.t), (list Ty.t) -> (list Value.t) -> M.
  
  Parameter insert : forall (K V : Ty.t), (list Ty.t) -> (list Value.t) -> M.
  
  Parameter remove : forall (K V : Ty.t), (list Ty.t) -> (list Value.t) -> M.
  
  Parameter size : forall (K V : Ty.t), (list Ty.t) -> (list Value.t) -> M.
  
  Parameter take : forall (K V : Ty.t), (list Ty.t) -> (list Value.t) -> M.
End Impl_erc1155_Mapping_K_V.

(* Struct AccountId *)

Module Impl_core_default_Default_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("default", InstanceField.Method default)].
End Impl_core_default_Default_for_erc1155_AccountId.

Module Impl_core_clone_Clone_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("clone", InstanceField.Method clone)].
End Impl_core_clone_Clone_for_erc1155_AccountId.

Module Impl_core_marker_Copy_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_Copy_for_erc1155_AccountId.

Module Impl_core_marker_StructuralPartialEq_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_erc1155_AccountId.

Module Impl_core_cmp_PartialEq_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("eq", InstanceField.Method eq)].
End Impl_core_cmp_PartialEq_for_erc1155_AccountId.

Module Impl_core_convert_From_array_u8_for_erc1155_AccountId.
  Definition Self : Ty.t := Ty.path "erc1155::AccountId".
  
  Parameter from : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("from", InstanceField.Method from)].
End Impl_core_convert_From_array_u8_for_erc1155_AccountId.

Axiom Balance : (Ty.path "erc1155::Balance") = (Ty.path "u128").

(* Enum Env *)

Parameter zero_address : (list Ty.t) -> (list Value.t) -> M.

Parameter ON_ERC_1155_RECEIVED_SELECTOR : Value.t.

Parameter _ON_ERC_1155_BATCH_RECEIVED_SELECTOR : Value.t.

Axiom TokenId : (Ty.path "erc1155::TokenId") = (Ty.path "u128").

(* Enum Error *)

Module Impl_core_marker_StructuralPartialEq_for_erc1155_Error.
  Definition Self : Ty.t := Ty.path "erc1155::Error".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_erc1155_Error.

Module Impl_core_cmp_PartialEq_for_erc1155_Error.
  Definition Self : Ty.t := Ty.path "erc1155::Error".
  
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("eq", InstanceField.Method eq)].
End Impl_core_cmp_PartialEq_for_erc1155_Error.

Module Impl_core_marker_StructuralEq_for_erc1155_Error.
  Definition Self : Ty.t := Ty.path "erc1155::Error".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_erc1155_Error.

Module Impl_core_cmp_Eq_for_erc1155_Error.
  Definition Self : Ty.t := Ty.path "erc1155::Error".
  
  Parameter assert_receiver_is_total_eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t :=
    [("assert_receiver_is_total_eq",
        InstanceField.Method assert_receiver_is_total_eq)].
End Impl_core_cmp_Eq_for_erc1155_Error.

Axiom Result :
  forall (T : Ty.t),
  (Ty.path "erc1155::Result") =
    (Ty.apply (Ty.path "core::result::Result") [T; Ty.path "erc1155::Error"]).

(* Trait *)
Module Erc1155.
  
End Erc1155.

(* Trait *)
Module Erc1155TokenReceiver.
  
End Erc1155TokenReceiver.

Axiom Owner : (Ty.path "erc1155::Owner") = (Ty.path "erc1155::AccountId").

Axiom Operator : (Ty.path "erc1155::Operator") = (Ty.path "erc1155::AccountId").

(* Enum TransferSingle *)

(* Enum ApprovalForAll *)

(* Enum Uri *)

(* Enum Event *)

Module Impl_erc1155_Env.
  Definition Self : Ty.t := Ty.path "erc1155::Env".
  
  Parameter caller : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter emit_event : (list Ty.t) -> (list Value.t) -> M.
End Impl_erc1155_Env.

(* Enum Contract *)

Module Impl_core_default_Default_for_erc1155_Contract.
  Definition Self : Ty.t := Ty.path "erc1155::Contract".
  
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("default", InstanceField.Method default)].
End Impl_core_default_Default_for_erc1155_Contract.

Module Impl_erc1155_Contract.
  Definition Self : Ty.t := Ty.path "erc1155::Contract".
  
  Parameter init_env : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter env : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter new : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter create : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter mint : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter perform_transfer : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter transfer_acceptance_check : (list Ty.t) -> (list Value.t) -> M.
End Impl_erc1155_Contract.

Module Impl_erc1155_Erc1155_for_erc1155_Contract.
  Definition Self : Ty.t := Ty.path "erc1155::Contract".
  
  Parameter is_approved_for_all : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter balance_of : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter safe_transfer_from : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter safe_batch_transfer_from : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter balance_of_batch : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter set_approval_for_all : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t :=
    [("is_approved_for_all", InstanceField.Method is_approved_for_all);
      ("balance_of", InstanceField.Method balance_of);
      ("safe_transfer_from", InstanceField.Method safe_transfer_from);
      ("safe_batch_transfer_from",
        InstanceField.Method safe_batch_transfer_from);
      ("balance_of_batch", InstanceField.Method balance_of_batch);
      ("set_approval_for_all", InstanceField.Method set_approval_for_all)].
End Impl_erc1155_Erc1155_for_erc1155_Contract.

Module Impl_erc1155_Erc1155TokenReceiver_for_erc1155_Contract.
  Definition Self : Ty.t := Ty.path "erc1155::Contract".
  
  Parameter on_received : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter on_batch_received : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t :=
    [("on_received", InstanceField.Method on_received);
      ("on_batch_received", InstanceField.Method on_batch_received)].
End Impl_erc1155_Erc1155TokenReceiver_for_erc1155_Contract.
