(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum Mapping *)

Module Impl_core_default_Default_for_multisig_Mapping_K_V.
  Context {K V : Set}.
  
  Definition Self : Ty.t := Ty.apply (Ty.path "multisig::Mapping") [K; V].
  
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("default", InstanceField.Method default)].
End Impl_core_default_Default_for_multisig_Mapping_K_V.

Module Impl_multisig_Mapping_K_V.
  Context {K V : Set}.
  
  Definition Self : Ty.t := Ty.apply (Ty.path "multisig::Mapping") [K; V].
  
  Parameter contains : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter insert : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter remove : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter size : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter take : (list Ty.t) -> (list Value.t) -> M.
End Impl_multisig_Mapping_K_V.

(* Struct AccountId *)

Module Impl_core_default_Default_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("default", InstanceField.Method default)].
End Impl_core_default_Default_for_multisig_AccountId.

Module Impl_core_fmt_Debug_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("fmt", InstanceField.Method fmt)].
End Impl_core_fmt_Debug_for_multisig_AccountId.

Module Impl_core_clone_Clone_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("clone", InstanceField.Method clone)].
End Impl_core_clone_Clone_for_multisig_AccountId.

Module Impl_core_marker_Copy_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_Copy_for_multisig_AccountId.

Module Impl_core_marker_StructuralPartialEq_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_multisig_AccountId.

Module Impl_core_cmp_PartialEq_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("eq", InstanceField.Method eq)].
End Impl_core_cmp_PartialEq_for_multisig_AccountId.

Module Impl_core_marker_StructuralEq_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_multisig_AccountId.

Module Impl_core_cmp_Eq_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Parameter assert_receiver_is_total_eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("assert_receiver_is_total_eq",
      InstanceField.Method assert_receiver_is_total_eq)].
End Impl_core_cmp_Eq_for_multisig_AccountId.

Module Impl_core_cmp_PartialOrd_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Parameter partial_cmp : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("partial_cmp",
      InstanceField.Method partial_cmp)].
End Impl_core_cmp_PartialOrd_for_multisig_AccountId.

Module Impl_core_cmp_Ord_for_multisig_AccountId.
  Definition Self : Ty.t := Ty.path "multisig::AccountId".
  
  Parameter cmp : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("cmp", InstanceField.Method cmp)].
End Impl_core_cmp_Ord_for_multisig_AccountId.

Axiom Balance : (Ty.path "multisig::Balance") = (Ty.path "u128").

(* Enum Env *)

Parameter MAX_OWNERS : Value.t.

Axiom TransactionId : (Ty.path "multisig::TransactionId") = (Ty.path "u32").

Parameter WRONG_TRANSACTION_ID : Value.t.

(* Struct CallInput *)

(* Enum ConfirmationStatus *)

Module Impl_core_clone_Clone_for_multisig_ConfirmationStatus.
  Definition Self : Ty.t := Ty.path "multisig::ConfirmationStatus".
  
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("clone", InstanceField.Method clone)].
End Impl_core_clone_Clone_for_multisig_ConfirmationStatus.

Module Impl_core_marker_Copy_for_multisig_ConfirmationStatus.
  Definition Self : Ty.t := Ty.path "multisig::ConfirmationStatus".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_Copy_for_multisig_ConfirmationStatus.

(* Enum Transaction *)

Module Impl_core_default_Default_for_multisig_Transaction.
  Definition Self : Ty.t := Ty.path "multisig::Transaction".
  
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("default", InstanceField.Method default)].
End Impl_core_default_Default_for_multisig_Transaction.

(* Enum Error *)

Module Impl_core_clone_Clone_for_multisig_Error.
  Definition Self : Ty.t := Ty.path "multisig::Error".
  
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("clone", InstanceField.Method clone)].
End Impl_core_clone_Clone_for_multisig_Error.

Module Impl_core_marker_Copy_for_multisig_Error.
  Definition Self : Ty.t := Ty.path "multisig::Error".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_Copy_for_multisig_Error.

Module Impl_core_marker_StructuralPartialEq_for_multisig_Error.
  Definition Self : Ty.t := Ty.path "multisig::Error".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_multisig_Error.

Module Impl_core_cmp_PartialEq_for_multisig_Error.
  Definition Self : Ty.t := Ty.path "multisig::Error".
  
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("eq", InstanceField.Method eq)].
End Impl_core_cmp_PartialEq_for_multisig_Error.

Module Impl_core_marker_StructuralEq_for_multisig_Error.
  Definition Self : Ty.t := Ty.path "multisig::Error".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_multisig_Error.

Module Impl_core_cmp_Eq_for_multisig_Error.
  Definition Self : Ty.t := Ty.path "multisig::Error".
  
  Parameter assert_receiver_is_total_eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("assert_receiver_is_total_eq",
      InstanceField.Method assert_receiver_is_total_eq)].
End Impl_core_cmp_Eq_for_multisig_Error.

(* Enum Transactions *)

Module Impl_core_default_Default_for_multisig_Transactions.
  Definition Self : Ty.t := Ty.path "multisig::Transactions".
  
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("default", InstanceField.Method default)].
End Impl_core_default_Default_for_multisig_Transactions.

(* Enum Confirmation *)

(* Enum Revocation *)

(* Enum Submission *)

(* Enum Cancellation *)

(* Enum Execution *)

(* Enum OwnerAddition *)

(* Enum OwnerRemoval *)

(* Enum RequirementChange *)

(* Enum Event *)

Module Impl_multisig_Env.
  Definition Self : Ty.t := Ty.path "multisig::Env".
  
  Parameter caller : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter emit_event : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter transferred_value : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter account_id : (list Ty.t) -> (list Value.t) -> M.
End Impl_multisig_Env.

(* Enum Multisig *)

Module Impl_core_default_Default_for_multisig_Multisig.
  Definition Self : Ty.t := Ty.path "multisig::Multisig".
  
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("default", InstanceField.Method default)].
End Impl_core_default_Default_for_multisig_Multisig.

Parameter ensure_requirement_is_valid : (list Ty.t) -> (list Value.t) -> M.

Module Impl_multisig_Multisig.
  Definition Self : Ty.t := Ty.path "multisig::Multisig".
  
  Parameter init_env : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter env : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter new : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter ensure_confirmed : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter ensure_transaction_exists : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter ensure_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter ensure_caller_is_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter ensure_from_wallet : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter ensure_no_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter add_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter owner_index : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter clean_owner_confirmations : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter remove_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter replace_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter change_requirement : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter confirm_by_caller : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter submit_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter take_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter cancel_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter confirm_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter revoke_confirmation : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter invoke_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter eval_transaction : (list Ty.t) -> (list Value.t) -> M.
End Impl_multisig_Multisig.
