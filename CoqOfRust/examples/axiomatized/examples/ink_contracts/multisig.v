(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum Mapping *)

Module Impl_core_default_Default_for_multisig_Mapping_K_V.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    forall (K V : Ty.t),
    M.IsTraitInstance
      "core::default::Default"
      (* Self *) (Ty.apply (Ty.path "multisig::Mapping") [ K; V ])
      []
      [ ("default", InstanceField.Method default [ K; V ]) ].
End Impl_core_default_Default_for_multisig_Mapping_K_V.

Module Impl_multisig_Mapping_K_V.
  Definition Self (K V : Ty.t) : Ty.t :=
    Ty.apply (Ty.path "multisig::Mapping") [ K; V ].
  
  Parameter contains : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_contains :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "contains" contains [ K; V ].
  
  Parameter get : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_get :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "get" get [ K; V ].
  
  Parameter insert : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_insert :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "insert" insert [ K; V ].
  
  Parameter remove : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_remove :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "remove" remove [ K; V ].
  
  Parameter size : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_size :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "size" size [ K; V ].
  
  Parameter take : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_take :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "take" take [ K; V ].
End Impl_multisig_Mapping_K_V.

(* Struct AccountId *)

Module Impl_core_default_Default_for_multisig_AccountId.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::default::Default"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [ ("default", InstanceField.Method default []) ].
End Impl_core_default_Default_for_multisig_AccountId.

Module Impl_core_fmt_Debug_for_multisig_AccountId.
  Parameter fmt : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::fmt::Debug"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [ ("fmt", InstanceField.Method fmt []) ].
End Impl_core_fmt_Debug_for_multisig_AccountId.

Module Impl_core_clone_Clone_for_multisig_AccountId.
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::clone::Clone"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [ ("clone", InstanceField.Method clone []) ].
End Impl_core_clone_Clone_for_multisig_AccountId.

Module Impl_core_marker_Copy_for_multisig_AccountId.
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::Copy"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [].
End Impl_core_marker_Copy_for_multisig_AccountId.

Module Impl_core_marker_StructuralPartialEq_for_multisig_AccountId.
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::StructuralPartialEq"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [].
End Impl_core_marker_StructuralPartialEq_for_multisig_AccountId.

Module Impl_core_cmp_PartialEq_for_multisig_AccountId.
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::cmp::PartialEq"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [ ("eq", InstanceField.Method eq []) ].
End Impl_core_cmp_PartialEq_for_multisig_AccountId.

Module Impl_core_marker_StructuralEq_for_multisig_AccountId.
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::StructuralEq"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [].
End Impl_core_marker_StructuralEq_for_multisig_AccountId.

Module Impl_core_cmp_Eq_for_multisig_AccountId.
  Parameter assert_receiver_is_total_eq : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::cmp::Eq"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [
        ("assert_receiver_is_total_eq",
          InstanceField.Method assert_receiver_is_total_eq [])
      ].
End Impl_core_cmp_Eq_for_multisig_AccountId.

Module Impl_core_cmp_PartialOrd_for_multisig_AccountId.
  Parameter partial_cmp : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::cmp::PartialOrd"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [ ("partial_cmp", InstanceField.Method partial_cmp []) ].
End Impl_core_cmp_PartialOrd_for_multisig_AccountId.

Module Impl_core_cmp_Ord_for_multisig_AccountId.
  Parameter cmp : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::cmp::Ord"
      (* Self *) (Ty.path "multisig::AccountId")
      []
      [ ("cmp", InstanceField.Method cmp []) ].
End Impl_core_cmp_Ord_for_multisig_AccountId.

Axiom Balance : (Ty.path "multisig::Balance") = (Ty.path "u128").

(* Enum Env *)

Parameter MAX_OWNERS : Value.t.

Axiom TransactionId : (Ty.path "multisig::TransactionId") = (Ty.path "u32").

Parameter WRONG_TRANSACTION_ID : Value.t.

(* Struct CallInput *)

(* Enum ConfirmationStatus *)

Module Impl_core_clone_Clone_for_multisig_ConfirmationStatus.
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::clone::Clone"
      (* Self *) (Ty.path "multisig::ConfirmationStatus")
      []
      [ ("clone", InstanceField.Method clone []) ].
End Impl_core_clone_Clone_for_multisig_ConfirmationStatus.

Module Impl_core_marker_Copy_for_multisig_ConfirmationStatus.
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::Copy"
      (* Self *) (Ty.path "multisig::ConfirmationStatus")
      []
      [].
End Impl_core_marker_Copy_for_multisig_ConfirmationStatus.

(* Enum Transaction *)

Module Impl_core_default_Default_for_multisig_Transaction.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::default::Default"
      (* Self *) (Ty.path "multisig::Transaction")
      []
      [ ("default", InstanceField.Method default []) ].
End Impl_core_default_Default_for_multisig_Transaction.

(* Enum Error *)

Module Impl_core_clone_Clone_for_multisig_Error.
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::clone::Clone"
      (* Self *) (Ty.path "multisig::Error")
      []
      [ ("clone", InstanceField.Method clone []) ].
End Impl_core_clone_Clone_for_multisig_Error.

Module Impl_core_marker_Copy_for_multisig_Error.
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::Copy"
      (* Self *) (Ty.path "multisig::Error")
      []
      [].
End Impl_core_marker_Copy_for_multisig_Error.

Module Impl_core_marker_StructuralPartialEq_for_multisig_Error.
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::StructuralPartialEq"
      (* Self *) (Ty.path "multisig::Error")
      []
      [].
End Impl_core_marker_StructuralPartialEq_for_multisig_Error.

Module Impl_core_cmp_PartialEq_for_multisig_Error.
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::cmp::PartialEq"
      (* Self *) (Ty.path "multisig::Error")
      []
      [ ("eq", InstanceField.Method eq []) ].
End Impl_core_cmp_PartialEq_for_multisig_Error.

Module Impl_core_marker_StructuralEq_for_multisig_Error.
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::StructuralEq"
      (* Self *) (Ty.path "multisig::Error")
      []
      [].
End Impl_core_marker_StructuralEq_for_multisig_Error.

Module Impl_core_cmp_Eq_for_multisig_Error.
  Parameter assert_receiver_is_total_eq : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::cmp::Eq"
      (* Self *) (Ty.path "multisig::Error")
      []
      [
        ("assert_receiver_is_total_eq",
          InstanceField.Method assert_receiver_is_total_eq [])
      ].
End Impl_core_cmp_Eq_for_multisig_Error.

(* Enum Transactions *)

Module Impl_core_default_Default_for_multisig_Transactions.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::default::Default"
      (* Self *) (Ty.path "multisig::Transactions")
      []
      [ ("default", InstanceField.Method default []) ].
End Impl_core_default_Default_for_multisig_Transactions.

(* Enum Confirmation *)

(* Enum Revocation *)

(* Enum Submission *)

(* Enum Cancellation *)

(* Enum Execution *)

(* Enum OwnerAddition *)

(* Enum OwnerRemoval *)

(* Enum RequirementChange *)

(* Enum Event *)

Module Impl_multisig_Env.
  Definition Self : Ty.t := Ty.path "multisig::Env".
  
  Parameter caller : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_caller :
    M.IsAssociatedFunction Self "caller" caller [].
  
  Parameter emit_event : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_emit_event :
    M.IsAssociatedFunction Self "emit_event" emit_event [].
  
  Parameter transferred_value : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_transferred_value :
    M.IsAssociatedFunction Self "transferred_value" transferred_value [].
  
  Parameter account_id : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_account_id :
    M.IsAssociatedFunction Self "account_id" account_id [].
End Impl_multisig_Env.

(* Enum Multisig *)

Module Impl_core_default_Default_for_multisig_Multisig.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::default::Default"
      (* Self *) (Ty.path "multisig::Multisig")
      []
      [ ("default", InstanceField.Method default []) ].
End Impl_core_default_Default_for_multisig_Multisig.

Parameter ensure_requirement_is_valid : (list Ty.t) -> (list Value.t) -> M.

Module Impl_multisig_Multisig.
  Definition Self : Ty.t := Ty.path "multisig::Multisig".
  
  Parameter init_env : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_init_env :
    M.IsAssociatedFunction Self "init_env" init_env [].
  
  Parameter env : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_env : M.IsAssociatedFunction Self "env" env [].
  
  Parameter new : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_new : M.IsAssociatedFunction Self "new" new [].
  
  Parameter ensure_confirmed : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_ensure_confirmed :
    M.IsAssociatedFunction Self "ensure_confirmed" ensure_confirmed [].
  
  Parameter ensure_transaction_exists : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_ensure_transaction_exists :
    M.IsAssociatedFunction
      Self
      "ensure_transaction_exists"
      ensure_transaction_exists
      [].
  
  Parameter ensure_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_ensure_owner :
    M.IsAssociatedFunction Self "ensure_owner" ensure_owner [].
  
  Parameter ensure_caller_is_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_ensure_caller_is_owner :
    M.IsAssociatedFunction
      Self
      "ensure_caller_is_owner"
      ensure_caller_is_owner
      [].
  
  Parameter ensure_from_wallet : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_ensure_from_wallet :
    M.IsAssociatedFunction Self "ensure_from_wallet" ensure_from_wallet [].
  
  Parameter ensure_no_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_ensure_no_owner :
    M.IsAssociatedFunction Self "ensure_no_owner" ensure_no_owner [].
  
  Parameter add_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_add_owner :
    M.IsAssociatedFunction Self "add_owner" add_owner [].
  
  Parameter owner_index : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_owner_index :
    M.IsAssociatedFunction Self "owner_index" owner_index [].
  
  Parameter clean_owner_confirmations : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_clean_owner_confirmations :
    M.IsAssociatedFunction
      Self
      "clean_owner_confirmations"
      clean_owner_confirmations
      [].
  
  Parameter remove_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_remove_owner :
    M.IsAssociatedFunction Self "remove_owner" remove_owner [].
  
  Parameter replace_owner : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_replace_owner :
    M.IsAssociatedFunction Self "replace_owner" replace_owner [].
  
  Parameter change_requirement : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_change_requirement :
    M.IsAssociatedFunction Self "change_requirement" change_requirement [].
  
  Parameter confirm_by_caller : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_confirm_by_caller :
    M.IsAssociatedFunction Self "confirm_by_caller" confirm_by_caller [].
  
  Parameter submit_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_submit_transaction :
    M.IsAssociatedFunction Self "submit_transaction" submit_transaction [].
  
  Parameter take_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_take_transaction :
    M.IsAssociatedFunction Self "take_transaction" take_transaction [].
  
  Parameter cancel_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_cancel_transaction :
    M.IsAssociatedFunction Self "cancel_transaction" cancel_transaction [].
  
  Parameter confirm_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_confirm_transaction :
    M.IsAssociatedFunction Self "confirm_transaction" confirm_transaction [].
  
  Parameter revoke_confirmation : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_revoke_confirmation :
    M.IsAssociatedFunction Self "revoke_confirmation" revoke_confirmation [].
  
  Parameter invoke_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_invoke_transaction :
    M.IsAssociatedFunction Self "invoke_transaction" invoke_transaction [].
  
  Parameter eval_transaction : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_eval_transaction :
    M.IsAssociatedFunction Self "eval_transaction" eval_transaction [].
End Impl_multisig_Multisig.
