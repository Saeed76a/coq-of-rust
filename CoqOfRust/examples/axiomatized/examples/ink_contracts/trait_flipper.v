(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Flip.
Section Flip.
  Class Trait (Self : Set) : Type := {
    flip : Ty.function [Ty.apply (Ty.path "mut_ref") [Self]] (Ty.path "unit");
    get : Ty.function [Ty.apply (Ty.path "ref") [Self]] (Ty.path "bool");
  }.
  
End Flip.
End Flip.



Module  Impl_trait_flipper_Flipper.
Section Impl_trait_flipper_Flipper.
  Definition Self : Set := Ty.apply (Ty.path "trait_flipper::Flipper") [].
  
  Parameter new : Ty.apply (Ty.path "trait_flipper::Flipper") [].
  
  Definition AssociatedFunction_new : Instance.t := {
    Notations.double_colon := new;
  }.
End Impl_trait_flipper_Flipper.
End Impl_trait_flipper_Flipper.

Module  Impl_trait_flipper_Flip_for_trait_flipper_Flipper.
Section Impl_trait_flipper_Flip_for_trait_flipper_Flipper.
  Definition Self : Ty.t := Ty.apply (Ty.path "trait_flipper::Flipper") [].
  
  Parameter flip :
      (Ty.apply
          (Ty.path "mut_ref")
          [Ty.apply (Ty.path "trait_flipper::Flipper") []])
        ->
        Ty.path "unit".
  
  Definition AssociatedFunction_flip : Instance.t := {
    Notations.double_colon := flip;
  }.
  
  Parameter get :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "trait_flipper::Flipper") []])
        ->
        Ty.path "bool".
  
  Definition AssociatedFunction_get : Instance.t := {
    Notations.double_colon := get;
  }.
  
  Definition ‚Ñê : Instance.t := [("flip", flip); ("get", get)].
End Impl_trait_flipper_Flip_for_trait_flipper_Flipper.
End Impl_trait_flipper_Flip_for_trait_flipper_Flipper.
