(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Struct AccountId *)

Module Impl_core_default_Default_for_payment_channel_AccountId.
  Definition Self : Ty.t := Ty.path "payment_channel::AccountId".
  
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("default", InstanceField.Method default) ].
End Impl_core_default_Default_for_payment_channel_AccountId.

Module Impl_core_clone_Clone_for_payment_channel_AccountId.
  Definition Self : Ty.t := Ty.path "payment_channel::AccountId".
  
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("clone", InstanceField.Method clone) ].
End Impl_core_clone_Clone_for_payment_channel_AccountId.

Module Impl_core_marker_Copy_for_payment_channel_AccountId.
  Definition Self : Ty.t := Ty.path "payment_channel::AccountId".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_Copy_for_payment_channel_AccountId.

Module Impl_core_marker_StructuralPartialEq_for_payment_channel_AccountId.
  Definition Self : Ty.t := Ty.path "payment_channel::AccountId".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_payment_channel_AccountId.

Module Impl_core_cmp_PartialEq_for_payment_channel_AccountId.
  Definition Self : Ty.t := Ty.path "payment_channel::AccountId".
  
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("eq", InstanceField.Method eq) ].
End Impl_core_cmp_PartialEq_for_payment_channel_AccountId.

Module Impl_core_marker_StructuralEq_for_payment_channel_AccountId.
  Definition Self : Ty.t := Ty.path "payment_channel::AccountId".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_payment_channel_AccountId.

Module Impl_core_cmp_Eq_for_payment_channel_AccountId.
  Definition Self : Ty.t := Ty.path "payment_channel::AccountId".
  
  Parameter assert_receiver_is_total_eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t :=
    [
      ("assert_receiver_is_total_eq",
        InstanceField.Method assert_receiver_is_total_eq)
    ].
End Impl_core_cmp_Eq_for_payment_channel_AccountId.

Module Impl_core_convert_From_array_u8_for_payment_channel_AccountId.
  Definition Self : Ty.t := Ty.path "payment_channel::AccountId".
  
  Parameter from : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("from", InstanceField.Method from) ].
End Impl_core_convert_From_array_u8_for_payment_channel_AccountId.

Axiom Balance : (Ty.path "payment_channel::Balance") = (Ty.path "u128").

Axiom Timestamp : (Ty.path "payment_channel::Timestamp") = (Ty.path "u64").

(* Enum Env *)

(* Enum PaymentChannel *)

(* Enum Error *)

Module Impl_core_marker_StructuralPartialEq_for_payment_channel_Error.
  Definition Self : Ty.t := Ty.path "payment_channel::Error".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_payment_channel_Error.

Module Impl_core_cmp_PartialEq_for_payment_channel_Error.
  Definition Self : Ty.t := Ty.path "payment_channel::Error".
  
  Parameter eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("eq", InstanceField.Method eq) ].
End Impl_core_cmp_PartialEq_for_payment_channel_Error.

Module Impl_core_marker_StructuralEq_for_payment_channel_Error.
  Definition Self : Ty.t := Ty.path "payment_channel::Error".
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_payment_channel_Error.

Module Impl_core_cmp_Eq_for_payment_channel_Error.
  Definition Self : Ty.t := Ty.path "payment_channel::Error".
  
  Parameter assert_receiver_is_total_eq : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t :=
    [
      ("assert_receiver_is_total_eq",
        InstanceField.Method assert_receiver_is_total_eq)
    ].
End Impl_core_cmp_Eq_for_payment_channel_Error.

Axiom Result :
  forall (T : Ty.t),
  (Ty.path "payment_channel::Result") =
    (Ty.apply
      (Ty.path "core::result::Result")
      [ T; Ty.path "payment_channel::Error" ]).

(* Enum SenderCloseStarted *)

(* Enum Event *)

Module Impl_payment_channel_Env.
  Definition Self : Ty.t := Ty.path "payment_channel::Env".
  
  Parameter caller : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter emit_event : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter terminate_contract : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter transfer : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter block_timestamp : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter balance : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter account_id : (list Ty.t) -> (list Value.t) -> M.
End Impl_payment_channel_Env.

(* Trait *)
Module HashOutput.
  
End HashOutput.

(* Trait *)
Module CryptoHash.
  
End CryptoHash.

Parameter hash_encoded : (list Ty.t) -> (list Value.t) -> M.

Parameter ecdsa_recover : (list Ty.t) -> (list Value.t) -> M.

(* Enum Sha2x256 *)

(* Enum Keccak256 *)

(* Enum Blake2x256 *)

(* Enum Blake2x128 *)

Module Impl_payment_channel_HashOutput_for_payment_channel_Sha2x256.
  Definition Self : Ty.t := Ty.path "payment_channel::Sha2x256".
  
  Definition Type_ : Set := Ty.apply (Ty.path "array") [ Ty.path "u8" ].
  
  Definition ℐ : Instance.t := [ ("Type_", TODO) ].
End Impl_payment_channel_HashOutput_for_payment_channel_Sha2x256.

Module Impl_payment_channel_HashOutput_for_payment_channel_Keccak256.
  Definition Self : Ty.t := Ty.path "payment_channel::Keccak256".
  
  Definition Type_ : Set := Ty.apply (Ty.path "array") [ Ty.path "u8" ].
  
  Definition ℐ : Instance.t := [ ("Type_", TODO) ].
End Impl_payment_channel_HashOutput_for_payment_channel_Keccak256.

Module Impl_payment_channel_HashOutput_for_payment_channel_Blake2x256.
  Definition Self : Ty.t := Ty.path "payment_channel::Blake2x256".
  
  Definition Type_ : Set := Ty.apply (Ty.path "array") [ Ty.path "u8" ].
  
  Definition ℐ : Instance.t := [ ("Type_", TODO) ].
End Impl_payment_channel_HashOutput_for_payment_channel_Blake2x256.

Module Impl_payment_channel_HashOutput_for_payment_channel_Blake2x128.
  Definition Self : Ty.t := Ty.path "payment_channel::Blake2x128".
  
  Definition Type_ : Set := Ty.apply (Ty.path "array") [ Ty.path "u8" ].
  
  Definition ℐ : Instance.t := [ ("Type_", TODO) ].
End Impl_payment_channel_HashOutput_for_payment_channel_Blake2x128.

Module Impl_payment_channel_CryptoHash_for_payment_channel_Sha2x256.
  Definition Self : Ty.t := Ty.path "payment_channel::Sha2x256".
  
  Parameter hash : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("hash", InstanceField.Method hash) ].
End Impl_payment_channel_CryptoHash_for_payment_channel_Sha2x256.

Module Impl_payment_channel_CryptoHash_for_payment_channel_Keccak256.
  Definition Self : Ty.t := Ty.path "payment_channel::Keccak256".
  
  Parameter hash : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("hash", InstanceField.Method hash) ].
End Impl_payment_channel_CryptoHash_for_payment_channel_Keccak256.

Module Impl_payment_channel_CryptoHash_for_payment_channel_Blake2x256.
  Definition Self : Ty.t := Ty.path "payment_channel::Blake2x256".
  
  Parameter hash : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("hash", InstanceField.Method hash) ].
End Impl_payment_channel_CryptoHash_for_payment_channel_Blake2x256.

Module Impl_payment_channel_CryptoHash_for_payment_channel_Blake2x128.
  Definition Self : Ty.t := Ty.path "payment_channel::Blake2x128".
  
  Parameter hash : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [ ("hash", InstanceField.Method hash) ].
End Impl_payment_channel_CryptoHash_for_payment_channel_Blake2x128.

Module Impl_payment_channel_PaymentChannel.
  Definition Self : Ty.t := Ty.path "payment_channel::PaymentChannel".
  
  Parameter init_env : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter env : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter is_signature_valid : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter new : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter close_inner : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter close : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter start_sender_close : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter claim_timeout : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter withdraw : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get_sender : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get_recipient : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get_expiration : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get_withdrawn : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get_close_duration : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get_balance : (list Ty.t) -> (list Value.t) -> M.
End Impl_payment_channel_PaymentChannel.
