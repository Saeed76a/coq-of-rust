(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.



Module  Impl_core_default_Default_for_contract_transfer_AccountId.
Section Impl_core_default_Default_for_contract_transfer_AccountId.
  Definition Self : Ty.t :=
    Ty.apply (Ty.path "contract_transfer::AccountId") [].
  
  Parameter default : Ty.apply (Ty.path "contract_transfer::AccountId") [].
  
  Definition AssociatedFunction_default : Instance.t := {
    Notations.double_colon := default;
  }.
  
  Definition ℐ : Instance.t := [("default", default)].
End Impl_core_default_Default_for_contract_transfer_AccountId.
End Impl_core_default_Default_for_contract_transfer_AccountId.

Module  Impl_core_clone_Clone_for_contract_transfer_AccountId.
Section Impl_core_clone_Clone_for_contract_transfer_AccountId.
  Definition Self : Ty.t :=
    Ty.apply (Ty.path "contract_transfer::AccountId") [].
  
  Parameter clone :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "contract_transfer::AccountId") []])
        ->
        Ty.apply (Ty.path "contract_transfer::AccountId") [].
  
  Definition AssociatedFunction_clone : Instance.t := {
    Notations.double_colon := clone;
  }.
  
  Definition ℐ : Instance.t := [("clone", clone); ("clone_from", clone_from)].
End Impl_core_clone_Clone_for_contract_transfer_AccountId.
End Impl_core_clone_Clone_for_contract_transfer_AccountId.

Module  Impl_core_marker_Copy_for_contract_transfer_AccountId.
Section Impl_core_marker_Copy_for_contract_transfer_AccountId.
  Definition Self : Ty.t :=
    Ty.apply (Ty.path "contract_transfer::AccountId") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_Copy_for_contract_transfer_AccountId.
End Impl_core_marker_Copy_for_contract_transfer_AccountId.

Axiom Balance : Ty.path "u128".



Module  Impl_contract_transfer_Env.
Section Impl_contract_transfer_Env.
  Definition Self : Set := Ty.apply (Ty.path "contract_transfer::Env") [].
  
  Parameter caller :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "contract_transfer::Env") []])
        ->
        Ty.apply (Ty.path "contract_transfer::AccountId") [].
  
  Definition AssociatedFunction_caller : Instance.t := {
    Notations.double_colon := caller;
  }.
  
  Parameter balance :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "contract_transfer::Env") []])
        ->
        Ty.path "u128".
  
  Definition AssociatedFunction_balance : Instance.t := {
    Notations.double_colon := balance;
  }.
  
  Parameter transfer :
      (Ty.apply
          (Ty.path "mut_ref")
          [Ty.apply (Ty.path "contract_transfer::Env") []])
        ->
        (Ty.apply (Ty.path "contract_transfer::AccountId") []) ->
        (Ty.path "u128") ->
        Ty.apply (Ty.path "core::result::Result") [Ty.tuple; Ty.tuple].
  
  Definition AssociatedFunction_transfer : Instance.t := {
    Notations.double_colon := transfer;
  }.
  
  Parameter transferred_value :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "contract_transfer::Env") []])
        ->
        Ty.path "u128".
  
  Definition AssociatedFunction_transferred_value : Instance.t := {
    Notations.double_colon := transferred_value;
  }.
End Impl_contract_transfer_Env.
End Impl_contract_transfer_Env.



Module  Impl_contract_transfer_GiveMe.
Section Impl_contract_transfer_GiveMe.
  Definition Self : Set := Ty.apply (Ty.path "contract_transfer::GiveMe") [].
  
  Parameter init_env : Ty.apply (Ty.path "contract_transfer::Env") [].
  
  Definition AssociatedFunction_init_env : Instance.t := {
    Notations.double_colon := init_env;
  }.
  
  Parameter env :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "contract_transfer::GiveMe") []])
        ->
        Ty.apply (Ty.path "contract_transfer::Env") [].
  
  Definition AssociatedFunction_env : Instance.t := {
    Notations.double_colon := env;
  }.
  
  Parameter new : Ty.apply (Ty.path "contract_transfer::GiveMe") [].
  
  Definition AssociatedFunction_new : Instance.t := {
    Notations.double_colon := new;
  }.
  
  Parameter give_me :
      (Ty.apply
          (Ty.path "mut_ref")
          [Ty.apply (Ty.path "contract_transfer::GiveMe") []])
        ->
        (Ty.path "u128") ->
        Ty.path "unit".
  
  Definition AssociatedFunction_give_me : Instance.t := {
    Notations.double_colon := give_me;
  }.
  
  Parameter was_it_ten :
      (Ty.apply
          (Ty.path "ref")
          [Ty.apply (Ty.path "contract_transfer::GiveMe") []])
        ->
        Ty.path "unit".
  
  Definition AssociatedFunction_was_it_ten : Instance.t := {
    Notations.double_colon := was_it_ten;
  }.
End Impl_contract_transfer_GiveMe.
End Impl_contract_transfer_GiveMe.
