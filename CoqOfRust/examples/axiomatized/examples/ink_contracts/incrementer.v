(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Incrementer.
Section Incrementer.
  Record t : Set := {
    value : i32.t;
  }.
  
  Definition Get_value :=
    Ref.map (fun α => Some α.(value)) (fun β α => Some (α <| value := β |>)).
End Incrementer.
End Incrementer.

Module  Impl_incrementer_Incrementer_t.
Section Impl_incrementer_Incrementer_t.
  Definition Self : Set := incrementer.Incrementer.t.
  
  Parameter new : i32.t -> M Self.
  
  Global Instance AssociatedFunction_new : Notations.DoubleColon Self "new" := {
    Notations.double_colon := new;
  }.
  
  Parameter new_default : M Self.
  
  Global Instance AssociatedFunction_new_default :
    Notations.DoubleColon Self "new_default" := {
    Notations.double_colon := new_default;
  }.
  
  Parameter inc : (mut_ref Self) -> i32.t -> M unit.
  
  Global Instance AssociatedFunction_inc : Notations.DoubleColon Self "inc" := {
    Notations.double_colon := inc;
  }.
  
  Parameter get : (ref Self) -> M i32.t.
  
  Global Instance AssociatedFunction_get : Notations.DoubleColon Self "get" := {
    Notations.double_colon := get;
  }.
End Impl_incrementer_Incrementer_t.
End Impl_incrementer_Incrementer_t.
