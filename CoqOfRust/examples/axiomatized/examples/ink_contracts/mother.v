(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.



Module  Impl_core_default_Default_for_mother_Mapping_K_V.
Section Impl_core_default_Default_for_mother_Mapping_K_V.
  Context {K V : Set}.
  
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Mapping") [K; V].
  
  Parameter default : Ty.apply (Ty.path "mother::Mapping") [K; V].
  
  Definition AssociatedFunction_default : Instance.t := {
    Notations.double_colon := default;
  }.
  
  Definition ℐ : Instance.t := [("default", default)].
End Impl_core_default_Default_for_mother_Mapping_K_V.
End Impl_core_default_Default_for_mother_Mapping_K_V.

Module  Impl_mother_Mapping_K_V.
Section Impl_mother_Mapping_K_V.
  Context {K V : Set}.
  
  Definition Self : Set := Ty.apply (Ty.path "mother::Mapping") [K; V].
  
  Parameter get :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Mapping") [K; V]])
        ->
        (Ty.apply (Ty.path "ref") [K]) ->
        Ty.apply (Ty.path "core::option::Option") [V].
  
  Definition AssociatedFunction_get : Instance.t := {
    Notations.double_colon := get;
  }.
  
  Parameter insert :
      (Ty.apply
          (Ty.path "mut_ref")
          [Ty.apply (Ty.path "mother::Mapping") [K; V]])
        ->
        K ->
        V ->
        Ty.path "unit".
  
  Definition AssociatedFunction_insert : Instance.t := {
    Notations.double_colon := insert;
  }.
End Impl_mother_Mapping_K_V.
End Impl_mother_Mapping_K_V.



Module  Impl_core_default_Default_for_mother_AccountId.
Section Impl_core_default_Default_for_mother_AccountId.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::AccountId") [].
  
  Parameter default : Ty.apply (Ty.path "mother::AccountId") [].
  
  Definition AssociatedFunction_default : Instance.t := {
    Notations.double_colon := default;
  }.
  
  Definition ℐ : Instance.t := [("default", default)].
End Impl_core_default_Default_for_mother_AccountId.
End Impl_core_default_Default_for_mother_AccountId.

Module  Impl_core_clone_Clone_for_mother_AccountId.
Section Impl_core_clone_Clone_for_mother_AccountId.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::AccountId") [].
  
  Parameter clone :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::AccountId") []]) ->
        Ty.apply (Ty.path "mother::AccountId") [].
  
  Definition AssociatedFunction_clone : Instance.t := {
    Notations.double_colon := clone;
  }.
  
  Definition ℐ : Instance.t := [("clone", clone); ("clone_from", clone_from)].
End Impl_core_clone_Clone_for_mother_AccountId.
End Impl_core_clone_Clone_for_mother_AccountId.

Module  Impl_core_marker_Copy_for_mother_AccountId.
Section Impl_core_marker_Copy_for_mother_AccountId.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::AccountId") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_Copy_for_mother_AccountId.
End Impl_core_marker_Copy_for_mother_AccountId.

Module  Impl_core_marker_StructuralPartialEq_for_mother_AccountId.
Section Impl_core_marker_StructuralPartialEq_for_mother_AccountId.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::AccountId") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_mother_AccountId.
End Impl_core_marker_StructuralPartialEq_for_mother_AccountId.

Module  Impl_core_cmp_PartialEq_for_mother_AccountId.
Section Impl_core_cmp_PartialEq_for_mother_AccountId.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::AccountId") [].
  
  Parameter eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::AccountId") []]) ->
        (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::AccountId") []])
        ->
        Ty.path "bool".
  
  Definition AssociatedFunction_eq : Instance.t := {
    Notations.double_colon := eq;
  }.
  
  Definition ℐ : Instance.t := [("eq", eq); ("ne", ne)].
End Impl_core_cmp_PartialEq_for_mother_AccountId.
End Impl_core_cmp_PartialEq_for_mother_AccountId.

Module  Impl_core_marker_StructuralEq_for_mother_AccountId.
Section Impl_core_marker_StructuralEq_for_mother_AccountId.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::AccountId") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_mother_AccountId.
End Impl_core_marker_StructuralEq_for_mother_AccountId.

Module  Impl_core_cmp_Eq_for_mother_AccountId.
Section Impl_core_cmp_Eq_for_mother_AccountId.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::AccountId") [].
  
  Parameter assert_receiver_is_total_eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::AccountId") []]) ->
        Ty.tuple.
  
  Definition AssociatedFunction_assert_receiver_is_total_eq : Instance.t := {
    Notations.double_colon := assert_receiver_is_total_eq;
  }.
  
  Definition ℐ : Instance.t := [("assert_receiver_is_total_eq",
      assert_receiver_is_total_eq)].
End Impl_core_cmp_Eq_for_mother_AccountId.
End Impl_core_cmp_Eq_for_mother_AccountId.

Axiom Balance : Ty.path "u128".

Axiom BlockNumber : Ty.path "u32".

Axiom Hash : Ty.apply (Ty.path "array") [Ty.path "u8"].





Module  Impl_core_default_Default_for_mother_Bids.
Section Impl_core_default_Default_for_mother_Bids.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Bids") [].
  
  Parameter default : Ty.apply (Ty.path "mother::Bids") [].
  
  Definition AssociatedFunction_default : Instance.t := {
    Notations.double_colon := default;
  }.
  
  Definition ℐ : Instance.t := [("default", default)].
End Impl_core_default_Default_for_mother_Bids.
End Impl_core_default_Default_for_mother_Bids.

Module  Impl_core_marker_StructuralPartialEq_for_mother_Bids.
Section Impl_core_marker_StructuralPartialEq_for_mother_Bids.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Bids") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_mother_Bids.
End Impl_core_marker_StructuralPartialEq_for_mother_Bids.

Module  Impl_core_cmp_PartialEq_for_mother_Bids.
Section Impl_core_cmp_PartialEq_for_mother_Bids.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Bids") [].
  
  Parameter eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Bids") []]) ->
        (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Bids") []]) ->
        Ty.path "bool".
  
  Definition AssociatedFunction_eq : Instance.t := {
    Notations.double_colon := eq;
  }.
  
  Definition ℐ : Instance.t := [("eq", eq); ("ne", ne)].
End Impl_core_cmp_PartialEq_for_mother_Bids.
End Impl_core_cmp_PartialEq_for_mother_Bids.

Module  Impl_core_marker_StructuralEq_for_mother_Bids.
Section Impl_core_marker_StructuralEq_for_mother_Bids.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Bids") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_mother_Bids.
End Impl_core_marker_StructuralEq_for_mother_Bids.

Module  Impl_core_cmp_Eq_for_mother_Bids.
Section Impl_core_cmp_Eq_for_mother_Bids.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Bids") [].
  
  Parameter assert_receiver_is_total_eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Bids") []]) ->
        Ty.tuple.
  
  Definition AssociatedFunction_assert_receiver_is_total_eq : Instance.t := {
    Notations.double_colon := assert_receiver_is_total_eq;
  }.
  
  Definition ℐ : Instance.t := [("assert_receiver_is_total_eq",
      assert_receiver_is_total_eq)].
End Impl_core_cmp_Eq_for_mother_Bids.
End Impl_core_cmp_Eq_for_mother_Bids.

Module  Impl_core_clone_Clone_for_mother_Bids.
Section Impl_core_clone_Clone_for_mother_Bids.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Bids") [].
  
  Parameter clone :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Bids") []]) ->
        Ty.apply (Ty.path "mother::Bids") [].
  
  Definition AssociatedFunction_clone : Instance.t := {
    Notations.double_colon := clone;
  }.
  
  Definition ℐ : Instance.t := [("clone", clone); ("clone_from", clone_from)].
End Impl_core_clone_Clone_for_mother_Bids.
End Impl_core_clone_Clone_for_mother_Bids.



Module  Impl_core_marker_StructuralPartialEq_for_mother_Outline.
Section Impl_core_marker_StructuralPartialEq_for_mother_Outline.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Outline") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_mother_Outline.
End Impl_core_marker_StructuralPartialEq_for_mother_Outline.

Module  Impl_core_cmp_PartialEq_for_mother_Outline.
Section Impl_core_cmp_PartialEq_for_mother_Outline.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Outline") [].
  
  Parameter eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Outline") []]) ->
        (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Outline") []]) ->
        Ty.path "bool".
  
  Definition AssociatedFunction_eq : Instance.t := {
    Notations.double_colon := eq;
  }.
  
  Definition ℐ : Instance.t := [("eq", eq); ("ne", ne)].
End Impl_core_cmp_PartialEq_for_mother_Outline.
End Impl_core_cmp_PartialEq_for_mother_Outline.

Module  Impl_core_marker_StructuralEq_for_mother_Outline.
Section Impl_core_marker_StructuralEq_for_mother_Outline.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Outline") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_mother_Outline.
End Impl_core_marker_StructuralEq_for_mother_Outline.

Module  Impl_core_cmp_Eq_for_mother_Outline.
Section Impl_core_cmp_Eq_for_mother_Outline.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Outline") [].
  
  Parameter assert_receiver_is_total_eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Outline") []]) ->
        Ty.tuple.
  
  Definition AssociatedFunction_assert_receiver_is_total_eq : Instance.t := {
    Notations.double_colon := assert_receiver_is_total_eq;
  }.
  
  Definition ℐ : Instance.t := [("assert_receiver_is_total_eq",
      assert_receiver_is_total_eq)].
End Impl_core_cmp_Eq_for_mother_Outline.
End Impl_core_cmp_Eq_for_mother_Outline.

Module  Impl_core_clone_Clone_for_mother_Outline.
Section Impl_core_clone_Clone_for_mother_Outline.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Outline") [].
  
  Parameter clone :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Outline") []]) ->
        Ty.apply (Ty.path "mother::Outline") [].
  
  Definition AssociatedFunction_clone : Instance.t := {
    Notations.double_colon := clone;
  }.
  
  Definition ℐ : Instance.t := [("clone", clone); ("clone_from", clone_from)].
End Impl_core_clone_Clone_for_mother_Outline.
End Impl_core_clone_Clone_for_mother_Outline.



Module  Impl_core_marker_StructuralPartialEq_for_mother_Status.
Section Impl_core_marker_StructuralPartialEq_for_mother_Status.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Status") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_mother_Status.
End Impl_core_marker_StructuralPartialEq_for_mother_Status.

Module  Impl_core_cmp_PartialEq_for_mother_Status.
Section Impl_core_cmp_PartialEq_for_mother_Status.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Status") [].
  
  Parameter eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Status") []]) ->
        (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Status") []]) ->
        Ty.path "bool".
  
  Definition AssociatedFunction_eq : Instance.t := {
    Notations.double_colon := eq;
  }.
  
  Definition ℐ : Instance.t := [("eq", eq); ("ne", ne)].
End Impl_core_cmp_PartialEq_for_mother_Status.
End Impl_core_cmp_PartialEq_for_mother_Status.

Module  Impl_core_marker_StructuralEq_for_mother_Status.
Section Impl_core_marker_StructuralEq_for_mother_Status.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Status") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_mother_Status.
End Impl_core_marker_StructuralEq_for_mother_Status.

Module  Impl_core_cmp_Eq_for_mother_Status.
Section Impl_core_cmp_Eq_for_mother_Status.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Status") [].
  
  Parameter assert_receiver_is_total_eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Status") []]) ->
        Ty.tuple.
  
  Definition AssociatedFunction_assert_receiver_is_total_eq : Instance.t := {
    Notations.double_colon := assert_receiver_is_total_eq;
  }.
  
  Definition ℐ : Instance.t := [("assert_receiver_is_total_eq",
      assert_receiver_is_total_eq)].
End Impl_core_cmp_Eq_for_mother_Status.
End Impl_core_cmp_Eq_for_mother_Status.

Module  Impl_core_clone_Clone_for_mother_Status.
Section Impl_core_clone_Clone_for_mother_Status.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Status") [].
  
  Parameter clone :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Status") []]) ->
        Ty.apply (Ty.path "mother::Status") [].
  
  Definition AssociatedFunction_clone : Instance.t := {
    Notations.double_colon := clone;
  }.
  
  Definition ℐ : Instance.t := [("clone", clone); ("clone_from", clone_from)].
End Impl_core_clone_Clone_for_mother_Status.
End Impl_core_clone_Clone_for_mother_Status.



Module  Impl_core_marker_StructuralPartialEq_for_mother_Auction.
Section Impl_core_marker_StructuralPartialEq_for_mother_Auction.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Auction") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_mother_Auction.
End Impl_core_marker_StructuralPartialEq_for_mother_Auction.

Module  Impl_core_cmp_PartialEq_for_mother_Auction.
Section Impl_core_cmp_PartialEq_for_mother_Auction.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Auction") [].
  
  Parameter eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Auction") []]) ->
        (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Auction") []]) ->
        Ty.path "bool".
  
  Definition AssociatedFunction_eq : Instance.t := {
    Notations.double_colon := eq;
  }.
  
  Definition ℐ : Instance.t := [("eq", eq); ("ne", ne)].
End Impl_core_cmp_PartialEq_for_mother_Auction.
End Impl_core_cmp_PartialEq_for_mother_Auction.

Module  Impl_core_marker_StructuralEq_for_mother_Auction.
Section Impl_core_marker_StructuralEq_for_mother_Auction.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Auction") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_mother_Auction.
End Impl_core_marker_StructuralEq_for_mother_Auction.

Module  Impl_core_cmp_Eq_for_mother_Auction.
Section Impl_core_cmp_Eq_for_mother_Auction.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Auction") [].
  
  Parameter assert_receiver_is_total_eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Auction") []]) ->
        Ty.tuple.
  
  Definition AssociatedFunction_assert_receiver_is_total_eq : Instance.t := {
    Notations.double_colon := assert_receiver_is_total_eq;
  }.
  
  Definition ℐ : Instance.t := [("assert_receiver_is_total_eq",
      assert_receiver_is_total_eq)].
End Impl_core_cmp_Eq_for_mother_Auction.
End Impl_core_cmp_Eq_for_mother_Auction.

Module  Impl_core_clone_Clone_for_mother_Auction.
Section Impl_core_clone_Clone_for_mother_Auction.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Auction") [].
  
  Parameter clone :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Auction") []]) ->
        Ty.apply (Ty.path "mother::Auction") [].
  
  Definition AssociatedFunction_clone : Instance.t := {
    Notations.double_colon := clone;
  }.
  
  Definition ℐ : Instance.t := [("clone", clone); ("clone_from", clone_from)].
End Impl_core_clone_Clone_for_mother_Auction.
End Impl_core_clone_Clone_for_mother_Auction.

Module  Impl_core_default_Default_for_mother_Auction.
Section Impl_core_default_Default_for_mother_Auction.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Auction") [].
  
  Parameter default : Ty.apply (Ty.path "mother::Auction") [].
  
  Definition AssociatedFunction_default : Instance.t := {
    Notations.double_colon := default;
  }.
  
  Definition ℐ : Instance.t := [("default", default)].
End Impl_core_default_Default_for_mother_Auction.
End Impl_core_default_Default_for_mother_Auction.



Module  Impl_core_marker_StructuralPartialEq_for_mother_Failure.
Section Impl_core_marker_StructuralPartialEq_for_mother_Failure.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Failure") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralPartialEq_for_mother_Failure.
End Impl_core_marker_StructuralPartialEq_for_mother_Failure.

Module  Impl_core_cmp_PartialEq_for_mother_Failure.
Section Impl_core_cmp_PartialEq_for_mother_Failure.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Failure") [].
  
  Parameter eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Failure") []]) ->
        (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Failure") []]) ->
        Ty.path "bool".
  
  Definition AssociatedFunction_eq : Instance.t := {
    Notations.double_colon := eq;
  }.
  
  Definition ℐ : Instance.t := [("eq", eq); ("ne", ne)].
End Impl_core_cmp_PartialEq_for_mother_Failure.
End Impl_core_cmp_PartialEq_for_mother_Failure.

Module  Impl_core_marker_StructuralEq_for_mother_Failure.
Section Impl_core_marker_StructuralEq_for_mother_Failure.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Failure") [].
  
  Definition ℐ : Instance.t := [].
End Impl_core_marker_StructuralEq_for_mother_Failure.
End Impl_core_marker_StructuralEq_for_mother_Failure.

Module  Impl_core_cmp_Eq_for_mother_Failure.
Section Impl_core_cmp_Eq_for_mother_Failure.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Failure") [].
  
  Parameter assert_receiver_is_total_eq :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Failure") []]) ->
        Ty.tuple.
  
  Definition AssociatedFunction_assert_receiver_is_total_eq : Instance.t := {
    Notations.double_colon := assert_receiver_is_total_eq;
  }.
  
  Definition ℐ : Instance.t := [("assert_receiver_is_total_eq",
      assert_receiver_is_total_eq)].
End Impl_core_cmp_Eq_for_mother_Failure.
End Impl_core_cmp_Eq_for_mother_Failure.





Module  Impl_mother_Env.
Section Impl_mother_Env.
  Definition Self : Set := Ty.apply (Ty.path "mother::Env") [].
  
  Parameter caller :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Env") []]) ->
        Ty.apply (Ty.path "mother::AccountId") [].
  
  Definition AssociatedFunction_caller : Instance.t := {
    Notations.double_colon := caller;
  }.
  
  Parameter emit_event :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Env") []]) ->
        (Ty.apply (Ty.path "mother::Event") []) ->
        Ty.path "unit".
  
  Definition AssociatedFunction_emit_event : Instance.t := {
    Notations.double_colon := emit_event;
  }.
End Impl_mother_Env.
End Impl_mother_Env.



Module  Impl_core_default_Default_for_mother_Mother.
Section Impl_core_default_Default_for_mother_Mother.
  Definition Self : Ty.t := Ty.apply (Ty.path "mother::Mother") [].
  
  Parameter default : Ty.apply (Ty.path "mother::Mother") [].
  
  Definition AssociatedFunction_default : Instance.t := {
    Notations.double_colon := default;
  }.
  
  Definition ℐ : Instance.t := [("default", default)].
End Impl_core_default_Default_for_mother_Mother.
End Impl_core_default_Default_for_mother_Mother.

Module  Impl_mother_Mother.
Section Impl_mother_Mother.
  Definition Self : Set := Ty.apply (Ty.path "mother::Mother") [].
  
  Parameter init_env : Ty.apply (Ty.path "mother::Env") [].
  
  Definition AssociatedFunction_init_env : Instance.t := {
    Notations.double_colon := init_env;
  }.
  
  Parameter env :
      (Ty.apply (Ty.path "ref") [Ty.apply (Ty.path "mother::Mother") []]) ->
        Ty.apply (Ty.path "mother::Env") [].
  
  Definition AssociatedFunction_env : Instance.t := {
    Notations.double_colon := env;
  }.
  
  Parameter new :
      (Ty.apply (Ty.path "mother::Auction") []) ->
        Ty.apply (Ty.path "mother::Mother") [].
  
  Definition AssociatedFunction_new : Instance.t := {
    Notations.double_colon := new;
  }.
  
  Parameter new_default : Ty.apply (Ty.path "mother::Mother") [].
  
  Definition AssociatedFunction_new_default : Instance.t := {
    Notations.double_colon := new_default;
  }.
  
  Parameter failed_new :
      (Ty.path "bool") ->
        Ty.apply
          (Ty.path "core::result::Result")
          [Ty.apply (Ty.path "mother::Mother") [];
            Ty.apply (Ty.path "mother::Failure") []].
  
  Definition AssociatedFunction_failed_new : Instance.t := {
    Notations.double_colon := failed_new;
  }.
  
  Parameter echo_auction :
      (Ty.apply (Ty.path "mut_ref") [Ty.apply (Ty.path "mother::Mother") []]) ->
        (Ty.apply (Ty.path "mother::Auction") []) ->
        Ty.apply (Ty.path "mother::Auction") [].
  
  Definition AssociatedFunction_echo_auction : Instance.t := {
    Notations.double_colon := echo_auction;
  }.
  
  Parameter revert_or_trap :
      (Ty.apply (Ty.path "mut_ref") [Ty.apply (Ty.path "mother::Mother") []]) ->
        (Ty.apply
          (Ty.path "core::option::Option")
          [Ty.apply (Ty.path "mother::Failure") []])
        ->
        Ty.apply
          (Ty.path "core::result::Result")
          [Ty.tuple; Ty.apply (Ty.path "mother::Failure") []].
  
  Definition AssociatedFunction_revert_or_trap : Instance.t := {
    Notations.double_colon := revert_or_trap;
  }.
  
  Parameter debug_log :
      (Ty.apply (Ty.path "mut_ref") [Ty.apply (Ty.path "mother::Mother") []]) ->
        (Ty.apply (Ty.path "alloc::string::String") []) ->
        Ty.path "unit".
  
  Definition AssociatedFunction_debug_log : Instance.t := {
    Notations.double_colon := debug_log;
  }.
End Impl_mother_Mother.
End Impl_mother_Mother.
