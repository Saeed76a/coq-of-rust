(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Increment.
  Class Trait (Self : Set) : Type := {
    inc : Ty.function [Ty.apply (Ty.path "mut_ref") [Self]] (Ty.path "unit");
    get : Ty.function [Ty.apply (Ty.path "ref") [Self]] (Ty.path "u64");
  }.
  
End Increment.

Module Reset.
  Class Trait (Self : Set) : Type := {
    reset : Ty.function [Ty.apply (Ty.path "mut_ref") [Self]] (Ty.path "unit");
  }.
  
End Reset.

(* Enum Incrementer *)

Module Impl_trait_incrementer_Incrementer.
  Definition Self : Ty.t := Ty.path "trait_incrementer::Incrementer".
  
  Parameter new : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter inc_by : (list Ty.t) -> (list Value.t) -> M.
End Impl_trait_incrementer_Incrementer.

Module Impl_trait_incrementer_Increment_for_trait_incrementer_Incrementer.
  Definition Self : Ty.t := Ty.path "trait_incrementer::Incrementer".
  
  Parameter inc : (list Ty.t) -> (list Value.t) -> M.
  
  Parameter get : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("inc", InstanceField.Method inc);
    ("get", InstanceField.Method get)].
End Impl_trait_incrementer_Increment_for_trait_incrementer_Incrementer.

Module Impl_trait_incrementer_Reset_for_trait_incrementer_Incrementer.
  Definition Self : Ty.t := Ty.path "trait_incrementer::Incrementer".
  
  Parameter reset : (list Ty.t) -> (list Value.t) -> M.
  
  Definition ℐ : Instance.t := [("reset", InstanceField.Method reset)].
End Impl_trait_incrementer_Reset_for_trait_incrementer_Incrementer.
