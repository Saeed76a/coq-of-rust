(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Struct Mapping *)

Module Impl_core_default_Default_for_mapping_integration_tests_Mapping_K_V.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    forall (K V : Ty.t),
    M.IsTraitInstance
      "core::default::Default"
      (* Self *)
        (Ty.apply (Ty.path "mapping_integration_tests::Mapping") [ K; V ])
      (* Trait polymorphic types *) []
      (* Instance *) [ ("default", InstanceField.Method default) ]
      (* Instance polymorphic types *) [ K; V ].
End Impl_core_default_Default_for_mapping_integration_tests_Mapping_K_V.

Module Impl_mapping_integration_tests_Mapping_K_V.
  Definition Self (K V : Ty.t) : Ty.t :=
    Ty.apply (Ty.path "mapping_integration_tests::Mapping") [ K; V ].
  
  Parameter contains : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_contains :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "contains" contains [ K; V ].
  
  Parameter get : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_get :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "get" get [ K; V ].
  
  Parameter insert : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_insert :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "insert" insert [ K; V ].
  
  Parameter new : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_new :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "new" new [ K; V ].
  
  Parameter remove : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_remove :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "remove" remove [ K; V ].
  
  Parameter size : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_size :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "size" size [ K; V ].
  
  Parameter take : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_take :
    forall (K V : Ty.t),
    M.IsAssociatedFunction (Self K V) "take" take [ K; V ].
End Impl_mapping_integration_tests_Mapping_K_V.

(* Struct AccountId *)

Module Impl_core_default_Default_for_mapping_integration_tests_AccountId.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::default::Default"
      (* Self *) (Ty.path "mapping_integration_tests::AccountId")
      (* Trait polymorphic types *) []
      (* Instance *) [ ("default", InstanceField.Method default) ]
      (* Instance polymorphic types *) [].
End Impl_core_default_Default_for_mapping_integration_tests_AccountId.

Module Impl_core_clone_Clone_for_mapping_integration_tests_AccountId.
  Parameter clone : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::clone::Clone"
      (* Self *) (Ty.path "mapping_integration_tests::AccountId")
      (* Trait polymorphic types *) []
      (* Instance *) [ ("clone", InstanceField.Method clone) ]
      (* Instance polymorphic types *) [].
End Impl_core_clone_Clone_for_mapping_integration_tests_AccountId.

Module Impl_core_marker_Copy_for_mapping_integration_tests_AccountId.
  Axiom Implements :
    M.IsTraitInstance
      "core::marker::Copy"
      (* Self *) (Ty.path "mapping_integration_tests::AccountId")
      (* Trait polymorphic types *) []
      (* Instance *) []
      (* Instance polymorphic types *) [].
End Impl_core_marker_Copy_for_mapping_integration_tests_AccountId.

Axiom Balance :
  (Ty.path "mapping_integration_tests::Balance") = (Ty.path "u128").

(* Struct Env *)

Module Impl_mapping_integration_tests_Env.
  Definition Self : Ty.t := Ty.path "mapping_integration_tests::Env".
  
  Parameter caller : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_caller :
    M.IsAssociatedFunction Self "caller" caller [].
End Impl_mapping_integration_tests_Env.

(* Struct Mappings *)

Module Impl_core_default_Default_for_mapping_integration_tests_Mappings.
  Parameter default : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom Implements :
    M.IsTraitInstance
      "core::default::Default"
      (* Self *) (Ty.path "mapping_integration_tests::Mappings")
      (* Trait polymorphic types *) []
      (* Instance *) [ ("default", InstanceField.Method default) ]
      (* Instance polymorphic types *) [].
End Impl_core_default_Default_for_mapping_integration_tests_Mappings.

Module Impl_mapping_integration_tests_Mappings.
  Definition Self : Ty.t := Ty.path "mapping_integration_tests::Mappings".
  
  Parameter init_env : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_init_env :
    M.IsAssociatedFunction Self "init_env" init_env [].
  
  Parameter env : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_env : M.IsAssociatedFunction Self "env" env [].
  
  Parameter new : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_new : M.IsAssociatedFunction Self "new" new [].
  
  Parameter get_balance : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_get_balance :
    M.IsAssociatedFunction Self "get_balance" get_balance [].
  
  Parameter insert_balance : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_insert_balance :
    M.IsAssociatedFunction Self "insert_balance" insert_balance [].
  
  Parameter size_balance : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_size_balance :
    M.IsAssociatedFunction Self "size_balance" size_balance [].
  
  Parameter contains_balance : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_contains_balance :
    M.IsAssociatedFunction Self "contains_balance" contains_balance [].
  
  Parameter remove_balance : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_remove_balance :
    M.IsAssociatedFunction Self "remove_balance" remove_balance [].
  
  Parameter take_balance : (list Ty.t) -> (list Value.t) -> M.
  
  Axiom AssociatedFunction_take_balance :
    M.IsAssociatedFunction Self "take_balance" take_balance [].
End Impl_mapping_integration_tests_Mappings.
