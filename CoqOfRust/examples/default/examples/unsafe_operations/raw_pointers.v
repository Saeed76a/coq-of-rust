(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    let raw_p: *const u32 = &10;

    unsafe {
        assert!( *raw_p == 10);
    }
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  M.function_body
    (let* raw_p : M.Val (ref u32.t) :=
      let* α0 : M.Val u32.t := M.alloc 10 in
      let* α1 : M.Val (ref u32.t) := addr_of α0 in
      M.copy α1 in
    let* _ : M.Val unit :=
      let* α0 : ref u32.t := M.read raw_p in
      let* α1 : M.Val u32.t := deref α0 in
      let* α2 : M.Val u32.t := M.alloc 10 in
      let* α3 : M.Val bool.t := BinOp.eq α1 α2 in
      let* α4 : M.Val bool.t := UnOp.not α3 in
      let* α5 : M.Val bool.t := use α4 in
      let* α6 : bool.t := M.read α5 in
      if (α6 : bool) then
        let* α0 : ref str.t :=
          M.read (mk_str "assertion failed: *raw_p == 10") in
        let* α1 : never.t := core.panicking.panic α0 in
        let* α2 : M.Val never.t := M.alloc α1 in
        never_to_any α2
      else
        M.alloc tt in
    let* α0 : M.Val unit := M.alloc tt in
    M.read α0).
