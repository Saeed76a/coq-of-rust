(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    let mut _mutable_integer = 7i32;

    {
        // Shadowing by immutable `_mutable_integer`
        let _mutable_integer = _mutable_integer;

        // Error! `_mutable_integer` is frozen in this scope
        // _mutable_integer = 50;
        // FIXME ^ Comment out this line

        // `_mutable_integer` goes out of scope
    }

    // Ok! `_mutable_integer` is not frozen in this scope
    _mutable_integer = 3;
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  let* _mutable_integer : M.Val i32.t := M.alloc (Integer.of_Z 7) in
  let* _ : M.Val unit :=
    let* _mutable_integer : M.Val i32.t := M.copy _mutable_integer in
    M.alloc tt in
  let* _ : M.Val unit := assign _mutable_integer (Integer.of_Z 3) in
  let* α0 : M.Val unit := M.alloc tt in
  M.read α0.
