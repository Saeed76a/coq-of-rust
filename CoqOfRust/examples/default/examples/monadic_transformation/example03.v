(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    (1, 2, 3, 4);
    vec![5, 6, 7, 8];
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (𝜏 : list Ty.t) (α : list Value.t) : M :=
  match 𝜏, α with
  | [], [] =>
    let* _ :=
      M.alloc
        (Value.Integer Integer.I32 1,
          Value.Integer Integer.I32 2,
          Value.Integer Integer.I32 3,
          Value.Integer Integer.I32 4) in
    let* _ :=
      let* α0 :=
        M.alloc
          [
            Value.Integer Integer.I32 5;
            Value.Integer Integer.I32 6;
            Value.Integer Integer.I32 7;
            Value.Integer Integer.I32 8
          ] in
      let* α1 :=
        M.call
          (alloc.boxed.Box.t _ alloc.boxed.Box.Default.A)::["new"]
          [ α0 ] in
      let* α2 := M.read α1 in
      let* α3 :=
        M.call
          (Ty.apply (Ty.path "slice") [ Ty.path "i32" ])::["into_vec"]
          [ M.pointer_coercion "Unsize" α2 ] in
      M.alloc α3 in
    let* α0 := M.alloc tt in
    M.read α0
  | _, _ => M.impossible
  end.
