(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    match 1 {
        0 => false,
        _ => true,
    };
    if true {
        0
    } else {
        1
    };
    if false {
        2
    } else if false {
        3
    } else if false {
        4
    } else {
        5
    };
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main : M unit :=
  let* _ : M.Val bool.t :=
    match Integer.of_Z 1 with
    | _ => M.alloc false
    | _ => M.alloc true
    end in
  let* _ : M.Val i32.t :=
    if (use true : bool) then
      M.alloc (Integer.of_Z 0)
    else
      M.alloc (Integer.of_Z 1) in
  let* _ : M.Val i32.t :=
    if (use false : bool) then
      M.alloc (Integer.of_Z 2)
    else
      if (use false : bool) then
        M.alloc (Integer.of_Z 3)
      else
        if (use false : bool) then
          M.alloc (Integer.of_Z 4)
        else
          M.alloc (Integer.of_Z 5) in
  let* α0 : M.Val unit := M.alloc tt in
  M.read α0.
