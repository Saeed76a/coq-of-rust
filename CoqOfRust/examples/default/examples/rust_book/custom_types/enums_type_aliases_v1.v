(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum VeryVerboseEnumOfThingsToDoWithNumbers *)
(* {
  ty_params := [];
  variants :=
    [
      {
        name := "Add";
        item := Tuple [];
        discriminant := None;
      };
      {
        name := "Subtract";
        item := Tuple [];
        discriminant := None;
      }
    ];
} *)

Axiom Operations :
  (Ty.path "enums_type_aliases_v1::Operations") =
    (Ty.path "enums_type_aliases_v1::VeryVerboseEnumOfThingsToDoWithNumbers").

(*
fn main() {
    // We can refer to each variant via its alias, not its long and inconvenient
    // name.
    let x = Operations::Add;
}
*)
Definition main (𝜏 : list Ty.t) (α : list Value.t) : M :=
  match 𝜏, α with
  | [], [] =>
    let* x :=
      M.alloc
        (Value.StructTuple
          "enums_type_aliases_v1::VeryVerboseEnumOfThingsToDoWithNumbers::Add"
          []) in
    let* α0 := M.alloc (Value.Tuple []) in
    M.read α0
  | _, _ => M.impossible
  end.
