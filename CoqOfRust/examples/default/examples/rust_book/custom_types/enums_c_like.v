(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum Number *)

(* Enum Color *)

(*
fn main() {
    // `enums` can be cast as integers.
    println!("zero is {}", Number::Zero as i32);
    println!("one is {}", Number::One as i32);

    println!("roses are #{:06x}", Color::Red as i32);
    println!("violets are #{:06x}", Color::Blue as i32);
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (𝜏 : list Ty.t) (α : list Value.t) : M :=
  match 𝜏, α with
  | [], [] =>
    let* _ :=
      let* _ :=
        let* α0 := M.read (mk_str "zero is ") in
        let* α1 := M.read (mk_str "
") in
        let* α2 := M.alloc [ α0; α1 ] in
        let* α3 := M.alloc (rust_cast ((Integer.of_Z 0) : Ty.path "isize")) in
        let* α4 :=
          M.call
            ((Ty.path "core::fmt::rt::Argument")::["new_display"]
              (borrow α3)) in
        let* α5 := M.alloc [ α4 ] in
        let* α6 :=
          M.call
            ((Ty.path "core::fmt::Arguments")::["new_v1"]
              (pointer_coercion "Unsize" (borrow α2))
              (pointer_coercion "Unsize" (borrow α5))) in
        let* α7 := M.call ((M.var "std::io::stdio::_print") α6) in
        M.alloc α7 in
      M.alloc tt in
    let* _ :=
      let* _ :=
        let* α0 := M.read (mk_str "one is ") in
        let* α1 := M.read (mk_str "
") in
        let* α2 := M.alloc [ α0; α1 ] in
        let* α3 := M.alloc (rust_cast ((Integer.of_Z 1) : Ty.path "isize")) in
        let* α4 :=
          M.call
            ((Ty.path "core::fmt::rt::Argument")::["new_display"]
              (borrow α3)) in
        let* α5 := M.alloc [ α4 ] in
        let* α6 :=
          M.call
            ((Ty.path "core::fmt::Arguments")::["new_v1"]
              (pointer_coercion "Unsize" (borrow α2))
              (pointer_coercion "Unsize" (borrow α5))) in
        let* α7 := M.call ((M.var "std::io::stdio::_print") α6) in
        M.alloc α7 in
      M.alloc tt in
    let* _ :=
      let* _ :=
        let* α0 := M.read (mk_str "roses are #") in
        let* α1 := M.read (mk_str "
") in
        let* α2 := M.alloc [ α0; α1 ] in
        let* α3 :=
          (M.var "BinOp::Panic::add")
            (M.var "enums_c_like::Color::Red_discriminant")
            ((Integer.of_Z 0) : Ty.path "isize") in
        let* α4 := M.alloc (rust_cast α3) in
        let* α5 :=
          M.call
            ((Ty.path "core::fmt::rt::Argument")::["new_lower_hex"]
              (borrow α4)) in
        let* α6 := M.alloc [ α5 ] in
        let* α7 :=
          M.call
            ((Ty.path "core::fmt::rt::Placeholder")::["new"]
              ((Integer.of_Z 0) : Ty.path "usize")
              " "%char
              core.fmt.rt.Alignment.Unknown
              ((Integer.of_Z 8) : Ty.path "u32")
              core.fmt.rt.Count.Implied
              (core.fmt.rt.Count.Is ((Integer.of_Z 6) : Ty.path "usize"))) in
        let* α8 := M.alloc [ α7 ] in
        let* α9 := M.call (Ty.path "core::fmt::rt::UnsafeArg")::["new"] in
        let* α10 :=
          M.call
            ((Ty.path "core::fmt::Arguments")::["new_v1_formatted"]
              (pointer_coercion "Unsize" (borrow α2))
              (pointer_coercion "Unsize" (borrow α6))
              (pointer_coercion "Unsize" (borrow α8))
              α9) in
        let* α11 := M.call ((M.var "std::io::stdio::_print") α10) in
        M.alloc α11 in
      M.alloc tt in
    let* _ :=
      let* _ :=
        let* α0 := M.read (mk_str "violets are #") in
        let* α1 := M.read (mk_str "
") in
        let* α2 := M.alloc [ α0; α1 ] in
        let* α3 :=
          (M.var "BinOp::Panic::add")
            (M.var "enums_c_like::Color::Blue_discriminant")
            ((Integer.of_Z 0) : Ty.path "isize") in
        let* α4 := M.alloc (rust_cast α3) in
        let* α5 :=
          M.call
            ((Ty.path "core::fmt::rt::Argument")::["new_lower_hex"]
              (borrow α4)) in
        let* α6 := M.alloc [ α5 ] in
        let* α7 :=
          M.call
            ((Ty.path "core::fmt::rt::Placeholder")::["new"]
              ((Integer.of_Z 0) : Ty.path "usize")
              " "%char
              core.fmt.rt.Alignment.Unknown
              ((Integer.of_Z 8) : Ty.path "u32")
              core.fmt.rt.Count.Implied
              (core.fmt.rt.Count.Is ((Integer.of_Z 6) : Ty.path "usize"))) in
        let* α8 := M.alloc [ α7 ] in
        let* α9 := M.call (Ty.path "core::fmt::rt::UnsafeArg")::["new"] in
        let* α10 :=
          M.call
            ((Ty.path "core::fmt::Arguments")::["new_v1_formatted"]
              (pointer_coercion "Unsize" (borrow α2))
              (pointer_coercion "Unsize" (borrow α6))
              (pointer_coercion "Unsize" (borrow α8))
              α9) in
        let* α11 := M.call ((M.var "std::io::stdio::_print") α10) in
        M.alloc α11 in
      M.alloc tt in
    let* α0 := M.alloc tt in
    M.read α0
  | _, _ => M.impossible
  end.
