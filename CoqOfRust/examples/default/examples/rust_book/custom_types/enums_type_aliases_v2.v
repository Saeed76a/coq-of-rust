(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum VeryVerboseEnumOfThingsToDoWithNumbers *)
(* {
  ty_params := [];
  variants :=
    [
      {
        name := "Add";
        item := StructTuple [];
        discriminant := None;
      };
      {
        name := "Subtract";
        item := StructTuple [];
        discriminant := None;
      }
    ];
} *)

Module Impl_enums_type_aliases_v2_VeryVerboseEnumOfThingsToDoWithNumbers.
  Definition Self : Ty.t :=
    Ty.path "enums_type_aliases_v2::VeryVerboseEnumOfThingsToDoWithNumbers".
  
  (*
      fn run(&self, x: i32, y: i32) -> i32 {
          match self {
              Self::Add => x + y,
              Self::Subtract => x - y,
          }
      }
  *)
  Definition run (τ : list Ty.t) (α : list Value.t) : M :=
    match τ, α with
    | [], [ self; x; y ] =>
      let* self := M.alloc self in
      let* x := M.alloc x in
      let* y := M.alloc y in
      let* α0 :=
        match_operator
          self
          [
            fun γ =>
              let* γ := M.read γ in
              let* α0 := M.read x in
              let* α1 := M.read y in
              let* α2 := BinOp.Panic.add α0 α1 in
              M.alloc α2;
            fun γ =>
              let* γ := M.read γ in
              let* α0 := M.read x in
              let* α1 := M.read y in
              let* α2 := BinOp.Panic.sub α0 α1 in
              M.alloc α2
          ] in
      M.read α0
    | _, _ => M.impossible
    end.
  
  Axiom AssociatedFunction_run : M.IsAssociatedFunction Self "run" run.
End Impl_enums_type_aliases_v2_VeryVerboseEnumOfThingsToDoWithNumbers.
