(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    use std::arch::asm;

    fn load_fpu_control_word(control: u16) {
        unsafe {
            asm!("fldcw [{}]", in(reg) &control, options(nostack));
        }
    }
}
*)
Definition main (τ : list Ty.t) (α : list Value.t) : M :=
  match τ, α with | [], [] => M.pure (Value.Tuple []) | _, _ => M.impossible end.

Module main.
  (*
      fn load_fpu_control_word(control: u16) {
          unsafe {
              asm!("fldcw [{}]", in(reg) &control, options(nostack));
          }
      }
  *)
  Definition load_fpu_control_word (τ : list Ty.t) (α : list Value.t) : M :=
    match τ, α with
    | [], [ control ] =>
      let* control := M.alloc control in
      let _ := InlineAssembly in
      let* α0 := M.alloc (Value.Tuple []) in
      M.read α0
    | _, _ => M.impossible
    end.
End main.
