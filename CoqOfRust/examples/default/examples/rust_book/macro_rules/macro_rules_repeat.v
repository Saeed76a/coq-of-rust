(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    println!("{}", find_min!(1));
    println!("{}", find_min!(1 + 2, 2));
    println!("{}", find_min!(5, 2 * 3, 4));
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (𝜏 : list Ty.t) (α : list Value.t) : M :=
  match 𝜏, α with
  | [], [] =>
    let* _ :=
      let* _ :=
        let* α0 := M.read (mk_str "1
") in
        let* α1 := M.alloc [ α0 ] in
        let* α2 :=
          M.call (Ty.apply (Ty.path "core::fmt::rt::Argument") [])::["none"] in
        let* α3 := M.alloc α2 in
        let* α4 :=
          M.call
            ((Ty.apply (Ty.path "core::fmt::Arguments") [])::["new_v1"]
              (pointer_coercion "Unsize" (borrow α1))
              (pointer_coercion "Unsize" (borrow α3))) in
        let* α5 := M.call ((M.var "std::io::stdio::_print") α4) in
        M.alloc α5 in
      M.alloc tt in
    let* _ :=
      let* _ :=
        let* α0 := M.read (mk_str "") in
        let* α1 := M.read (mk_str "
") in
        let* α2 := M.alloc [ α0; α1 ] in
        let* α3 :=
          (M.var "BinOp::Panic::add")
            ((Integer.of_Z 1) : Ty.path "i32")
            ((Integer.of_Z 2) : Ty.path "i32") in
        let* α4 :=
          M.call
            ((M.var "core::cmp::min") α3 ((Integer.of_Z 2) : Ty.path "i32")) in
        let* α5 := M.alloc α4 in
        let* α6 :=
          M.call
            ((Ty.apply (Ty.path "core::fmt::rt::Argument") [])::["new_display"]
              (borrow α5)) in
        let* α7 := M.alloc [ α6 ] in
        let* α8 :=
          M.call
            ((Ty.apply (Ty.path "core::fmt::Arguments") [])::["new_v1"]
              (pointer_coercion "Unsize" (borrow α2))
              (pointer_coercion "Unsize" (borrow α7))) in
        let* α9 := M.call ((M.var "std::io::stdio::_print") α8) in
        M.alloc α9 in
      M.alloc tt in
    let* _ :=
      let* _ :=
        let* α0 := M.read (mk_str "") in
        let* α1 := M.read (mk_str "
") in
        let* α2 := M.alloc [ α0; α1 ] in
        let* α3 :=
          (M.var "BinOp::Panic::mul")
            ((Integer.of_Z 2) : Ty.path "i32")
            ((Integer.of_Z 3) : Ty.path "i32") in
        let* α4 :=
          M.call
            ((M.var "core::cmp::min") α3 ((Integer.of_Z 4) : Ty.path "i32")) in
        let* α5 :=
          M.call
            ((M.var "core::cmp::min") ((Integer.of_Z 5) : Ty.path "i32") α4) in
        let* α6 := M.alloc α5 in
        let* α7 :=
          M.call
            ((Ty.apply (Ty.path "core::fmt::rt::Argument") [])::["new_display"]
              (borrow α6)) in
        let* α8 := M.alloc [ α7 ] in
        let* α9 :=
          M.call
            ((Ty.apply (Ty.path "core::fmt::Arguments") [])::["new_v1"]
              (pointer_coercion "Unsize" (borrow α2))
              (pointer_coercion "Unsize" (borrow α8))) in
        let* α10 := M.call ((M.var "std::io::stdio::_print") α9) in
        M.alloc α10 in
      M.alloc tt in
    let* α0 := M.alloc tt in
    M.read α0
  | _, _ => M.impossible
  end.
