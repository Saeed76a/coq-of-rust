(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    let mut _mutable_integer = 7i32;

    {
        // Shadowing by immutable `_mutable_integer`
        let _mutable_integer = _mutable_integer;

        // Error! `_mutable_integer` is frozen in this scope
        // _mutable_integer = 50;
        // FIXME ^ Comment out this line

        // `_mutable_integer` goes out of scope
    }

    // Ok! `_mutable_integer` is not frozen in this scope
    _mutable_integer = 3;
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (𝜏 : list Ty.t) (α : list Value.t) : M :=
  match 𝜏, α with
  | [], [] =>
    let* _mutable_integer : Ty.path "i32" :=
      M.alloc ((Integer.of_Z 7) : Ty.path "i32") in
    let* _ : Ty.tuple :=
      let* _mutable_integer : Ty.path "i32" := M.copy _mutable_integer in
      M.alloc tt in
    let* _ : Ty.tuple :=
      assign _mutable_integer ((Integer.of_Z 3) : Ty.path "i32") in
    let* α0 : Ty.path "unit" := M.alloc tt in
    M.read α0
  | _, _ => M.impossible
  end.
