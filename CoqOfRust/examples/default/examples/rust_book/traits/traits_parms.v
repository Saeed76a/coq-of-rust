(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Foo.
Section Foo.
  Unset Primitive Projections.
  Class Trait (Self : Set) : Type := {
  }.
  Global Set Primitive Projections.
End Foo.
End Foo.

Module  Bar.
Section Bar.
  Unset Primitive Projections.
  Class Trait (Self : Set) : Type := {
  }.
  Global Set Primitive Projections.
End Bar.
End Bar.

Module  Tar.
Section Tar.
  Unset Primitive Projections.
  Class Trait (Self : Set) : Type := {
  }.
  Global Set Primitive Projections.
End Tar.
End Tar.

Module  SomeTrait.
Section SomeTrait.
  Class Trait (Self : Set) : Type := {
    SomeType : Set;
    ‚Ñí_0 :: traits_parms.Foo.Trait SomeType;
    ‚Ñí_1 :: traits_parms.Bar.Trait SomeType;
    ‚Ñí_2 :: traits_parms.Tar.Trait SomeType;
    some_fn : Ty.function [] (Ty.path "unit");
  }.
  
  Definition Method_SomeType `(Trait) : Instance.t := {
    Notations.double_colon_type := SomeType;
  }.
End SomeTrait.
End SomeTrait.



Module  Impl_traits_parms_Foo_for_traits_parms_SomeOtherType.
Section Impl_traits_parms_Foo_for_traits_parms_SomeOtherType.
  Definition Self : Ty.t := Ty.apply (Ty.path "traits_parms::SomeOtherType") [].
  
  Definition ‚Ñê : Instance.t := [].
End Impl_traits_parms_Foo_for_traits_parms_SomeOtherType.
End Impl_traits_parms_Foo_for_traits_parms_SomeOtherType.

Module  Impl_traits_parms_Bar_for_traits_parms_SomeOtherType.
Section Impl_traits_parms_Bar_for_traits_parms_SomeOtherType.
  Definition Self : Ty.t := Ty.apply (Ty.path "traits_parms::SomeOtherType") [].
  
  Definition ‚Ñê : Instance.t := [].
End Impl_traits_parms_Bar_for_traits_parms_SomeOtherType.
End Impl_traits_parms_Bar_for_traits_parms_SomeOtherType.

Module  Impl_traits_parms_Tar_for_traits_parms_SomeOtherType.
Section Impl_traits_parms_Tar_for_traits_parms_SomeOtherType.
  Definition Self : Ty.t := Ty.apply (Ty.path "traits_parms::SomeOtherType") [].
  
  Definition ‚Ñê : Instance.t := [].
End Impl_traits_parms_Tar_for_traits_parms_SomeOtherType.
End Impl_traits_parms_Tar_for_traits_parms_SomeOtherType.

Module  Impl_traits_parms_SomeTrait_for_traits_parms_SomeOtherType.
Section Impl_traits_parms_SomeTrait_for_traits_parms_SomeOtherType.
  Definition Self : Ty.t := Ty.apply (Ty.path "traits_parms::SomeOtherType") [].
  
  (*
      type SomeType = SomeOtherType;
  *)
  Definition SomeType : Set :=
    Ty.apply (Ty.path "traits_parms::SomeOtherType") [].
  
  (*
      fn some_fn() {}
  *)
  Definition some_fn (ùúè : list Ty.t) (Œ± : list Value.t) : M :=
    match ùúè, Œ± with | [], [] => M.pure tt | _, _ => M.impossible end.
  
  Definition AssociatedFunction_some_fn : Instance.t := {
    Notations.double_colon := some_fn;
  }.
  
  Definition ‚Ñê : Instance.t := [("SomeType", SomeType); ("some_fn", some_fn)].
End Impl_traits_parms_SomeTrait_for_traits_parms_SomeOtherType.
End Impl_traits_parms_SomeTrait_for_traits_parms_SomeOtherType.
