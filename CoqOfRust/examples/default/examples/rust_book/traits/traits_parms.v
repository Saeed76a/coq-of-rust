(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Trait *)
Module Foo.
  
End Foo.

(* Trait *)
Module Bar.
  
End Bar.

(* Trait *)
Module Tar.
  
End Tar.

(* Trait *)
Module SomeTrait.
  
End SomeTrait.

(* Struct SomeOtherType *)

Module Impl_traits_parms_Foo_for_traits_parms_SomeOtherType.
  Axiom Implements :
    M.IsTraitInstance
      "traits_parms::Foo"
      (* Self *) (Ty.path "traits_parms::SomeOtherType")
      []
      []
      [].
End Impl_traits_parms_Foo_for_traits_parms_SomeOtherType.

Module Impl_traits_parms_Bar_for_traits_parms_SomeOtherType.
  Axiom Implements :
    M.IsTraitInstance
      "traits_parms::Bar"
      (* Self *) (Ty.path "traits_parms::SomeOtherType")
      []
      []
      [].
End Impl_traits_parms_Bar_for_traits_parms_SomeOtherType.

Module Impl_traits_parms_Tar_for_traits_parms_SomeOtherType.
  Axiom Implements :
    M.IsTraitInstance
      "traits_parms::Tar"
      (* Self *) (Ty.path "traits_parms::SomeOtherType")
      []
      []
      [].
End Impl_traits_parms_Tar_for_traits_parms_SomeOtherType.

Module Impl_traits_parms_SomeTrait_for_traits_parms_SomeOtherType.
  (*
      type SomeType = SomeOtherType;
  *)
  Definition SomeType : Set := Ty.path "traits_parms::SomeOtherType".
  
  (*
      fn some_fn() {}
  *)
  Definition some_fn (𝜏 : list Ty.t) (α : list Value.t) : M :=
    match 𝜏, α with | [ Self ], [] => M.pure tt | _, _ => M.impossible end.
  
  Axiom Implements :
    M.IsTraitInstance
      "traits_parms::SomeTrait"
      (* Self *) (Ty.path "traits_parms::SomeOtherType")
      []
      [ ("SomeType", TODO); ("some_fn", InstanceField.Method some_fn) ]
      [].
End Impl_traits_parms_SomeTrait_for_traits_parms_SomeOtherType.
