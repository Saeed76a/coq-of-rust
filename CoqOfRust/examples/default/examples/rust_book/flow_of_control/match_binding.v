(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn age() -> u32 {
    15
}
*)
Definition age (𝜏 : list Ty.t) (α : list Value.t) : M :=
  match 𝜏, α with
  | [], [] => M.pure ((Integer.of_Z 15) : Ty.path "u32")
  | _, _ => M.impossible
  end.

(*
fn main() {
    println!("Tell me what type of person you are");

    match age() {
        0 => println!("I haven't celebrated my first birthday yet"),
        // Could `match` 1 ..= 12 directly but then what age
        // would the child be? Instead, bind to `n` for the
        // sequence of 1 ..= 12. Now the age can be reported.
        n @ 1..=12 => println!("I'm a child of age {:?}", n),
        n @ 13..=19 => println!("I'm a teen of age {:?}", n),
        // Nothing bound. Return the result.
        n => println!("I'm an old person of age {:?}", n),
    }
}
*)
(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (𝜏 : list Ty.t) (α : list Value.t) : M :=
  match 𝜏, α with
  | [], [] =>
    let* _ :=
      let* _ :=
        let* α0 := M.read (mk_str "Tell me what type of person you are
") in
        let* α1 := M.alloc [ α0 ] in
        let* α2 :=
          M.call
            (Ty.path "core::fmt::Arguments")::["new_const"]
            [ pointer_coercion "Unsize" (borrow α1) ] in
        let* α3 := M.call (M.var "std::io::stdio::_print") [ α2 ] in
        M.alloc α3 in
      M.alloc tt in
    let* α0 := M.call (M.var "match_binding::age") [] in
    let* α1 := M.alloc α0 in
    let* α0 :=
      match_operator
        α1
        [
          fun γ =>
            (let* α0 := M.read γ in
            match α0 with
            | u32.Make 0 =>
              let* _ :=
                let* α0 :=
                  M.read
                    (mk_str "I haven't celebrated my first birthday yet
") in
                let* α1 := M.alloc [ α0 ] in
                let* α2 :=
                  M.call
                    (Ty.path "core::fmt::Arguments")::["new_const"]
                    [ pointer_coercion "Unsize" (borrow α1) ] in
                let* α3 := M.call (M.var "std::io::stdio::_print") [ α2 ] in
                M.alloc α3 in
              M.alloc tt
            | _ => M.break_match 
            end) :
            Ty.tuple [];
          fun γ =>
            (let* n := M.copy γ in
            let* _ :=
              let* α0 := M.read (mk_str "I'm a child of age ") in
              let* α1 := M.read (mk_str "
") in
              let* α2 := M.alloc [ α0; α1 ] in
              let* α3 :=
                M.call
                  (Ty.path "core::fmt::rt::Argument")::["new_debug"]
                  [ borrow n ] in
              let* α4 := M.alloc [ α3 ] in
              let* α5 :=
                M.call
                  (Ty.path "core::fmt::Arguments")::["new_v1"]
                  [
                    pointer_coercion "Unsize" (borrow α2);
                    pointer_coercion "Unsize" (borrow α4)
                  ] in
              let* α6 := M.call (M.var "std::io::stdio::_print") [ α5 ] in
              M.alloc α6 in
            M.alloc tt) :
            Ty.tuple [];
          fun γ =>
            (let* n := M.copy γ in
            let* _ :=
              let* α0 := M.read (mk_str "I'm a teen of age ") in
              let* α1 := M.read (mk_str "
") in
              let* α2 := M.alloc [ α0; α1 ] in
              let* α3 :=
                M.call
                  (Ty.path "core::fmt::rt::Argument")::["new_debug"]
                  [ borrow n ] in
              let* α4 := M.alloc [ α3 ] in
              let* α5 :=
                M.call
                  (Ty.path "core::fmt::Arguments")::["new_v1"]
                  [
                    pointer_coercion "Unsize" (borrow α2);
                    pointer_coercion "Unsize" (borrow α4)
                  ] in
              let* α6 := M.call (M.var "std::io::stdio::_print") [ α5 ] in
              M.alloc α6 in
            M.alloc tt) :
            Ty.tuple [];
          fun γ =>
            (let* n := M.copy γ in
            let* _ :=
              let* α0 := M.read (mk_str "I'm an old person of age ") in
              let* α1 := M.read (mk_str "
") in
              let* α2 := M.alloc [ α0; α1 ] in
              let* α3 :=
                M.call
                  (Ty.path "core::fmt::rt::Argument")::["new_debug"]
                  [ borrow n ] in
              let* α4 := M.alloc [ α3 ] in
              let* α5 :=
                M.call
                  (Ty.path "core::fmt::Arguments")::["new_v1"]
                  [
                    pointer_coercion "Unsize" (borrow α2);
                    pointer_coercion "Unsize" (borrow α4)
                  ] in
              let* α6 := M.call (M.var "std::io::stdio::_print") [ α5 ] in
              M.alloc α6 in
            M.alloc tt) :
            Ty.tuple []
        ] in
    M.read α0
  | _, _ => M.impossible
  end.
