warning: unused variable: `ty_params`
    --> lib/src/top_level.rs:1889:17
     |
1889 |                 ty_params,
     |                 ^^^^^^^^^ help: try ignoring the field: `ty_params: _`
     |
     = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `variants`
    --> lib/src/top_level.rs:1890:17
     |
1890 |                 variants,
     |                 ^^^^^^^^ help: try ignoring the field: `variants: _`

warning: unused variable: `ty_params`
    --> lib/src/top_level.rs:1895:17
     |
1895 |                 ty_params,
     |                 ^^^^^^^^^ help: try ignoring the field: `ty_params: _`

warning: unused variable: `fields`
    --> lib/src/top_level.rs:1896:17
     |
1896 |                 fields,
     |                 ^^^^^^ help: try ignoring the field: `fields: _`

warning: unused variable: `ty_params`
    --> lib/src/top_level.rs:1898:50
     |
1898 |             TopLevelItem::TypeStructUnit { name, ty_params } => {
     |                                                  ^^^^^^^^^ help: try ignoring the field: `ty_params: _`

warning: variants `Record` and `Inductive` are never constructed
  --> lib/src/coq.rs:29:5
   |
18 | pub(crate) enum TopLevelItem<'a> {
   |                 ------------ variants in this enum
...
29 |     Record(Record<'a>),
   |     ^^^^^^
30 |     Inductive(Inductive<'a>),
   |     ^^^^^^^^^
   |
   = note: `TopLevelItem` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: field `class` is never read
  --> lib/src/coq.rs:84:5
   |
81 | pub(crate) struct Instance<'a> {
   |                   -------- field in this struct
...
84 |     class: Expression<'a>,
   |     ^^^^^
   |
   = note: `Instance` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: variant `Ltac` is never constructed
   --> lib/src/coq.rs:106:5
    |
91  | pub(crate) enum DefinitionKind<'a> {
    |                 -------------- variant in this enum
...
106 |     Ltac {
    |     ^^^^
    |
    = note: `DefinitionKind` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: multiple variants are never constructed
   --> lib/src/coq.rs:178:5
    |
145 | pub(crate) enum Expression<'a> {
    |                 ---------- variants in this enum
...
178 |     PiType {
    |     ^^^^^^
...
190 |     Product {
    |     ^^^^^^^
...
201 |     RecordField {
    |     ^^^^^^^^^^^
...
205 |     RecordUpdate {
    |     ^^^^^^^^^^^^
...
214 |     ModeWrapper {
    |     ^^^^^^^^^^^
...
222 |     SigmaType {
    |     ^^^^^^^^^
...
233 |     Unit,
    |     ^^^^
    |
    = note: `Expression` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: associated function `new_vec` is never used
   --> lib/src/coq.rs:316:19
    |
308 | impl<'a> TopLevel<'a> {
    | --------------------- associated function in this implementation
...
316 |     pub(crate) fn new_vec(items: Vec<TopLevelItem<'a>>) -> Self {
    |                   ^^^^^^^

warning: associated function `new` is never used
   --> lib/src/coq.rs:590:19
    |
589 | impl<'a> Record<'a> {
    | ------------------- associated function in this implementation
590 |     pub(crate) fn new(name: &str, ty: &Expression<'a>, fields: &[RecordFieldDef<'a>]) -> Self {
    |                   ^^^

warning: associated function `new` is never used
   --> lib/src/coq.rs:698:19
    |
697 | impl<'a> IndFieldDef<'a> {
    | ------------------------ associated function in this implementation
698 |     pub(crate) fn new(name: &String, item: Rc<VariantItem>) -> Self {
    |                   ^^^

warning: associated function `new` is never used
   --> lib/src/coq.rs:733:19
    |
732 | impl<'a> Inductive<'a> {
    | ---------------------- associated function in this implementation
733 |     pub(crate) fn new(
    |                   ^^^

warning: associated function `new` is never used
   --> lib/src/coq.rs:831:19
    |
830 | impl<'a> RecordFieldDef<'a> {
    | --------------------------- associated function in this implementation
831 |     pub(crate) fn new(ident: &Option<String>, ty: &Expression<'a>) -> Self {
    |                   ^^^

warning: associated items `arrows_from`, `multiply`, and `multiply_many` are never used
    --> lib/src/coq.rs:1126:19
     |
885  | impl<'a> Expression<'a> {
     | ----------------------- associated items in this implementation
...
1126 |     pub(crate) fn arrows_from(&self, domains: &[Self]) -> Self {
     |                   ^^^^^^^^^^^
...
1137 |     pub(crate) fn multiply(lhs: Self, rhs: Self) -> Self {
     |                   ^^^^^^^^
...
1144 |     pub(crate) fn multiply_many(exprs: &[Self]) -> Self {
     |                   ^^^^^^^^^^^^^

warning: method `prefix_last_by_impl` is never used
  --> lib/src/path.rs:30:8
   |
23 | impl Path {
   | --------- method in this implementation
...
30 |     fn prefix_last_by_impl(&mut self) {
   |        ^^^^^^^^^^^^^^^^^^^

warning: function `compile_qpath` is never used
   --> lib/src/path.rs:114:15
    |
114 | pub(crate) fn compile_qpath(env: &Env, qpath: &QPath) -> Path {
    |               ^^^^^^^^^^^^^

warning: associated function `to_coq_enum` is never used
    --> lib/src/top_level.rs:1685:8
     |
1684 | impl TopLevelItem {
     | ----------------- associated function in this implementation
1685 |     fn to_coq_enum<'a>(
     |        ^^^^^^^^^^^

warning: function `struct_field_value` is never used
    --> lib/src/top_level.rs:2191:4
     |
2191 | fn struct_field_value<'a>(name: String) -> coq::Expression<'a> {
     |    ^^^^^^^^^^^^^^^^^^

warning: function `enum_struct_field_value` is never used
    --> lib/src/top_level.rs:2218:4
     |
2218 | fn enum_struct_field_value<'a>(
     |    ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `enum_tuple_field_value` is never used
    --> lib/src/top_level.rs:2280:4
     |
2280 | fn enum_tuple_field_value(
     |    ^^^^^^^^^^^^^^^^^^^^^^

warning: methods `to_coq` and `to_doc` are never used
    --> lib/src/top_level.rs:2364:8
     |
2363 | impl TypeStructStruct {
     | --------------------- methods in this implementation
2364 |     fn to_coq(&self) -> coq::TopLevel {
     |        ^^^^^^
...
2464 |     fn to_doc(&self) -> Doc {
     |        ^^^^^^

warning: variants `PathInTrait` and `OpaqueType` are never constructed
  --> lib/src/ty.rs:16:5
   |
11 | pub(crate) enum CoqType {
   |                 ------- variants in this enum
...
16 |     PathInTrait {
   |     ^^^^^^^^^^^
...
32 |     OpaqueType(Vec<Path>),
   |     ^^^^^^^^^^
   |
   = note: `CoqType` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: methods `has_opaque_types` and `opaque_types_bounds` are never used
   --> lib/src/ty.rs:319:19
    |
193 | impl CoqType {
    | ------------ methods in this implementation
...
319 |     pub(crate) fn has_opaque_types(&self) -> bool {
    |                   ^^^^^^^^^^^^^^^^
...
338 |     pub(crate) fn opaque_types_bounds(&self) -> Vec<Vec<Path>> {
    |                   ^^^^^^^^^^^^^^^^^^^

warning: Ranges in patterns are not yet supported.
  --> examples/rust_book/flow_of_control/match_binding.rs:14:13
   |
14 |         n @ 1..=12 => println!("I'm a child of age {:?}", n),
   |             ^^^^^^

warning: Ranges in patterns are not yet supported.
  --> examples/rust_book/flow_of_control/match_binding.rs:15:13
   |
15 |         n @ 13..=19 => println!("I'm a teen of age {:?}", n),
   |             ^^^^^^^

warning: 2 warnings emitted

