(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* Enum Foo *)

(* Enum Bar *)

Module BarTrait.
  Class Trait (Self : Set) : Type := {
    show : Ty.function [Self] (Ty.path "alloc::string::String");
  }.
  
End BarTrait.

Module Impl_const_underscore_expression_BarTrait_for_const_underscore_expression_Bar.
  Definition Self : Ty.t := Ty.path "const_underscore_expression::Bar".
  
  (*
          fn show(self: Self) -> String {
              self.test
          }
  *)
  Definition show (ùúè : list Ty.t) (Œ± : list Value.t) : M :=
    match ùúè, Œ± with
    | [], [self] =>
      let* self := M.alloc self in
      M.read ((M.var "const_underscore_expression::Bar::Get_test") self)
    | _, _ => M.impossible
    end.
  
  Definition ‚Ñê : Instance.t := [("show", InstanceField.Method show)].
End Impl_const_underscore_expression_BarTrait_for_const_underscore_expression_Bar.
