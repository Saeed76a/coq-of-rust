(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module WebEvent.
  Module Click.
    Unset Primitive Projections.
    Record t `{ℋ : State.Trait} : Set := {
      x : i64;
      y : i64;
    }.
    Global Set Primitive Projections.
  End Click.
  
  Inductive t `{ℋ : State.Trait} : Set :=
  | PageLoad
  | PageUnload
  | KeyPress (_ : char)
  | Paste (_ : alloc.string.String)
  | Click (_ : Click.t).
End WebEvent.
Definition WebEvent `{ℋ : State.Trait} : Set := M.Val WebEvent.t.

Definition inspect `{ℋ : State.Trait} (event : enums.WebEvent) : M unit :=
  M.function_body
    (let* α0 := M.read event in
    match α0 with
    | enums.WebEvent  =>
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc
            [
              mk_str
                ("page loaded, r" ++
                  String.String "233" ("f" ++ String.String "233" "
"))
            ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_const"] α4 in
        std.io.stdio._print α5 in
      M.alloc tt
    | enums.WebEvent  =>
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "page unloaded
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_const"] α4 in
        std.io.stdio._print α5 in
      M.alloc tt
    | enums.WebEvent c =>
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "pressed '"; mk_str "'.
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine (ref char)) := borrow c in
        let* α6 : ltac:(refine char) := deref α5 in
        let* α7 : ltac:(refine (ref char)) := borrow α6 in
        let* α8 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α7 in
        let* α9 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α8 ] in
        let* α10 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α9 in
        let* α11 : ltac:(refine (array core.fmt.rt.Argument)) := deref α10 in
        let* α12 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α11 in
        let* α13 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α12 in
        let* α14 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α4 α13 in
        std.io.stdio._print α14 in
      M.alloc tt
    | enums.WebEvent s =>
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "pasted ""; mk_str "".
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine (ref alloc.string.String)) := borrow s in
        let* α6 : ltac:(refine alloc.string.String) := deref α5 in
        let* α7 : ltac:(refine (ref alloc.string.String)) := borrow α6 in
        let* α8 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α7 in
        let* α9 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α8 ] in
        let* α10 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α9 in
        let* α11 : ltac:(refine (array core.fmt.rt.Argument)) := deref α10 in
        let* α12 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α11 in
        let* α13 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α12 in
        let* α14 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α4 α13 in
        std.io.stdio._print α14 in
      M.alloc tt
    | enums.WebEvent {| enums.WebEvent.x := x; enums.WebEvent.y := y; |} =>
      let* _ : ltac:(refine unit) :=
        let* _ : ltac:(refine unit) :=
          let* α0 : ltac:(refine (array (ref str))) :=
            M.alloc [ mk_str "clicked at x="; mk_str ", y="; mk_str ".
" ] in
          let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
          let* α2 : ltac:(refine (array (ref str))) := deref α1 in
          let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
          let* α4 : ltac:(refine (ref (slice (ref str)))) :=
            pointer_coercion "Unsize" α3 in
          let* α5 : ltac:(refine (ref i64)) := borrow x in
          let* α6 : ltac:(refine i64) := deref α5 in
          let* α7 : ltac:(refine (ref i64)) := borrow α6 in
          let* α8 : ltac:(refine core.fmt.rt.Argument) :=
            core.fmt.rt.Argument::["new_display"] α7 in
          let* α9 : ltac:(refine (ref i64)) := borrow y in
          let* α10 : ltac:(refine i64) := deref α9 in
          let* α11 : ltac:(refine (ref i64)) := borrow α10 in
          let* α12 : ltac:(refine core.fmt.rt.Argument) :=
            core.fmt.rt.Argument::["new_display"] α11 in
          let* α13 : ltac:(refine (array core.fmt.rt.Argument)) :=
            M.alloc [ α8; α12 ] in
          let* α14 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
            borrow α13 in
          let* α15 : ltac:(refine (array core.fmt.rt.Argument)) := deref α14 in
          let* α16 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
            borrow α15 in
          let* α17 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
            pointer_coercion "Unsize" α16 in
          let* α18 : ltac:(refine core.fmt.Arguments) :=
            core.fmt.Arguments::["new_v1"] α4 α17 in
          std.io.stdio._print α18 in
        M.alloc tt in
      M.alloc tt
    end).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  M.function_body
    (let* pressed : ltac:(refine enums.WebEvent) :=
      let* α0 : ltac:(refine char) := M.alloc "x"%char in
      M.alloc (enums.WebEvent.KeyPress α0) in
    let* pasted : ltac:(refine enums.WebEvent) :=
      let* α0 : ltac:(refine str) := deref (mk_str "my text") in
      let* α1 : ltac:(refine (ref str)) := borrow α0 in
      let* α2 : ltac:(refine alloc.string.String) :=
        (alloc.borrow.ToOwned.to_owned (Self := str) (Trait := ltac:(refine _)))
          α1 in
      M.alloc (enums.WebEvent.Paste α2) in
    let* click : ltac:(refine enums.WebEvent) :=
      let* α0 : ltac:(refine i64) := M.alloc 20 in
      let* α1 : ltac:(refine i64) := M.alloc 80 in
      M.alloc
        enums.WebEvent.Click
          {|
          enums.WebEvent.Click.x := α0;
          enums.WebEvent.Click.y := α1;
        |} in
    let* load : ltac:(refine enums.WebEvent) :=
      M.alloc enums.WebEvent.PageLoad in
    let* unload : ltac:(refine enums.WebEvent) :=
      M.alloc enums.WebEvent.PageUnload in
    let* _ : ltac:(refine unit) := enums.inspect pressed in
    let* _ : ltac:(refine unit) := enums.inspect pasted in
    let* _ : ltac:(refine unit) := enums.inspect click in
    let* _ : ltac:(refine unit) := enums.inspect load in
    let* _ : ltac:(refine unit) := enums.inspect unload in
    M.alloc tt).
