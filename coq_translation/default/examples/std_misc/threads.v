(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition NTHREADS `{State.Trait} : u32 := run (M.alloc 10).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{State.Trait} : M unit :=
  let* children := (alloc.vec.Vec _ alloc.alloc.Global)::["new"] in
  let* _ :=
    let* α0 := M.alloc 0 in
    let* α1 :=
      M.alloc
        {|
          core.ops.range.Range.start := α0;
          core.ops.range.Range.end := threads.NTHREADS;
        |} in
    let* α2 := core.iter.traits.collect.IntoIterator.into_iter α1 in
    let* α3 :=
      match α2 with
      | iter =>
        loop
          (let* _ :=
            let* α0 := borrow_mut iter (core.ops.range.Range u32) in
            let* α1 := deref α0 (core.ops.range.Range u32) in
            let* α2 := borrow_mut α1 (core.ops.range.Range u32) in
            let* α3 := core.iter.traits.iterator.Iterator.next α2 in
            match α3 with
            | core.option.Option  =>
              let* α0 := Break in
              never_to_any α0
            | core.option.Option i =>
              let* _ :=
                let* α0 :=
                  borrow_mut
                    children
                    (alloc.vec.Vec
                      (std.thread.JoinHandle unit)
                      alloc.alloc.Global) in
                let* α1 := std.thread.spawn "Closure" in
                (alloc.vec.Vec _ _)::["push"] α0 α1 in
              Pure tt
            end in
          Pure tt)
      end in
    use α3 in
  let* α0 := core.iter.traits.collect.IntoIterator.into_iter children in
  let* α1 :=
    match α0 with
    | iter =>
      loop
        (let* _ :=
          let* α0 :=
            borrow_mut
              iter
              (alloc.vec.into_iter.IntoIter
                (std.thread.JoinHandle unit)
                alloc.alloc.Global) in
          let* α1 :=
            deref
              α0
              (alloc.vec.into_iter.IntoIter
                (std.thread.JoinHandle unit)
                alloc.alloc.Global) in
          let* α2 :=
            borrow_mut
              α1
              (alloc.vec.into_iter.IntoIter
                (std.thread.JoinHandle unit)
                alloc.alloc.Global) in
          let* α3 := core.iter.traits.iterator.Iterator.next α2 in
          match α3 with
          | core.option.Option  =>
            let* α0 := Break in
            never_to_any α0
          | core.option.Option child =>
            let* _ := (std.thread.JoinHandle _)::["join"] child in
            Pure tt
          end in
        Pure tt)
    end in
  use α1.
