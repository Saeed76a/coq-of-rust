(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition apply
    `{State.Trait}
    {F : Set}
    `{core.ops.function.Fn.Trait F (Args := unit)}
    (f : F)
    : M unit :=
  let* _ :=
    let* α0 := borrow f _ in
    core.ops.function.Fn.call α0 tt in
  Pure tt.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{State.Trait} : M unit :=
  let* x := M.alloc 7 in
  let print :=
    let* _ :=
      let* α0 := borrow [ mk_str ""; mk_str "
" ] (list (ref str)) in
      let* α1 := deref α0 (list (ref str)) in
      let* α2 := borrow α1 (list (ref str)) in
      let* α3 := pointer_coercion "Unsize" α2 in
      let* α4 := borrow x i32 in
      let* α5 := deref α4 i32 in
      let* α6 := borrow α5 i32 in
      let* α7 := core.fmt.rt.Argument::["new_display"] α6 in
      let* α8 := borrow [ α7 ] (list core.fmt.rt.Argument) in
      let* α9 := deref α8 (list core.fmt.rt.Argument) in
      let* α10 := borrow α9 (list core.fmt.rt.Argument) in
      let* α11 := pointer_coercion "Unsize" α10 in
      let* α12 := core.fmt.Arguments::["new_v1"] α3 α11 in
      std.io.stdio._print α12 in
    Pure tt in
  let* _ := functions_closures_type_anonymity_define_and_use.apply print in
  Pure tt.
