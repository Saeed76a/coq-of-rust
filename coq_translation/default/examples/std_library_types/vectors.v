(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  M.function_body
    (let*
        collected_iterator :
        ltac:(refine (alloc.vec.Vec i32 alloc.alloc.Global)) :=
      let* α0 : ltac:(refine i32) := M.alloc 0 in
      let* α1 : ltac:(refine i32) := M.alloc 10 in
      let* α2 : ltac:(refine (core.ops.range.Range i32)) :=
        M.alloc
          {| core.ops.range.Range.start := α0; core.ops.range.Range.end := α1;
          |} in
      (core.iter.traits.iterator.Iterator.collect
          (Self := core.ops.range.Range i32)
          (Trait := ltac:(refine _)))
        α2 in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "Collected (0..10) into: "; mk_str "
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow collected_iterator in
        let* α6 : ltac:(refine (alloc.vec.Vec i32 alloc.alloc.Global)) :=
          deref α5 in
        let* α7 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow α6 in
        let* α8 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_debug"] α7 in
        let* α9 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α8 ] in
        let* α10 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α9 in
        let* α11 : ltac:(refine (array core.fmt.rt.Argument)) := deref α10 in
        let* α12 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α11 in
        let* α13 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α12 in
        let* α14 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α4 α13 in
        std.io.stdio._print α14 in
      M.alloc tt in
    let* xs : ltac:(refine (alloc.vec.Vec i32 alloc.alloc.Global)) :=
      let* α0 : ltac:(refine i32) := M.alloc 1 in
      let* α1 : ltac:(refine i32) := M.alloc 2 in
      let* α2 : ltac:(refine i32) := M.alloc 3 in
      let* α3 : ltac:(refine (array i32)) := M.alloc [ α0; α1; α2 ] in
      let*
          α4 :
          ltac:(refine (alloc.boxed.Box (array i32) alloc.alloc.Global)) :=
        (alloc.boxed.Box _ alloc.boxed.Box.Default.A)::["new"] α3 in
      let*
          α5 :
          ltac:(refine (alloc.boxed.Box (slice i32) alloc.alloc.Global)) :=
        pointer_coercion "Unsize" α4 in
      (slice i32)::["into_vec"] α5 in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "Initial vector: "; mk_str "
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow xs in
        let* α6 : ltac:(refine (alloc.vec.Vec i32 alloc.alloc.Global)) :=
          deref α5 in
        let* α7 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow α6 in
        let* α8 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_debug"] α7 in
        let* α9 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α8 ] in
        let* α10 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α9 in
        let* α11 : ltac:(refine (array core.fmt.rt.Argument)) := deref α10 in
        let* α12 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α11 in
        let* α13 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α12 in
        let* α14 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α4 α13 in
        std.io.stdio._print α14 in
      M.alloc tt in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "Push 4 into the vector
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_const"] α4 in
        std.io.stdio._print α5 in
      M.alloc tt in
    let* _ : ltac:(refine unit) :=
      let*
          α0 :
          ltac:(refine (mut_ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
        borrow_mut xs in
      let* α1 : ltac:(refine i32) := M.alloc 4 in
      (alloc.vec.Vec i32 alloc.alloc.Global)::["push"] α0 α1 in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "Vector: "; mk_str "
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow xs in
        let* α6 : ltac:(refine (alloc.vec.Vec i32 alloc.alloc.Global)) :=
          deref α5 in
        let* α7 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow α6 in
        let* α8 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_debug"] α7 in
        let* α9 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α8 ] in
        let* α10 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α9 in
        let* α11 : ltac:(refine (array core.fmt.rt.Argument)) := deref α10 in
        let* α12 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α11 in
        let* α13 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α12 in
        let* α14 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α4 α13 in
        std.io.stdio._print α14 in
      M.alloc tt in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "Vector length: "; mk_str "
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow xs in
        let* α6 : ltac:(refine usize) :=
          (alloc.vec.Vec i32 alloc.alloc.Global)::["len"] α5 in
        let* α7 : ltac:(refine (ref usize)) := borrow α6 in
        let* α8 : ltac:(refine usize) := deref α7 in
        let* α9 : ltac:(refine (ref usize)) := borrow α8 in
        let* α10 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α9 in
        let* α11 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α10 ] in
        let* α12 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α11 in
        let* α13 : ltac:(refine (array core.fmt.rt.Argument)) := deref α12 in
        let* α14 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α13 in
        let* α15 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α14 in
        let* α16 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α4 α15 in
        std.io.stdio._print α16 in
      M.alloc tt in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "Second element: "; mk_str "
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow xs in
        let* α6 : ltac:(refine usize) := M.alloc 1 in
        let* α7 : ltac:(refine (ref i32)) :=
          (core.ops.index.Index.index
              (Self := alloc.vec.Vec i32 alloc.alloc.Global)
              (Trait := ltac:(refine _)))
            α5
            α6 in
        let* α8 : ltac:(refine i32) := deref α7 in
        let* α9 : ltac:(refine (ref i32)) := borrow α8 in
        let* α10 : ltac:(refine i32) := deref α9 in
        let* α11 : ltac:(refine (ref i32)) := borrow α10 in
        let* α12 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_display"] α11 in
        let* α13 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α12 ] in
        let* α14 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α13 in
        let* α15 : ltac:(refine (array core.fmt.rt.Argument)) := deref α14 in
        let* α16 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α15 in
        let* α17 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α16 in
        let* α18 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α4 α17 in
        std.io.stdio._print α18 in
      M.alloc tt in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "Pop last element: "; mk_str "
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let*
            α5 :
            ltac:(refine (mut_ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow_mut xs in
        let* α6 : ltac:(refine (core.option.Option i32)) :=
          (alloc.vec.Vec i32 alloc.alloc.Global)::["pop"] α5 in
        let* α7 : ltac:(refine (ref (core.option.Option i32))) := borrow α6 in
        let* α8 : ltac:(refine (core.option.Option i32)) := deref α7 in
        let* α9 : ltac:(refine (ref (core.option.Option i32))) := borrow α8 in
        let* α10 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_debug"] α9 in
        let* α11 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α10 ] in
        let* α12 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α11 in
        let* α13 : ltac:(refine (array core.fmt.rt.Argument)) := deref α12 in
        let* α14 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α13 in
        let* α15 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α14 in
        let* α16 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α4 α15 in
        std.io.stdio._print α16 in
      M.alloc tt in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "Contents of xs:
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_const"] α4 in
        std.io.stdio._print α5 in
      M.alloc tt in
    let* _ : ltac:(refine unit) :=
      let* α0 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
        borrow xs in
      let* α1 : ltac:(refine (ref (slice i32))) :=
        (core.ops.deref.Deref.deref
            (Self := alloc.vec.Vec i32 alloc.alloc.Global)
            (Trait := ltac:(refine _)))
          α0 in
      let* α2 : ltac:(refine (slice i32)) := deref α1 in
      let* α3 : ltac:(refine (ref (slice i32))) := borrow α2 in
      let* α4 : ltac:(refine (core.slice.iter.Iter i32)) :=
        (slice i32)::["iter"] α3 in
      let* α5 : ltac:(refine (core.slice.iter.Iter i32)) :=
        (core.iter.traits.collect.IntoIterator.into_iter
            (Self := core.slice.iter.Iter i32)
            (Trait := ltac:(refine _)))
          α4 in
      let* α6 := M.read α5 in
      let* α7 : ltac:(refine unit) :=
        match α6 with
        | iter =>
          loop
            (let* _ : ltac:(refine unit) :=
              let* α0 : ltac:(refine (mut_ref (core.slice.iter.Iter i32))) :=
                borrow_mut iter in
              let* α1 : ltac:(refine (core.slice.iter.Iter i32)) := deref α0 in
              let* α2 : ltac:(refine (mut_ref (core.slice.iter.Iter i32))) :=
                borrow_mut α1 in
              let* α3 : ltac:(refine (core.option.Option (ref i32))) :=
                (core.iter.traits.iterator.Iterator.next
                    (Self := core.slice.iter.Iter i32)
                    (Trait := ltac:(refine _)))
                  α2 in
              let* α4 := M.read α3 in
              match α4 with
              | core.option.Option.None  =>
                let* α0 : ltac:(refine never) := Break in
                never_to_any α0
              | core.option.Option.Some x =>
                let* _ : ltac:(refine unit) :=
                  let* _ : ltac:(refine unit) :=
                    let* α0 : ltac:(refine (array (ref str))) :=
                      M.alloc [ mk_str "> "; mk_str "
" ] in
                    let* α1 : ltac:(refine (ref (array (ref str)))) :=
                      borrow α0 in
                    let* α2 : ltac:(refine (array (ref str))) := deref α1 in
                    let* α3 : ltac:(refine (ref (array (ref str)))) :=
                      borrow α2 in
                    let* α4 : ltac:(refine (ref (slice (ref str)))) :=
                      pointer_coercion "Unsize" α3 in
                    let* α5 : ltac:(refine (ref (ref i32))) := borrow x in
                    let* α6 : ltac:(refine (ref i32)) := deref α5 in
                    let* α7 : ltac:(refine (ref (ref i32))) := borrow α6 in
                    let* α8 : ltac:(refine core.fmt.rt.Argument) :=
                      core.fmt.rt.Argument::["new_display"] α7 in
                    let* α9 : ltac:(refine (array core.fmt.rt.Argument)) :=
                      M.alloc [ α8 ] in
                    let*
                        α10 :
                        ltac:(refine (ref (array core.fmt.rt.Argument))) :=
                      borrow α9 in
                    let* α11 : ltac:(refine (array core.fmt.rt.Argument)) :=
                      deref α10 in
                    let*
                        α12 :
                        ltac:(refine (ref (array core.fmt.rt.Argument))) :=
                      borrow α11 in
                    let*
                        α13 :
                        ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
                      pointer_coercion "Unsize" α12 in
                    let* α14 : ltac:(refine core.fmt.Arguments) :=
                      core.fmt.Arguments::["new_v1"] α4 α13 in
                    std.io.stdio._print α14 in
                  M.alloc tt in
                M.alloc tt
              end in
            M.alloc tt)
        end in
      use α7 in
    let* _ : ltac:(refine unit) :=
      let* α0 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
        borrow xs in
      let* α1 : ltac:(refine (ref (slice i32))) :=
        (core.ops.deref.Deref.deref
            (Self := alloc.vec.Vec i32 alloc.alloc.Global)
            (Trait := ltac:(refine _)))
          α0 in
      let* α2 : ltac:(refine (slice i32)) := deref α1 in
      let* α3 : ltac:(refine (ref (slice i32))) := borrow α2 in
      let* α4 : ltac:(refine (core.slice.iter.Iter i32)) :=
        (slice i32)::["iter"] α3 in
      let*
          α5 :
          ltac:(refine
            (core.iter.adapters.enumerate.Enumerate
              (core.slice.iter.Iter i32))) :=
        (core.iter.traits.iterator.Iterator.enumerate
            (Self := core.slice.iter.Iter i32)
            (Trait := ltac:(refine _)))
          α4 in
      let*
          α6 :
          ltac:(refine
            (core.iter.adapters.enumerate.Enumerate
              (core.slice.iter.Iter i32))) :=
        (core.iter.traits.collect.IntoIterator.into_iter
            (Self :=
              core.iter.adapters.enumerate.Enumerate (core.slice.iter.Iter i32))
            (Trait := ltac:(refine _)))
          α5 in
      let* α7 := M.read α6 in
      let* α8 : ltac:(refine unit) :=
        match α7 with
        | iter =>
          loop
            (let* _ : ltac:(refine unit) :=
              let*
                  α0 :
                  ltac:(refine
                    (mut_ref
                      (core.iter.adapters.enumerate.Enumerate
                        (core.slice.iter.Iter i32)))) :=
                borrow_mut iter in
              let*
                  α1 :
                  ltac:(refine
                    (core.iter.adapters.enumerate.Enumerate
                      (core.slice.iter.Iter i32))) :=
                deref α0 in
              let*
                  α2 :
                  ltac:(refine
                    (mut_ref
                      (core.iter.adapters.enumerate.Enumerate
                        (core.slice.iter.Iter i32)))) :=
                borrow_mut α1 in
              let*
                  α3 :
                  ltac:(refine
                    (core.option.Option (M.Val (usize * (ref i32))))) :=
                (core.iter.traits.iterator.Iterator.next
                    (Self :=
                      core.iter.adapters.enumerate.Enumerate
                        (core.slice.iter.Iter i32))
                    (Trait := ltac:(refine _)))
                  α2 in
              let* α4 := M.read α3 in
              match α4 with
              | core.option.Option.None  =>
                let* α0 : ltac:(refine never) := Break in
                never_to_any α0
              | core.option.Option.Some (i, x) =>
                let* _ : ltac:(refine unit) :=
                  let* _ : ltac:(refine unit) :=
                    let* α0 : ltac:(refine (array (ref str))) :=
                      M.alloc
                        [
                          mk_str "In position ";
                          mk_str " we have value ";
                          mk_str "
"
                        ] in
                    let* α1 : ltac:(refine (ref (array (ref str)))) :=
                      borrow α0 in
                    let* α2 : ltac:(refine (array (ref str))) := deref α1 in
                    let* α3 : ltac:(refine (ref (array (ref str)))) :=
                      borrow α2 in
                    let* α4 : ltac:(refine (ref (slice (ref str)))) :=
                      pointer_coercion "Unsize" α3 in
                    let* α5 : ltac:(refine (ref usize)) := borrow i in
                    let* α6 : ltac:(refine usize) := deref α5 in
                    let* α7 : ltac:(refine (ref usize)) := borrow α6 in
                    let* α8 : ltac:(refine core.fmt.rt.Argument) :=
                      core.fmt.rt.Argument::["new_display"] α7 in
                    let* α9 : ltac:(refine (ref (ref i32))) := borrow x in
                    let* α10 : ltac:(refine (ref i32)) := deref α9 in
                    let* α11 : ltac:(refine (ref (ref i32))) := borrow α10 in
                    let* α12 : ltac:(refine core.fmt.rt.Argument) :=
                      core.fmt.rt.Argument::["new_display"] α11 in
                    let* α13 : ltac:(refine (array core.fmt.rt.Argument)) :=
                      M.alloc [ α8; α12 ] in
                    let*
                        α14 :
                        ltac:(refine (ref (array core.fmt.rt.Argument))) :=
                      borrow α13 in
                    let* α15 : ltac:(refine (array core.fmt.rt.Argument)) :=
                      deref α14 in
                    let*
                        α16 :
                        ltac:(refine (ref (array core.fmt.rt.Argument))) :=
                      borrow α15 in
                    let*
                        α17 :
                        ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
                      pointer_coercion "Unsize" α16 in
                    let* α18 : ltac:(refine core.fmt.Arguments) :=
                      core.fmt.Arguments::["new_v1"] α4 α17 in
                    std.io.stdio._print α18 in
                  M.alloc tt in
                M.alloc tt
              end in
            M.alloc tt)
        end in
      use α8 in
    let* _ : ltac:(refine unit) :=
      let*
          α0 :
          ltac:(refine (mut_ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
        borrow_mut xs in
      let* α1 : ltac:(refine (mut_ref (slice i32))) :=
        (core.ops.deref.DerefMut.deref_mut
            (Self := alloc.vec.Vec i32 alloc.alloc.Global)
            (Trait := ltac:(refine _)))
          α0 in
      let* α2 : ltac:(refine (slice i32)) := deref α1 in
      let* α3 : ltac:(refine (mut_ref (slice i32))) := borrow_mut α2 in
      let* α4 : ltac:(refine (core.slice.iter.IterMut i32)) :=
        (slice i32)::["iter_mut"] α3 in
      let* α5 : ltac:(refine (core.slice.iter.IterMut i32)) :=
        (core.iter.traits.collect.IntoIterator.into_iter
            (Self := core.slice.iter.IterMut i32)
            (Trait := ltac:(refine _)))
          α4 in
      let* α6 := M.read α5 in
      let* α7 : ltac:(refine unit) :=
        match α6 with
        | iter =>
          loop
            (let* _ : ltac:(refine unit) :=
              let* α0 : ltac:(refine (mut_ref (core.slice.iter.IterMut i32))) :=
                borrow_mut iter in
              let* α1 : ltac:(refine (core.slice.iter.IterMut i32)) :=
                deref α0 in
              let* α2 : ltac:(refine (mut_ref (core.slice.iter.IterMut i32))) :=
                borrow_mut α1 in
              let* α3 : ltac:(refine (core.option.Option (mut_ref i32))) :=
                (core.iter.traits.iterator.Iterator.next
                    (Self := core.slice.iter.IterMut i32)
                    (Trait := ltac:(refine _)))
                  α2 in
              let* α4 := M.read α3 in
              match α4 with
              | core.option.Option.None  =>
                let* α0 : ltac:(refine never) := Break in
                never_to_any α0
              | core.option.Option.Some x =>
                let* _ : ltac:(refine unit) :=
                  let* α0 : ltac:(refine i32) := deref x in
                  let* α1 : ltac:(refine i32) := M.alloc 3 in
                  assign_op mul α0 α1 in
                M.alloc tt
              end in
            M.alloc tt)
        end in
      use α7 in
    let* _ : ltac:(refine unit) :=
      let* _ : ltac:(refine unit) :=
        let* α0 : ltac:(refine (array (ref str))) :=
          M.alloc [ mk_str "Updated vector: "; mk_str "
" ] in
        let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
        let* α2 : ltac:(refine (array (ref str))) := deref α1 in
        let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
        let* α4 : ltac:(refine (ref (slice (ref str)))) :=
          pointer_coercion "Unsize" α3 in
        let* α5 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow xs in
        let* α6 : ltac:(refine (alloc.vec.Vec i32 alloc.alloc.Global)) :=
          deref α5 in
        let* α7 : ltac:(refine (ref (alloc.vec.Vec i32 alloc.alloc.Global))) :=
          borrow α6 in
        let* α8 : ltac:(refine core.fmt.rt.Argument) :=
          core.fmt.rt.Argument::["new_debug"] α7 in
        let* α9 : ltac:(refine (array core.fmt.rt.Argument)) :=
          M.alloc [ α8 ] in
        let* α10 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α9 in
        let* α11 : ltac:(refine (array core.fmt.rt.Argument)) := deref α10 in
        let* α12 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
          borrow α11 in
        let* α13 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
          pointer_coercion "Unsize" α12 in
        let* α14 : ltac:(refine core.fmt.Arguments) :=
          core.fmt.Arguments::["new_v1"] α4 α13 in
        std.io.stdio._print α14 in
      M.alloc tt in
    M.alloc tt).
