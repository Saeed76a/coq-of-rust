(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Foo.
  Unset Primitive Projections.
  Record t `{State.Trait} : Set := {
    x0 : u32;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_0 `{State.Trait} : Notation.Dot "0" := {
    Notation.dot x := let* x := M.read x in Pure x.(x0) : M _;
  }.
End Foo.
Definition Foo `{State.Trait} : Set := M.val Foo.t.

Module Impl_example05_Foo.
  Definition Self `{State.Trait} : Set := example05.Foo.
  
  Definition plus1 `{State.Trait} (self : Self) : M u32 :=
    let* α0 := self.["0"] in
    let* α1 := M.alloc 1 in
    add α0 α1.
  
  Global Instance Method_plus1 `{State.Trait} : Notation.Dot "plus1" := {
    Notation.dot := plus1;
  }.
End Impl_example05_Foo.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{State.Trait} : M unit :=
  let* foo :=
    let* α0 := M.alloc 0 in
    Pure (example05.Foo.Build_t α0) in
  let* _ := example05.Foo::["plus1"] foo in
  Pure tt.
