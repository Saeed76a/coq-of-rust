(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition multiply
    `{ℋ : State.Trait}
    (first : ref i32)
    (second : ref i32)
    : M i32 :=
  M.function_body
    ((core.ops.arith.Mul.mul (Self := ref i32) (Trait := ltac:(refine _)))
      first
      second).

Definition choose_first
    `{ℋ : State.Trait}
    (first : ref i32)
    (arg : ref i32)
    : M (ref i32) :=
  M.function_body
    (let* α0 : ltac:(refine i32) := deref first in
    borrow α0).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main `{ℋ : State.Trait} : M unit :=
  M.function_body
    (let* first : ltac:(refine i32) := M.alloc 2 in
    let* _ : ltac:(refine unit) :=
      let* second : ltac:(refine i32) := M.alloc 3 in
      let* _ : ltac:(refine unit) :=
        let* _ : ltac:(refine unit) :=
          let* α0 : ltac:(refine (array (ref str))) :=
            M.alloc [ mk_str "The product is "; mk_str "
" ] in
          let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
          let* α2 : ltac:(refine (array (ref str))) := deref α1 in
          let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
          let* α4 : ltac:(refine (ref (slice (ref str)))) :=
            pointer_coercion "Unsize" α3 in
          let* α5 : ltac:(refine (ref i32)) := borrow first in
          let* α6 : ltac:(refine i32) := deref α5 in
          let* α7 : ltac:(refine (ref i32)) := borrow α6 in
          let* α8 : ltac:(refine (ref i32)) := borrow second in
          let* α9 : ltac:(refine i32) := deref α8 in
          let* α10 : ltac:(refine (ref i32)) := borrow α9 in
          let* α11 : ltac:(refine i32) :=
            scoping_rules_lifetimes_coercion.multiply α7 α10 in
          let* α12 : ltac:(refine (ref i32)) := borrow α11 in
          let* α13 : ltac:(refine i32) := deref α12 in
          let* α14 : ltac:(refine (ref i32)) := borrow α13 in
          let* α15 : ltac:(refine core.fmt.rt.Argument) :=
            core.fmt.rt.Argument::["new_display"] α14 in
          let* α16 : ltac:(refine (array core.fmt.rt.Argument)) :=
            M.alloc [ α15 ] in
          let* α17 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
            borrow α16 in
          let* α18 : ltac:(refine (array core.fmt.rt.Argument)) := deref α17 in
          let* α19 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
            borrow α18 in
          let* α20 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
            pointer_coercion "Unsize" α19 in
          let* α21 : ltac:(refine core.fmt.Arguments) :=
            core.fmt.Arguments::["new_v1"] α4 α20 in
          std.io.stdio._print α21 in
        M.alloc tt in
      let* _ : ltac:(refine unit) :=
        let* _ : ltac:(refine unit) :=
          let* α0 : ltac:(refine (array (ref str))) :=
            M.alloc [ mk_str ""; mk_str " is the first
" ] in
          let* α1 : ltac:(refine (ref (array (ref str)))) := borrow α0 in
          let* α2 : ltac:(refine (array (ref str))) := deref α1 in
          let* α3 : ltac:(refine (ref (array (ref str)))) := borrow α2 in
          let* α4 : ltac:(refine (ref (slice (ref str)))) :=
            pointer_coercion "Unsize" α3 in
          let* α5 : ltac:(refine (ref i32)) := borrow first in
          let* α6 : ltac:(refine i32) := deref α5 in
          let* α7 : ltac:(refine (ref i32)) := borrow α6 in
          let* α8 : ltac:(refine (ref i32)) := borrow second in
          let* α9 : ltac:(refine i32) := deref α8 in
          let* α10 : ltac:(refine (ref i32)) := borrow α9 in
          let* α11 : ltac:(refine (ref i32)) :=
            scoping_rules_lifetimes_coercion.choose_first α7 α10 in
          let* α12 : ltac:(refine (ref (ref i32))) := borrow α11 in
          let* α13 : ltac:(refine (ref i32)) := deref α12 in
          let* α14 : ltac:(refine (ref (ref i32))) := borrow α13 in
          let* α15 : ltac:(refine core.fmt.rt.Argument) :=
            core.fmt.rt.Argument::["new_display"] α14 in
          let* α16 : ltac:(refine (array core.fmt.rt.Argument)) :=
            M.alloc [ α15 ] in
          let* α17 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
            borrow α16 in
          let* α18 : ltac:(refine (array core.fmt.rt.Argument)) := deref α17 in
          let* α19 : ltac:(refine (ref (array core.fmt.rt.Argument))) :=
            borrow α18 in
          let* α20 : ltac:(refine (ref (slice core.fmt.rt.Argument))) :=
            pointer_coercion "Unsize" α19 in
          let* α21 : ltac:(refine core.fmt.Arguments) :=
            core.fmt.Arguments::["new_v1"] α4 α20 in
          std.io.stdio._print α21 in
        M.alloc tt in
      M.alloc tt in
    M.alloc tt).
