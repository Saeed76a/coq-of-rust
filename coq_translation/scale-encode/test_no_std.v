(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module NotEncodeAsType.
  Inductive t : Set := Build.
End NotEncodeAsType.
Definition NotEncodeAsType := NotEncodeAsType.t.

Module Bar.
  Inductive t : Set :=
  | Wibble (_ : bool) (_ : T) (_ : U) (_ : V)
  | Wobble.
End Bar.
Definition Bar := Bar.t.

Module Impl_scale_encode_EncodeAsType_for_test_no_std_Bar_T_U_V.
Section Impl_scale_encode_EncodeAsType_for_test_no_std_Bar_T_U_V.
  Context {T U V : Set}.
  
  Definition Self := test_no_std.Bar T U V.
  
  Parameter encode_as_type_to : forall `{H : State.Trait},
      ref Self ->
      u32 ->
      ref scale_info.portable.PortableRegistry ->
      mut_ref (alloc.vec.Vec u8) ->
      M (H := H) (core.result.Result unit scale_encode.error.Error).
  
  Global Instance Method_encode_as_type_to `{H : State.Trait} :
    Notation.Dot "encode_as_type_to" := {
    Notation.dot := encode_as_type_to;
  }.
  
  Global Instance I : scale_encode.EncodeAsType.Trait Self := {
    scale_encode.EncodeAsType.encode_as_type_to
      `{H : State.Trait}
      :=
      encode_as_type_to;
  }.
End Impl_scale_encode_EncodeAsType_for_test_no_std_Bar_T_U_V.
End Impl_scale_encode_EncodeAsType_for_test_no_std_Bar_T_U_V.

Module NoTraitBounds.
  Inductive t : Set :=
  | Wibble (_ : core.marker.PhantomData T).
End NoTraitBounds.
Definition NoTraitBounds := NoTraitBounds.t.

Module Impl_scale_encode_EncodeAsType_for_test_no_std_NoTraitBounds_T.
Section Impl_scale_encode_EncodeAsType_for_test_no_std_NoTraitBounds_T.
  Context {T : Set}.
  
  Definition Self := test_no_std.NoTraitBounds T.
  
  Parameter encode_as_type_to : forall `{H : State.Trait},
      ref Self ->
      u32 ->
      ref scale_info.portable.PortableRegistry ->
      mut_ref (alloc.vec.Vec u8) ->
      M (H := H) (core.result.Result unit scale_encode.error.Error).
  
  Global Instance Method_encode_as_type_to `{H : State.Trait} :
    Notation.Dot "encode_as_type_to" := {
    Notation.dot := encode_as_type_to;
  }.
  
  Global Instance I : scale_encode.EncodeAsType.Trait Self := {
    scale_encode.EncodeAsType.encode_as_type_to
      `{H : State.Trait}
      :=
      encode_as_type_to;
  }.
End Impl_scale_encode_EncodeAsType_for_test_no_std_NoTraitBounds_T.
End Impl_scale_encode_EncodeAsType_for_test_no_std_NoTraitBounds_T.

Module MyStruct.
  Unset Primitive Projections.
  Record t : Set := {
    array : list Bar;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_array : Notation.Dot "array" := {
    Notation.dot '(Build_t x0) := x0;
  }.
End MyStruct.
Definition MyStruct : Set := MyStruct.t.

Module Impl_scale_encode_EncodeAsType_for_test_no_std_MyStruct_Bar.
Section Impl_scale_encode_EncodeAsType_for_test_no_std_MyStruct_Bar.
  Context {Bar : Set}.
  
  Definition Self := test_no_std.MyStruct Bar.
  
  Parameter encode_as_type_to : forall `{H : State.Trait},
      ref Self ->
      u32 ->
      ref scale_info.portable.PortableRegistry ->
      mut_ref (alloc.vec.Vec u8) ->
      M (H := H) (core.result.Result unit scale_encode.error.Error).
  
  Global Instance Method_encode_as_type_to `{H : State.Trait} :
    Notation.Dot "encode_as_type_to" := {
    Notation.dot := encode_as_type_to;
  }.
  
  Global Instance I : scale_encode.EncodeAsType.Trait Self := {
    scale_encode.EncodeAsType.encode_as_type_to
      `{H : State.Trait}
      :=
      encode_as_type_to;
  }.
End Impl_scale_encode_EncodeAsType_for_test_no_std_MyStruct_Bar.
End Impl_scale_encode_EncodeAsType_for_test_no_std_MyStruct_Bar.

Module Impl_scale_encode_EncodeAsFields_for_test_no_std_MyStruct_Bar.
Section Impl_scale_encode_EncodeAsFields_for_test_no_std_MyStruct_Bar.
  Context {Bar : Set}.
  
  Definition Self := test_no_std.MyStruct Bar.
  
  Parameter encode_as_fields_to : forall `{H : State.Trait},
      ref Self ->
      mut_ref TraitObject ->
      ref scale_info.portable.PortableRegistry ->
      mut_ref (alloc.vec.Vec u8) ->
      M (H := H) (core.result.Result unit scale_encode.error.Error).
  
  Global Instance Method_encode_as_fields_to `{H : State.Trait} :
    Notation.Dot "encode_as_fields_to" := {
    Notation.dot := encode_as_fields_to;
  }.
  
  Global Instance I : scale_encode.EncodeAsFields.Trait Self := {
    scale_encode.EncodeAsFields.encode_as_fields_to
      `{H : State.Trait}
      :=
      encode_as_fields_to;
  }.
End Impl_scale_encode_EncodeAsFields_for_test_no_std_MyStruct_Bar.
End Impl_scale_encode_EncodeAsFields_for_test_no_std_MyStruct_Bar.

Parameter can_encode_as_type : forall `{H : State.Trait},
    forall
    {T : Set},
    `{scale_encode.EncodeAsType.Trait T}
    M (H := H) unit.
