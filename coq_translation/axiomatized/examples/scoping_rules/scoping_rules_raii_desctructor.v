(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module ToDrop.
  Inductive t : Set := Build.
End ToDrop.
Definition ToDrop := @ToDrop.t.

Module Impl_core_ops_drop_Drop_for_scoping_rules_raii_desctructor_ToDrop.
  Definition Self `{State.Trait} := scoping_rules_raii_desctructor.ToDrop.
  
  Parameter drop : forall `{State.Trait}, (mut_ref Self) -> M unit.
  
  Global Instance Method_drop `{State.Trait} : Notation.Dot "drop" := {
    Notation.dot := drop;
  }.
  
  Global Instance I `{State.Trait} : core.ops.drop.Drop.Trait Self := {
    core.ops.drop.Drop.drop := drop;
  }.
  Global Hint Resolve I : core.
End Impl_core_ops_drop_Drop_for_scoping_rules_raii_desctructor_ToDrop.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{State.Trait}, M unit.
