(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(* #[allow(dead_code)] - struct was ignored by the compiler *)
Module Book.
  Unset Primitive Projections.
  Record t `{State.Trait} : Set := {
    author : ref str;
    title : ref str;
    year : u32;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_author `{State.Trait} : Notation.Dot "author" := {
    Notation.dot x := let* x := M.read x in Pure x.(author) : M _;
  }.
  Global Instance Get_AF_author `{State.Trait}
    : Notation.DoubleColon t "author" := {
    Notation.double_colon x := let* x := M.read x in Pure x.(author) : M _;
  }.
  Global Instance Get_title `{State.Trait} : Notation.Dot "title" := {
    Notation.dot x := let* x := M.read x in Pure x.(title) : M _;
  }.
  Global Instance Get_AF_title `{State.Trait}
    : Notation.DoubleColon t "title" := {
    Notation.double_colon x := let* x := M.read x in Pure x.(title) : M _;
  }.
  Global Instance Get_year `{State.Trait} : Notation.Dot "year" := {
    Notation.dot x := let* x := M.read x in Pure x.(year) : M _;
  }.
  Global Instance Get_AF_year `{State.Trait}
    : Notation.DoubleColon t "year" := {
    Notation.double_colon x := let* x := M.read x in Pure x.(year) : M _;
  }.
End Book.
Definition Book `{State.Trait} : Set := M.val (Book.t).

Module Impl_core_clone_Clone_for_scoping_rules_borrowing_mutablity_Book.
  Definition Self `{State.Trait} := scoping_rules_borrowing_mutablity.Book.
  
  (* #[allow(dead_code)] - function was ignored by the compiler *)
  Parameter clone :
      forall `{State.Trait},
      (ref Self) -> M scoping_rules_borrowing_mutablity.Book.
  
  Global Instance Method_clone `{State.Trait} : Notation.Dot "clone" := {
    Notation.dot := clone;
  }.
  
  Global Instance I `{State.Trait} : core.clone.Clone.Trait Self := {
    core.clone.Clone.clone := clone;
  }.
  Global Hint Resolve I : core.
End Impl_core_clone_Clone_for_scoping_rules_borrowing_mutablity_Book.

Module Impl_core_marker_Copy_for_scoping_rules_borrowing_mutablity_Book.
  Definition Self `{State.Trait} := scoping_rules_borrowing_mutablity.Book.
  
  Global Instance I `{State.Trait} : core.marker.Copy.Trait Self := {
  }.
  Global Hint Resolve I : core.
End Impl_core_marker_Copy_for_scoping_rules_borrowing_mutablity_Book.

Parameter borrow_book :
    forall `{State.Trait},
    (ref scoping_rules_borrowing_mutablity.Book) -> M unit.

Parameter new_edition :
    forall `{State.Trait},
    (mut_ref scoping_rules_borrowing_mutablity.Book) -> M unit.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{State.Trait}, M unit.
