(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Impl_core_clone_Clone_for_scoping_rules_borrowing_mutablity_Book.
  Definition Self := scoping_rules_borrowing_mutablity.Book.
  
  (* #[allow(dead_code)] - function was ignored by the compiler *)
  Parameter clone :
      forall `{H' : State.Trait},
      (ref Self) -> M (H := H') scoping_rules_borrowing_mutablity.Book.
  
  Global Instance Method_clone `{H' : State.Trait} : Notation.Dot "clone" := {
    Notation.dot := clone;
  }.
  
  Global Instance I : core.clone.Clone.Trait Self := {
    core.clone.Clone.clone `{H' : State.Trait} := clone;
  }.
  Global Hint Resolve I : core.
End Impl_core_clone_Clone_for_scoping_rules_borrowing_mutablity_Book.

Module Impl_core_marker_Copy_for_scoping_rules_borrowing_mutablity_Book.
  Definition Self := scoping_rules_borrowing_mutablity.Book.
  
  Global Instance I : core.marker.Copy.Trait Self := {
  }.
  Global Hint Resolve I : core.
End Impl_core_marker_Copy_for_scoping_rules_borrowing_mutablity_Book.
