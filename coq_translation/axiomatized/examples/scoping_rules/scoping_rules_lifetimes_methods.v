(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Owner.
  Unset Primitive Projections.
  Record t `{State.Trait} : Set := {
    x0 : i32;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_0 `{State.Trait} : Notation.Dot "0" := {
    Notation.dot x := let* x := M.read x in Pure x.(x0) : M _;
  }.
End Owner.
Definition Owner `{State.Trait} : Set := M.val Owner.t.

Module Impl_scoping_rules_lifetimes_methods_Owner.
  Definition Self := scoping_rules_lifetimes_methods.Owner.
  
  Parameter add_one : forall `{State.Trait}, (mut_ref Self) -> M unit.
  
  Global Instance Method_add_one `{State.Trait} : Notation.Dot "add_one" := {
    Notation.dot := add_one;
  }.
  
  Parameter print : forall `{State.Trait}, (ref Self) -> M unit.
  
  Global Instance Method_print `{State.Trait} : Notation.Dot "print" := {
    Notation.dot := print;
  }.
End Impl_scoping_rules_lifetimes_methods_Owner.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{State.Trait}, M unit.
