(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  A.
Section A.
  Inductive t : Set := Build.
End A.
End A.
Definition A := M.Val A.t.

Module  Single.
Section Single.
  Record t : Set := {
    x0 : generics.A.t;
  }.
  
  Global Instance Get_0 : Notation.Dot "0" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x0) : M _;
  }.
End Single.
End Single.
Definition Single : Set := M.Val Single.t.

Module  SingleGen.
Section SingleGen.
  Context {T : Set}.
  
  Record t : Set := {
    x0 : T;
  }.
  
  Global Instance Get_0 : Notation.Dot "0" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x0) : M _;
  }.
End SingleGen.
End SingleGen.
Definition SingleGen (T : Set) : Set := M.Val (SingleGen.t (T := T)).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M (M.Val unit).
