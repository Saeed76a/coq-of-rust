(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Cardinal.
  Inductive t : Set := Build.
End Cardinal.
Definition Cardinal := @Cardinal.t.

Module BlueJay.
  Inductive t : Set := Build.
End BlueJay.
Definition BlueJay := @BlueJay.t.

Module Turkey.
  Inductive t : Set := Build.
End Turkey.
Definition Turkey := @Turkey.t.

Module Red.
  Unset Primitive Projections.
  Class Trait (Self : Set) `{State.Trait} : Type := {
  }.
  Global Set Primitive Projections.
End Red.

Module Blue.
  Unset Primitive Projections.
  Class Trait (Self : Set) `{State.Trait} : Type := {
  }.
  Global Set Primitive Projections.
End Blue.

Module
  Impl_generics_bounds_test_case_empty_bounds_Red_for_generics_bounds_test_case_empty_bounds_Cardinal.
  Definition Self `{State.Trait} :=
    generics_bounds_test_case_empty_bounds.Cardinal.
  
  Global Instance I `{State.Trait}
    : generics_bounds_test_case_empty_bounds.Red.Trait Self := {
  }.
  Global Hint Resolve I : core.
End
  Impl_generics_bounds_test_case_empty_bounds_Red_for_generics_bounds_test_case_empty_bounds_Cardinal.

Module
  Impl_generics_bounds_test_case_empty_bounds_Blue_for_generics_bounds_test_case_empty_bounds_BlueJay.
  Definition Self `{State.Trait} :=
    generics_bounds_test_case_empty_bounds.BlueJay.
  
  Global Instance I `{State.Trait}
    : generics_bounds_test_case_empty_bounds.Blue.Trait Self := {
  }.
  Global Hint Resolve I : core.
End
  Impl_generics_bounds_test_case_empty_bounds_Blue_for_generics_bounds_test_case_empty_bounds_BlueJay.

Parameter red :
    forall
      `{State.Trait}
      {T : Set}
      `{generics_bounds_test_case_empty_bounds.Red.Trait T},
    (ref T) -> M (ref str).

Parameter blue :
    forall
      `{State.Trait}
      {T : Set}
      `{generics_bounds_test_case_empty_bounds.Blue.Trait T},
    (ref T) -> M (ref str).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{State.Trait}, M unit.
