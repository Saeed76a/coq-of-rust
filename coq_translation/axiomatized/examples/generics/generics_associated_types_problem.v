(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  Container.
Section Container.
  Record t : Set := {
    x0 : i32.t;
    x1 : i32.t;
  }.
  
  Global Instance Get_0 : Notation.Dot "0" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x0) : M _;
  }.
  Global Instance Get_1 : Notation.Dot "1" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x1) : M _;
  }.
End Container.
End Container.

Module  Contains.
Section Contains.
  Class Trait (Self : Set) {A B : Set} : Type := {
    contains : (ref ltac:(Self)) -> (ref A) -> (ref B) -> M bool.t;
    first : (ref ltac:(Self)) -> M i32.t;
    last : (ref ltac:(Self)) -> M i32.t;
  }.
  
End Contains.
End Contains.

Module  Impl_generics_associated_types_problem_Contains_i32_t_i32_t_for_generics_associated_types_problem_Container_t.
Section Impl_generics_associated_types_problem_Contains_i32_t_i32_t_for_generics_associated_types_problem_Container_t.
  Ltac Self := exact generics_associated_types_problem.Container.t.
  
  Parameter contains :
      (M.Val (ref ltac:(Self))) ->
        (M.Val (ref i32.t)) ->
        (M.Val (ref i32.t)) ->
        M (M.Val bool.t).
  
  Global Instance AssociatedFunction_contains :
    Notation.DoubleColon ltac:(Self) "contains" := {
    Notation.double_colon := contains;
  }.
  
  Parameter first : (M.Val (ref ltac:(Self))) -> M (M.Val i32.t).
  
  Global Instance AssociatedFunction_first :
    Notation.DoubleColon ltac:(Self) "first" := {
    Notation.double_colon := first;
  }.
  
  Parameter last : (M.Val (ref ltac:(Self))) -> M (M.Val i32.t).
  
  Global Instance AssociatedFunction_last :
    Notation.DoubleColon ltac:(Self) "last" := {
    Notation.double_colon := last;
  }.
  
  Global Instance ℐ :
    generics_associated_types_problem.Contains.Trait ltac:(Self)
      (A := i32.t)
      (B := i32.t) := {
    generics_associated_types_problem.Contains.contains := contains;
    generics_associated_types_problem.Contains.first := first;
    generics_associated_types_problem.Contains.last := last;
  }.
End Impl_generics_associated_types_problem_Contains_i32_t_i32_t_for_generics_associated_types_problem_Container_t.
End Impl_generics_associated_types_problem_Contains_i32_t_i32_t_for_generics_associated_types_problem_Container_t.

Parameter difference :
    forall
      {A B C : Set}
      {ℋ_0 :
        generics_associated_types_problem.Contains.Trait C (A := A) (B := B)},
    (M.Val (ref C)) -> M (M.Val i32.t).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M (M.Val unit).
