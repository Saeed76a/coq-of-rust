(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Impl_core_iter_traits_iterator_Iterator_for_iterators_Fibonacci.
  Definition Self := iterators.Fibonacci.
  
  Definition Item : Set := u32.
  
  Parameter next :
      forall `{H' : State.Trait},
      (mut_ref Self) -> M (H := H') (core.option.Option Item).
  
  Global Instance Method_next `{H' : State.Trait} : Notation.Dot "next" := {
    Notation.dot := next;
  }.
  
  Global Instance I : core.iter.traits.iterator.Iterator.Trait Self := {
    core.iter.traits.iterator.Iterator.Item := Item;
    core.iter.traits.iterator.Iterator.next `{H' : State.Trait} := next;
  }.
  Global Hint Resolve I : core.
End Impl_core_iter_traits_iterator_Iterator_for_iterators_Fibonacci.
