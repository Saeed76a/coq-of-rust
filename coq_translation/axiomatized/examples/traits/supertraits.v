(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Person.
  Section Person.
    Context `{State.Trait}.
    
    Class Trait (Self : Set) : Type := {
      name : (ref Self) -> M alloc.string.String;
    }.
    
  End Person.
End Person.

Module Student.
  Section Student.
    Context `{State.Trait}.
    
    Class Trait (Self : Set) {ℋ_0 : supertraits.Person.Trait Self} : Type := {
      university : (ref Self) -> M alloc.string.String;
    }.
    
  End Student.
End Student.

Module Programmer.
  Section Programmer.
    Context `{State.Trait}.
    
    Class Trait (Self : Set) : Type := {
      fav_language : (ref Self) -> M alloc.string.String;
    }.
    
  End Programmer.
End Programmer.

Module CompSciStudent.
  Section CompSciStudent.
    Context `{State.Trait}.
    
    Class Trait
        (Self : Set)
        {ℋ_0 : supertraits.Programmer.Trait Self}
        {ℋ_1 : supertraits.Student.Trait Self} :
        Type := {
      git_username : (ref Self) -> M alloc.string.String;
    }.
    
  End CompSciStudent.
End CompSciStudent.

Parameter comp_sci_student_greeting :
    forall
      `{State.Trait}
      {DynT : Set}
      {ℋ_0 : supertraits.CompSciStudent.Trait DynT},
    (ref DynT) -> M alloc.string.String.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{State.Trait}, M unit.
