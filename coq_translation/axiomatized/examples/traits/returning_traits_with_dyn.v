(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Sheep.
  Section Sheep.
    Context `{State.Trait}.
    
    Unset Primitive Projections.
    Record t : Set := { }.
    Global Set Primitive Projections.
  End Sheep.
End Sheep.
Definition Sheep `{State.Trait} : Set := M.val Sheep.t.

Module Cow.
  Section Cow.
    Context `{State.Trait}.
    
    Unset Primitive Projections.
    Record t : Set := { }.
    Global Set Primitive Projections.
  End Cow.
End Cow.
Definition Cow `{State.Trait} : Set := M.val Cow.t.

Module Animal.
  Section Animal.
    Context `{State.Trait}.
    
    Class Trait (Self : Set) : Type := {
      noise : (ref Self) -> M (ref str);
    }.
    
  End Animal.
End Animal.

Module
  Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.
  Section
    Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.
    Context `{State.Trait}.
    
    Definition Self : Set := returning_traits_with_dyn.Sheep.
    
    Parameter noise : (ref Self) -> M (ref str).
    
    Global Instance AssociatedFunction_noise :
      Notation.DoubleColon Self "noise" := {
      Notation.double_colon := noise;
    }.
    
    Global Instance I : returning_traits_with_dyn.Animal.Trait Self := {
      returning_traits_with_dyn.Animal.noise := noise;
    }.
  End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.
  Global Hint Resolve I : core.
End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Sheep.

Module Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.
  Section
    Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.
    Context `{State.Trait}.
    
    Definition Self : Set := returning_traits_with_dyn.Cow.
    
    Parameter noise : (ref Self) -> M (ref str).
    
    Global Instance AssociatedFunction_noise :
      Notation.DoubleColon Self "noise" := {
      Notation.double_colon := noise;
    }.
    
    Global Instance I : returning_traits_with_dyn.Animal.Trait Self := {
      returning_traits_with_dyn.Animal.noise := noise;
    }.
  End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.
  Global Hint Resolve I : core.
End Impl_returning_traits_with_dyn_Animal_for_returning_traits_with_dyn_Cow.

Parameter random_animal :
    forall `{State.Trait},
    f64 -> M (alloc.boxed.Box _ (* dyn *) alloc.boxed.Box.Default.A).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{State.Trait}, M unit.
