(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module  SomeType.
Section SomeType.
  Record t : Set := {
    x0 : u32.t;
  }.
  
  Global Instance Get_0 : Notation.Dot "0" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x0) : M _;
  }.
End SomeType.
End SomeType.

Module  OtherType.
Section OtherType.
  Record t : Set := {
    x0 : bool.t;
  }.
  
  Global Instance Get_0 : Notation.Dot "0" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x0) : M _;
  }.
End OtherType.
End OtherType.

Module  Impl_functions_order_SomeType_t.
Section Impl_functions_order_SomeType_t.
  Ltac Self := exact functions_order.SomeType.t.
  
  Parameter meth2 : (M.Val ltac:(Self)) -> M (M.Val unit).
  
  Global Instance AssociatedFunction_meth2 :
    Notation.DoubleColon ltac:(Self) "meth2" := {
    Notation.double_colon := meth2;
  }.
  
  Parameter meth1 : (M.Val ltac:(Self)) -> M (M.Val unit).
  
  Global Instance AssociatedFunction_meth1 :
    Notation.DoubleColon ltac:(Self) "meth1" := {
    Notation.double_colon := meth1;
  }.
End Impl_functions_order_SomeType_t.
End Impl_functions_order_SomeType_t.

Module  SomeTrait.
Section SomeTrait.
  Class Trait (Self : Set) : Type := {
    some_trait_foo : (ref ltac:(Self)) -> M unit;
    some_trait_bar : (ref ltac:(Self)) -> M unit;
  }.
  
End SomeTrait.
End SomeTrait.

Module  Impl_functions_order_SomeTrait_for_functions_order_SomeType_t.
Section Impl_functions_order_SomeTrait_for_functions_order_SomeType_t.
  Ltac Self := exact functions_order.SomeType.t.
  
  Parameter some_trait_bar : (M.Val (ref ltac:(Self))) -> M (M.Val unit).
  
  Global Instance AssociatedFunction_some_trait_bar :
    Notation.DoubleColon ltac:(Self) "some_trait_bar" := {
    Notation.double_colon := some_trait_bar;
  }.
  
  Parameter some_trait_foo : (M.Val (ref ltac:(Self))) -> M (M.Val unit).
  
  Global Instance AssociatedFunction_some_trait_foo :
    Notation.DoubleColon ltac:(Self) "some_trait_foo" := {
    Notation.double_colon := some_trait_foo;
  }.
  
  Global Instance ℐ : functions_order.SomeTrait.Trait ltac:(Self) := {
    functions_order.SomeTrait.some_trait_bar := some_trait_bar;
    functions_order.SomeTrait.some_trait_foo := some_trait_foo;
  }.
End Impl_functions_order_SomeTrait_for_functions_order_SomeType_t.
End Impl_functions_order_SomeTrait_for_functions_order_SomeType_t.

Module  Impl_functions_order_SomeTrait_for_functions_order_OtherType_t.
Section Impl_functions_order_SomeTrait_for_functions_order_OtherType_t.
  Ltac Self := exact functions_order.OtherType.t.
  
  Parameter some_trait_foo : (M.Val (ref ltac:(Self))) -> M (M.Val unit).
  
  Global Instance AssociatedFunction_some_trait_foo :
    Notation.DoubleColon ltac:(Self) "some_trait_foo" := {
    Notation.double_colon := some_trait_foo;
  }.
  
  Parameter some_trait_bar : (M.Val (ref ltac:(Self))) -> M (M.Val unit).
  
  Global Instance AssociatedFunction_some_trait_bar :
    Notation.DoubleColon ltac:(Self) "some_trait_bar" := {
    Notation.double_colon := some_trait_bar;
  }.
  
  Global Instance ℐ : functions_order.SomeTrait.Trait ltac:(Self) := {
    functions_order.SomeTrait.some_trait_foo := some_trait_foo;
    functions_order.SomeTrait.some_trait_bar := some_trait_bar;
  }.
End Impl_functions_order_SomeTrait_for_functions_order_OtherType_t.
End Impl_functions_order_SomeTrait_for_functions_order_OtherType_t.

Parameter depends_on_trait_impl :
    (M.Val u32.t) -> (M.Val bool.t) -> M (M.Val unit).

Module inner_mod.
  Parameter tar : M (M.Val unit).
  
  Parameter bar : M (M.Val unit).
  
  Module nested_mod.
    Parameter tack : M (M.Val unit).
    
    Parameter tick : M (M.Val unit).
  End nested_mod.
End inner_mod.

Parameter bar : M (M.Val unit).

Parameter tar : M (M.Val unit).

Module nested_mod.
  Parameter tack : M (M.Val unit).
  
  Parameter tick : M (M.Val unit).
End nested_mod.

Parameter tick : M (M.Val unit).

Parameter tack : M (M.Val unit).

Parameter foo : M (M.Val unit).

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M (M.Val unit).
