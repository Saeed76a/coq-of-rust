(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Person.
  Unset Primitive Projections.
  Record t `{State.Trait} : Set := {
    job : core.option.Option unpacking_options_via_question_mark.Job;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_job `{State.Trait} : Notation.Dot "job" := {
    Notation.dot x := let* x := M.read x in Pure x.(job) : M _;
  }.
  Global Instance Get_AF_job `{State.Trait} : Notation.DoubleColon t "job" := {
    Notation.double_colon x := let* x := M.read x in Pure x.(job) : M _;
  }.
End Person.
Definition Person `{State.Trait} : Set := M.val (Person.t).

Module Job.
  Unset Primitive Projections.
  Record t `{State.Trait} : Set := {
    phone_number
      :
      core.option.Option unpacking_options_via_question_mark.PhoneNumber;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_phone_number `{State.Trait}
    : Notation.Dot "phone_number" := {
    Notation.dot x := let* x := M.read x in Pure x.(phone_number) : M _;
  }.
  Global Instance Get_AF_phone_number `{State.Trait}
    : Notation.DoubleColon t "phone_number" := {
    Notation.double_colon x
      :=
      let* x := M.read x in Pure x.(phone_number) : M _;
  }.
End Job.
Definition Job `{State.Trait} : Set := M.val (Job.t).

Module Impl_core_clone_Clone_for_unpacking_options_via_question_mark_Job.
  Definition Self `{State.Trait} := unpacking_options_via_question_mark.Job.
  
  Parameter clone :
      forall `{State.Trait},
      (ref Self) -> M unpacking_options_via_question_mark.Job.
  
  Global Instance Method_clone `{State.Trait} : Notation.Dot "clone" := {
    Notation.dot := clone;
  }.
  
  Global Instance I `{State.Trait} : core.clone.Clone.Trait Self := {
    core.clone.Clone.clone := clone;
  }.
  Global Hint Resolve I : core.
End Impl_core_clone_Clone_for_unpacking_options_via_question_mark_Job.

Module Impl_core_marker_Copy_for_unpacking_options_via_question_mark_Job.
  Definition Self `{State.Trait} := unpacking_options_via_question_mark.Job.
  
  Global Instance I `{State.Trait} : core.marker.Copy.Trait Self := {
  }.
  Global Hint Resolve I : core.
End Impl_core_marker_Copy_for_unpacking_options_via_question_mark_Job.

Module PhoneNumber.
  Unset Primitive Projections.
  Record t `{State.Trait} : Set := {
    area_code : core.option.Option u8;
    number : u32;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_area_code `{State.Trait} : Notation.Dot "area_code" := {
    Notation.dot x := let* x := M.read x in Pure x.(area_code) : M _;
  }.
  Global Instance Get_AF_area_code `{State.Trait}
    : Notation.DoubleColon t "area_code" := {
    Notation.double_colon x := let* x := M.read x in Pure x.(area_code) : M _;
  }.
  Global Instance Get_number `{State.Trait} : Notation.Dot "number" := {
    Notation.dot x := let* x := M.read x in Pure x.(number) : M _;
  }.
  Global Instance Get_AF_number `{State.Trait}
    : Notation.DoubleColon t "number" := {
    Notation.double_colon x := let* x := M.read x in Pure x.(number) : M _;
  }.
End PhoneNumber.
Definition PhoneNumber `{State.Trait} : Set := M.val (PhoneNumber.t).

Module
  Impl_core_clone_Clone_for_unpacking_options_via_question_mark_PhoneNumber.
  Definition Self `{State.Trait} :=
    unpacking_options_via_question_mark.PhoneNumber.
  
  Parameter clone :
      forall `{State.Trait},
      (ref Self) -> M unpacking_options_via_question_mark.PhoneNumber.
  
  Global Instance Method_clone `{State.Trait} : Notation.Dot "clone" := {
    Notation.dot := clone;
  }.
  
  Global Instance I `{State.Trait} : core.clone.Clone.Trait Self := {
    core.clone.Clone.clone := clone;
  }.
  Global Hint Resolve I : core.
End Impl_core_clone_Clone_for_unpacking_options_via_question_mark_PhoneNumber.

Module
  Impl_core_marker_Copy_for_unpacking_options_via_question_mark_PhoneNumber.
  Definition Self `{State.Trait} :=
    unpacking_options_via_question_mark.PhoneNumber.
  
  Global Instance I `{State.Trait} : core.marker.Copy.Trait Self := {
  }.
  Global Hint Resolve I : core.
End Impl_core_marker_Copy_for_unpacking_options_via_question_mark_PhoneNumber.

Module Impl_unpacking_options_via_question_mark_Person.
  Definition Self `{State.Trait} : Set :=
    unpacking_options_via_question_mark.Person.
  
  Parameter work_phone_area_code :
      forall `{State.Trait},
      (ref Self) -> M (core.option.Option u8).
  
  Global Instance Method_work_phone_area_code `{State.Trait} :
    Notation.Dot "work_phone_area_code" := {
    Notation.dot := work_phone_area_code;
  }.
End Impl_unpacking_options_via_question_mark_Person.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : forall `{State.Trait}, M unit.
