(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Parameter reverse : (M.Val (i32.t * bool.t)) -> M (M.Val (bool.t * i32.t)).

Module  Matrix.
Section Matrix.
  Record t : Set := {
    x0 : f32.t;
    x1 : f32.t;
    x2 : f32.t;
    x3 : f32.t;
  }.
  
  Global Instance Get_0 : Notation.Dot "0" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x0) : M _;
  }.
  Global Instance Get_1 : Notation.Dot "1" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x1) : M _;
  }.
  Global Instance Get_2 : Notation.Dot "2" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x2) : M _;
  }.
  Global Instance Get_3 : Notation.Dot "3" := {
    Notation.dot x := let* x := M.read x in M.alloc x.(x3) : M _;
  }.
End Matrix.
End Matrix.
Definition Matrix : Set := M.Val Matrix.t.

Module  Impl_core_fmt_Debug_for_tuples_Matrix_t.
Section Impl_core_fmt_Debug_for_tuples_Matrix_t.
  Ltac Self := exact tuples.Matrix.t.
  
  Parameter fmt :
      (M.Val (ref ltac:(Self))) ->
        (M.Val (mut_ref core.fmt.Formatter.t)) ->
        M (M.Val ltac:(core.fmt.Result)).
  
  Global Instance AssociatedFunction_fmt :
    Notation.DoubleColon ltac:(Self) "fmt" := {
    Notation.double_colon := fmt;
  }.
  
  Global Instance ‚Ñê : core.fmt.Debug.Trait ltac:(Self) := {
    core.fmt.Debug.fmt := fmt;
  }.
End Impl_core_fmt_Debug_for_tuples_Matrix_t.
End Impl_core_fmt_Debug_for_tuples_Matrix_t.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Parameter main : M (M.Val unit).
