(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Foo.
  Unset Primitive Projections.
  Record t `{State.Trait} : Set := {
    test : bool;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_test `{State.Trait} : Notation.Dot "test" := {
    Notation.dot x := let* x := M.read x in Pure x.(test) : M _;
  }.
  Global Instance Get_AF_test `{State.Trait}
    : Notation.DoubleColon t "test" := {
    Notation.double_colon x := let* x := M.read x in Pure x.(test) : M _;
  }.
End Foo.
Definition Foo `{State.Trait} : Set := M.val (Foo.t).

Module Bar.
  Unset Primitive Projections.
  Record t `{State.Trait} : Set := {
    test : alloc.string.String;
  }.
  Global Set Primitive Projections.
  
  Global Instance Get_test `{State.Trait} : Notation.Dot "test" := {
    Notation.dot x := let* x := M.read x in Pure x.(test) : M _;
  }.
  Global Instance Get_AF_test `{State.Trait}
    : Notation.DoubleColon t "test" := {
    Notation.double_colon x := let* x := M.read x in Pure x.(test) : M _;
  }.
End Bar.
Definition Bar `{State.Trait} : Set := M.val (Bar.t).

Module BarTrait.
  Class Trait (Self : Set) `{State.Trait} : Type := {
    show : Self -> M alloc.string.String;
  }.
  
  Global Instance Method_show `{State.Trait} `(Trait) : Notation.Dot "show" := {
    Notation.dot := show;
  }.
End BarTrait.

Module
  Impl_const_underscore_expression_BarTrait_for_const_underscore_expression_Bar.
  Definition Self `{State.Trait} := const_underscore_expression.Bar.
  
  Parameter show : forall `{State.Trait}, Self -> M alloc.string.String.
  
  Global Instance Method_show `{State.Trait} : Notation.Dot "show" := {
    Notation.dot := show;
  }.
  
  Global Instance I `{State.Trait}
    : const_underscore_expression.BarTrait.Trait Self := {
    const_underscore_expression.BarTrait.show := show;
  }.
  Global Hint Resolve I : core.
End
  Impl_const_underscore_expression_BarTrait_for_const_underscore_expression_Bar.
