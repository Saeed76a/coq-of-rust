(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Foo.
  Unset Primitive Projections.
  Class Trait (Self : Set) : Set := {
  }.
  Global Set Primitive Projections.
End Foo.

Module Bar.
  Unset Primitive Projections.
  Class Trait (Self : Set) : Set := {
  }.
  Global Set Primitive Projections.
End Bar.

Module Tar.
  Unset Primitive Projections.
  Class Trait (Self : Set) : Set := {
  }.
  Global Set Primitive Projections.
End Tar.

Module SomeTrait.
  Class Trait (Self : Set) {SomeType : Set} : Set := {
    some_fn : unit -> (M unit);
  }.
  
  Global Instance Method_SomeType `(Trait) : Notation.Dot "SomeType" := {
    Notation.dot := SomeType;
  }.
  Global Instance Method_some_fn `(Trait) : Notation.Dot "some_fn" := {
    Notation.dot := some_fn;
  }.
End SomeTrait.

Module SomeType.
  Record t : Set := { _ : u32;}.
  
  Global Instance Get_0 : Notation.Dot 0 := {
    Notation.dot '(Build_t x0) := x0;
  }.
End SomeType.
Definition SomeType := SomeType.t.

Module Impl_traits_parms_SomeTrait_for_traits_parms_SomeType.
  Definition Self := traits_parms.SomeType.
  
  Definition some_fn (_ : unit) : M unit := Pure tt.
  
  Global Instance AssociatedFunction_some_fn :
    Notation.DoubleColon Self "some_fn" := {
    Notation.double_colon := some_fn;
  }.
  
  Global Instance I : traits_parms.SomeTrait.Trait Self := {
    traits_parms.SomeTrait.some_fn := some_fn;
  }.
End Impl_traits_parms_SomeTrait_for_traits_parms_SomeType.
