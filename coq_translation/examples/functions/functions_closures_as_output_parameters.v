(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition create_fn (_ : unit) : M OpaqueDef :=
  let* text := "Fn".["to_owned"] in
  Pure
    (fun  =>
      let* _ :=
        let* α0 := format_argument::["new_display"] (addr_of text) in
        let* α1 :=
          format_arguments::["new_v1"]
            (addr_of [ "This is a: "; "
" ])
            (addr_of [ α0 ]) in
        std.io.stdio._print α1 in
      Pure tt).

Error OpaqueTy.

Definition create_fnmut (_ : unit) : M OpaqueDef :=
  let* text := "FnMut".["to_owned"] in
  Pure
    (fun  =>
      let* _ :=
        let* α0 := format_argument::["new_display"] (addr_of text) in
        let* α1 :=
          format_arguments::["new_v1"]
            (addr_of [ "This is a: "; "
" ])
            (addr_of [ α0 ]) in
        std.io.stdio._print α1 in
      Pure tt).

Error OpaqueTy.

Definition create_fnonce (_ : unit) : M OpaqueDef :=
  let* text := "FnOnce".["to_owned"] in
  Pure
    (fun  =>
      let* _ :=
        let* α0 := format_argument::["new_display"] (addr_of text) in
        let* α1 :=
          format_arguments::["new_v1"]
            (addr_of [ "This is a: "; "
" ])
            (addr_of [ α0 ]) in
        std.io.stdio._print α1 in
      Pure tt).

Error OpaqueTy.

(* #[allow(dead_code)] - function was ignored by the compiler *)
Definition main (_ : unit) : M unit :=
  let* fn_plain := functions_closures_as_output_parameters.create_fn tt in
  let* fn_mut := functions_closures_as_output_parameters.create_fnmut tt in
  let* fn_once := functions_closures_as_output_parameters.create_fnonce tt in
  let* _ := fn_plain tt in
  let* _ := fn_mut tt in
  let* _ := fn_once tt in
  Pure tt.
