(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Status.
  Inductive t : Set :=
  | Rich
  | Poor.
End Status.
Definition Status := Status.t.

Module Work.
  Inductive t : Set :=
  | Civilian
  | Soldier.
End Work.
Definition Work := Work.t.

Definition main (_ : unit) : unit :=
  let status := Poor in
  let work := Civilian in
  match status with
  | Rich =>
    _crate.io._print
      (_crate.fmt.Arguments::["new_v1"]
        [ "The rich have lots of money!\n" ]
        [  ]) ;;
    tt
  | Poor =>
    _crate.io._print
      (_crate.fmt.Arguments::["new_v1"]
        [ "The poor have no money...\n" ]
        [  ]) ;;
    tt
  end ;;
  match work with
  | Civilian =>
    _crate.io._print
      (_crate.fmt.Arguments::["new_v1"] [ "Civilians work!\n" ] [  ]) ;;
    tt
  | Soldier =>
    _crate.io._print
      (_crate.fmt.Arguments::["new_v1"] [ "Soldiers fight!\n" ] [  ]) ;;
    tt
  end.

Module Poor := crate.Status.Poor.

Module Rich := crate.Status.Rich.

Import crate.Work.
