(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Arc := std.sync.Arc.
Definition Arc := Arc.t.

Module thread := std.thread.

Module Duration := std.time.Duration.
Definition Duration := Duration.t.

Definition main (_ : unit) : unit :=
  let apple := Arc::["new"] "the same apple" in
  match LangItem {| Range.start := 0; Range.end := 10; |} with
  | iter =>
    loop
      match LangItem iter with
      | None => Break
      | Some {| Some.0 := _; |} =>
        let apple := Arc::["clone"] apple in
        thread.spawn
          (fun  =>
            _crate.io._print
              (_crate.fmt.Arguments::["new_v1"]
                [ ""; "\n" ]
                [ _crate.fmt.ArgumentV1::["new_debug"] apple ]) ;;
            tt ;;
            tt) ;;
        tt
      end ;;
      tt
      from
      for
  end ;;
  thread.sleep (Duration::["from_secs"] 1) ;;
  tt.

Definition main (_ : unit) : unit := test.
