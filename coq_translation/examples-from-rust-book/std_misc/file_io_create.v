(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Definition LOREM_IPSUM : ref str :=
  "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\nconsequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\ncillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\nproident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n".

Module File := std.fs.File.
Definition File := File.t.

Import std.io.prelude.

Module Path := std.path.Path.
Definition Path := Path.t.

Definition main (_ : unit) : unit :=
  let path := Path::["new"] "lorem_ipsum.txt" in
  let display := path.["display"] in
  let file :=
    match File::["create"] path with
    | Err.Build_t why =>
      _crate.rt.panic_fmt
        (_crate.fmt.Arguments::["new_v1"]
          [ "couldn't create "; ": " ]
          [
            _crate.fmt.ArgumentV1::["new_display"] display;
            _crate.fmt.ArgumentV1::["new_display"] why
          ])
    | Ok.Build_t file => file
    end in
  match file.["write_all"] LOREM_IPSUM.["as_bytes"] with
  | Err.Build_t why =>
    _crate.rt.panic_fmt
      (_crate.fmt.Arguments::["new_v1"]
        [ "couldn't write to "; ": " ]
        [
          _crate.fmt.ArgumentV1::["new_display"] display;
          _crate.fmt.ArgumentV1::["new_display"] why
        ])
  | Ok.Build_t _ =>
    _crate.io._print
      (_crate.fmt.Arguments::["new_v1"]
        [ "successfully wrote to "; "\n" ]
        [ _crate.fmt.ArgumentV1::["new_display"] display ]) ;;
    tt
  end.
