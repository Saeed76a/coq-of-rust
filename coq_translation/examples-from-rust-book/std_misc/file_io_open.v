(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module File := std.fs.File.
Definition File := File.t.

Import std.io.prelude.

Module Path := std.path.Path.
Definition Path := Path.t.

Definition main (_ : unit) : unit :=
  let path := Path::["new"] "hello.txt" in
  let display := path.["display"] in
  let file :=
    match File::["open"] path with
    | Err.Build_t why =>
      _crate.rt.panic_fmt
        (_crate.fmt.Arguments::["new_v1"]
          [ "couldn't open "; ": " ]
          [
            _crate.fmt.ArgumentV1::["new_display"] display;
            _crate.fmt.ArgumentV1::["new_display"] why
          ])
    | Ok.Build_t file => file
    end in
  let s := String::["new"] tt in
  match file.["read_to_string"] s with
  | Err.Build_t why =>
    _crate.rt.panic_fmt
      (_crate.fmt.Arguments::["new_v1"]
        [ "couldn't read "; ": " ]
        [
          _crate.fmt.ArgumentV1::["new_display"] display;
          _crate.fmt.ArgumentV1::["new_display"] why
        ])
  | Ok.Build_t _ =>
    _crate.io._print
      (_crate.fmt.Arguments::["new_v1"]
        [ ""; " contains:\n" ]
        [
          _crate.fmt.ArgumentV1::["new_display"] display;
          _crate.fmt.ArgumentV1::["new_display"] s
        ]) ;;
    tt
  end.

Definition main (_ : unit) : unit := test.
