(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module A.
  Inductive t : Set := Build.
End A.
Definition A := A.t.

Module Single.
  Record t : Set := { _ : A;}.
  
  Global Instance Get_0 : Notation.Dot 0 := {
    Notation.dot '(Build_t x0) := x0;
  }.
End Single.
Definition Single := Single.t.

Module SingleGen.
  Record t : Set := { _ : T;}.
  
  Global Instance Get_0 : Notation.Dot 0 := {
    Notation.dot '(Build_t x0) := x0;
  }.
End SingleGen.
Definition SingleGen := SingleGen.t.

Definition main (_ : unit) : unit :=
  let _s := Single.Build A.Build in
  let _char := SingleGen.Build a in
  let _t := SingleGen.Build A.Build in
  let _i32 := SingleGen.Build 6 in
  let _char := SingleGen.Build a in
  tt.
