(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Debug := std.fmt.Debug.

Module Display := std.fmt.Display.

Definition compare_prints
    {T : Set}
    `{Debug.Trait T}
    `{Display.Trait T}
    (t : ref T)
    : unit :=
  _crate.io._print
    (_crate.fmt.Arguments::["new_v1"]
      [ "Debug: `"; "`\n" ]
      [ _crate.fmt.ArgumentV1::["new_debug"] t ]) ;;
  tt ;;
  _crate.io._print
    (_crate.fmt.Arguments::["new_v1"]
      [ "Display: `"; "`\n" ]
      [ _crate.fmt.ArgumentV1::["new_display"] t ]) ;;
  tt ;;
  tt.

Definition compare_types
    {T U : Set}
    `{Debug.Trait T}
    `{Debug.Trait U}
    (t : ref T)
    (u : ref U)
    : unit :=
  _crate.io._print
    (_crate.fmt.Arguments::["new_v1"]
      [ "t: `"; "`\n" ]
      [ _crate.fmt.ArgumentV1::["new_debug"] t ]) ;;
  tt ;;
  _crate.io._print
    (_crate.fmt.Arguments::["new_v1"]
      [ "u: `"; "`\n" ]
      [ _crate.fmt.ArgumentV1::["new_debug"] u ]) ;;
  tt ;;
  tt.

Definition main (_ : unit) : unit :=
  let string := "words" in
  let array := [ 1; 2; 3 ] in
  let vec := Slice::["into_vec"] [ 1; 2; 3 ] in
  compare_prints string ;;
  compare_types array vec ;;
  tt.
